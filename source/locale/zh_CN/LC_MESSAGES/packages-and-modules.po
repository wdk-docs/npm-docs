# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the npm-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: npm-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-10 22:02+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/packages-and-modules/about-audit-reports.rst:2
msgid "About audit reports"
msgstr "关于审计报告"

#: ../../source/packages-and-modules/about-audit-reports.rst:4
msgid ""
"About audit reports Audit reports contain tables of information about "
"security vulnerabilities in your project’s dependencies to help you fix "
"the vulnerability or troubleshoot further."
msgstr "关于审计报告审计报告包含有关项目依赖项中的安全漏洞的信息表，以帮助您修复漏洞或进一步排除故障。"

#: ../../source/packages-and-modules/about-audit-reports.rst:11
msgid "Vulnerability table fields"
msgstr "漏洞表字段"

#: ../../source/packages-and-modules/about-audit-reports.rst:13
#: ../../source/packages-and-modules/about-audit-reports.rst:22
#: ../../source/packages-and-modules/about-audit-reports.rst:27
msgid "Severity"
msgstr "严重"

#: ../../source/packages-and-modules/about-audit-reports.rst:14
#: ../../source/packages-and-modules/about-audit-reports.rst:39
msgid "Description"
msgstr "描述"

#: ../../source/packages-and-modules/about-audit-reports.rst:15
#: ../../source/packages-and-modules/about-audit-reports.rst:44
msgid "Package"
msgstr "包"

#: ../../source/packages-and-modules/about-audit-reports.rst:16
#: ../../source/packages-and-modules/about-audit-reports.rst:49
msgid "Patched in"
msgstr "补丁"

#: ../../source/packages-and-modules/about-audit-reports.rst:17
#: ../../source/packages-and-modules/about-audit-reports.rst:54
msgid "Dependency of"
msgstr "依赖性"

#: ../../source/packages-and-modules/about-audit-reports.rst:18
#: ../../source/packages-and-modules/about-audit-reports.rst:59
msgid "Path"
msgstr "路径"

#: ../../source/packages-and-modules/about-audit-reports.rst:19
#: ../../source/packages-and-modules/about-audit-reports.rst:64
msgid "More info"
msgstr "更多信息"

#: ../../source/packages-and-modules/about-audit-reports.rst:24
msgid ""
"The severity of the vulnerability, determined by the impact and "
"exploitability of the vulnerability in its most common use case."
msgstr "漏洞的严重性，由最常见用例中漏洞的影响和可利用性决定。"

#: ../../source/packages-and-modules/about-audit-reports.rst:27
msgid "Recommended action"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:29
msgid "Critical"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:29
msgid "Address immediately"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:31
msgid "High"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:31
msgid "Address as quickly as possible"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:33
msgid "Moderate"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:33
msgid "Address as time allows"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:35
msgid "Low"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:35
msgid "Address at your discretion"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:41
msgid "The description of the vulnerability. For example, “Denial of service”."
msgstr "漏洞的描述。例如，“拒绝服务”。"

#: ../../source/packages-and-modules/about-audit-reports.rst:46
msgid "The name of the package that contains the vulnerability."
msgstr "包含此漏洞的程序包的名称。"

#: ../../source/packages-and-modules/about-audit-reports.rst:51
msgid ""
"The semantic version range that describes which versions contain a fix "
"for the vulnerability."
msgstr "语义版本范围，描述哪些版本包含针对漏洞的修复程序。"

#: ../../source/packages-and-modules/about-audit-reports.rst:56
msgid "The module that the package with the vulnerability depends on."
msgstr "具有漏洞的软件包所依赖的模块。"

#: ../../source/packages-and-modules/about-audit-reports.rst:61
msgid "The path to the code that contains the vulnerability."
msgstr "包含漏洞的代码的路径。"

#: ../../source/packages-and-modules/about-audit-reports.rst:66
msgid "A link to the security report."
msgstr "安全报告的链接。"

#: ../../source/packages-and-modules/about-package-readme-files.rst:2
msgid "About package README files"
msgstr "关于包README文件"

#: ../../source/packages-and-modules/about-package-readme-files.rst:4
msgid ""
"To help others find your packages on npm and have a good experience using"
" your code in their projects, we recommend including a README file in "
"your package directory. Your README file may include directions for "
"installing, configuring, and using the code in your package, as well as "
"any other information a user may find helpful. The README file will be "
"shown on the package page."
msgstr ""
"为了帮助其他人在npm上找到你的软件包，并且在项目中使用你的代码有很好的经验，我们建议在你的软件包目录中包含一个README文件。您的README文件可能包含安装，配置和使用软件包中代码的说明，以及用户可能会发现有用的任何其他信息。"
" README文件将显示在包页面上。"

#: ../../source/packages-and-modules/about-package-readme-files.rst:6
msgid ""
"An npm package README file must be in the root-level directory of the "
"package."
msgstr "npm包README文件必须位于包的根级目录中。"

#: ../../source/packages-and-modules/about-package-readme-files.rst:9
msgid "Creating and adding a README.md file to a package"
msgstr "创建README.md文件并将其添加到包中"

#: ../../source/packages-and-modules/about-package-readme-files.rst:11
msgid ""
"In a text editor, in your package root directory, create a file called "
"README.md."
msgstr "在文本编辑器的包根目录中，创建一个名为README.md的文件。"

#: ../../source/packages-and-modules/about-package-readme-files.rst:12
msgid "In the README.md file, add useful information about your package."
msgstr "在README.md文件中，添加有关包的有用信息。"

#: ../../source/packages-and-modules/about-package-readme-files.rst:13
#: ../../source/packages-and-modules/about-package-readme-files.rst:22
msgid "Save the README.md file."
msgstr "Save the README.md file."

#: ../../source/packages-and-modules/about-package-readme-files.rst:15
msgid ""
"The file extension .md indicates a Markdown file. For more information "
"about Markdown, see the GitHub Guide \"Mastering Markdown\"."
msgstr ""
"文件扩展名 .md 表示Markdown文件。有关Markdown的更多信息，请参阅GitHub指南 \"Mastering Markdown\""
" 。"

#: ../../source/packages-and-modules/about-package-readme-files.rst:18
msgid "Updating an existing package README file"
msgstr "更新现有包README文件"

#: ../../source/packages-and-modules/about-package-readme-files.rst:19
msgid ""
"The README file will only be updated on the package page when you publish"
" a new version of your package. To update your README file:"
msgstr "只有在发布新版本的软件包时才会在软件包页面上更新README文件。要更新README文件:"

#: ../../source/packages-and-modules/about-package-readme-files.rst:21
msgid "In a text editor, update the contents of the README.md file."
msgstr "在文本编辑器中，更新README.md文件的内容。"

#: ../../source/packages-and-modules/about-package-readme-files.rst:23
msgid ""
"On the command line, in the package root directory, run the following "
"commands::"
msgstr "在命令行上的程序包根目录中，运行以下命令::"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:2
msgid "About packages and modules"
msgstr "包和模块"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:4
msgid ""
"The npm registry contains packages, many of which are also Node modules, "
"or contain Node modules. Read on to understand how they differ and how "
"they interact."
msgstr "npm注册表包含包，其中许多也是Node模块，或包含Node模块。继续阅读以了解它们之间的区别以及它们如何相互作用"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:8
msgid "About packages"
msgstr "关于包"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:10
msgid ""
"A **package** is a file or directory that is described by a "
"**package.json** file. A package must contain a **package.json** file in "
"order to be published to the npm registry. For more information on "
"creating a **package.json** file, see :doc:`creating-a-package-json-file`"
" ."
msgstr ""
"一个 **包** 是由 **package.json** 文件描述的文件或目录。包必须包含 **package.json** "
"文件才能发布到npm注册表。有关创建 **package.json** 文件的更多信息，请参阅 :doc:`creating-a-package-"
"json-file` 。"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:14
msgid ""
"Packages can be unscoped or scoped to a user or Org, and scoped packages "
"can be private or public. For more information, see"
msgstr "包可以是无范围的或作用域的用户或组织，范围包可以是私有的或公共的。有关更多信息，请参阅"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:17
msgid ":doc:`about-scopes`"
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:18
msgid ":doc:`about-private-packages`"
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:19
msgid ":doc:`package-scope-access-level-and-visibility`"
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:22
msgid "About package formats"
msgstr "关于包格式"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:24
msgid "A package is any of the following:"
msgstr "包是以下任何一种:"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:26
msgid "A folder containing a program described by a **package.json** file."
msgstr "包含由 **package.json** 文件描述的程序的文件夹。"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:27
msgid "A gzipped tarball containing (a)."
msgstr "包含(a)的gzipped tarball。"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:28
msgid "A URL that resolves to (b)."
msgstr "解析为(b)的URL。"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:29
msgid "A **<name>@<version>** that is published on the registry with (c)."
msgstr "使用(c)在注册表上发布的 **<name>@<version>**。"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:30
msgid "A **<name>@<tag>** that points to (d)."
msgstr "**<name>@<tag>** 指向(d)。"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:31
msgid "A **<name>** that has a **latest** tag satisfying (e)."
msgstr "**<name>** 具有满足(e)的 **最新** 标签。"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:32
msgid "A **git** url that, when cloned, results in (a)."
msgstr "一个 **git** url，当克隆时，产生(a)。"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:35
msgid "npm package git URL formats"
msgstr "npm 包 git URL 格式"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:37
msgid "Git URLs used for npm packages can be formatted in the following ways:"
msgstr "用于 npm 包的 Git URL 可以通过以下方式进行格式化:"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:39
msgid "git://github.com/user/project.git#commit-ish"
msgstr "git://github.com/user/project.git#commit-ish"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:40
msgid "git+ssh://user@hostname:project.git#commit-ish"
msgstr "git+ssh://user@hostname:project.git#commit-ish"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:41
msgid "git+http://user@hostname/project/blah.git#commit-ish"
msgstr "git+http://user@hostname/project/blah.git#commit-ish"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:42
msgid "git+https://user@hostname/project/blah.git#commit-ish"
msgstr "git+https://user@hostname/project/blah.git#commit-ish"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:44
msgid ""
"The **commit-ish** can be any tag, sha, or branch that can be supplied as"
" an argument to **git checkout**. The default **commit-ish** is "
"**master**."
msgstr ""
"**commit-ish** 可以是任何标签，sha或分支，可以作为 **git checkout** 的参数提供。默认的 **commit-"
"ish** 是 **master**。"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:48
msgid "About modules"
msgstr "关于模块"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:50
msgid ""
"A **module** is any file or directory in the **node_modules** directory "
"that can be loaded by the Node.js **require()** function."
msgstr "**模块** 是 **node_modules** 目录中的任何文件或目录，可以由 Node.js **require()** 函数加载。"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:52
msgid ""
"To be loaded by the Node.js **require()** function, a module must be one "
"of the following:"
msgstr "要由Node.js **require()** 函数加载，模块必须是以下之一:"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:54
msgid "A folder with a **package.json** file containing a \"**main**\" field."
msgstr "A folder with a **package.json** file containing a \"**main**\" field."

#: ../../source/packages-and-modules/about-packages-and-modules.rst:55
msgid "A folder with an **index.js** file in it."
msgstr "其中包含 **index.js** 文件的文件夹。"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:56
msgid "A JavaScript file."
msgstr "一个JavaScript文件。"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:59
msgid ""
"Since modules are not required to have a **package.json** file, not all "
"modules are packages. Only modules that have a **package.json** file are "
"also packages."
msgstr "由于模块不需要具有 **package.json** 文件，因此并非所有模块都是包。只有具有 **package.json** 文件的模块也是包。"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:62
msgid ""
"In the context of a Node program, the **module** is also the thing that "
"was loaded from a file. For example, in the following program:"
msgstr "在Node程序的上下文中，**模块** 也是从文件加载的东西。例如，在以下程序中:"

#: ../../source/packages-and-modules/about-packages-and-modules.rst:69
msgid "we might say that “The variable **req** refers to the **request** module”."
msgstr "我们可能会说“变量 **req** 指的是 **request** 模块”。"

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:2
msgid "About package PGP signatures"
msgstr "关于包PGP签名"

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:4
msgid ""
"To increase confidence in the npm public registry, we add our PGP "
"signature to package metadata and publicize our public PGP key on "
"Keybase. Our Keybase account is “npmregistry” and our public PGP key can "
"be found at https://keybase.io/npmregistry/pgp_keys.asc"
msgstr "为了增加对npm公共注册表的信心，我们将PGP签名添加到包元数据并在Keybase上公布我们的公共PGP密钥。我们的Keybase帐户是“npmregistry”，我们的公共PGP密钥可以在https://keybase.io/npmregistry/pgp_keys.asc找到"

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:6
msgid ""
"You can use the package PGP signature and our public PGP key to verify "
"that the same entity who published the key (npm, Inc.) also signed the "
"package you downloaded from the npm public registry. For more "
"information, see “Verifying the PGP signature of a package from the npm "
"public registry”."
msgstr ""

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:9
msgid "Tools we use"
msgstr "我们使用的工具"

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:12
msgid "openpgpjs"
msgstr "openpgpjs"

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:14
msgid ""
"To generate PGP signatures, we use openpgpjs, a pure JavaScript "
"implementation of OpenPGP. To learn more about openpgpjs, see "
"https://openpgpjs.org/."
msgstr "为了生成PGP签名，我们使用openpgpjs，一个OpenPGP的纯JavaScript实现。要了解有关openpgpjs的更多信息，请参阅https://openpgpjs.org/。"

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:17
msgid "Keybase"
msgstr "Keybase"

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:19
msgid ""
"We use Keybase to publicize our PGP key and give you confidence that the "
"npm registry you install from is the same registry that signs packages."
msgstr "我们使用Keybase来宣传我们的PGP密钥，并让您相信您安装的npm注册表与签署包的注册表相同。"

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:21
msgid ""
"Keybase offers two advantages over the core OpenPGP experience that move "
"us to recommend it to you:"
msgstr "Keybase提供了超越核心OpenPGP体验的两个优势，促使我们向您推荐:"

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:23
msgid ""
"The Keybase application and CLI provide an excellent user experience for "
"PGP, which can be intimidating for newcomers. Keybase manages and "
"displays social proofs that the entity that controls a specific PGP key "
"also controls accounts on social media and other places. These proofs "
"help you determine whether you can trust an account. We’ve established "
"proofs on Keybase that we control @npmjs on Twitter, the domain "
"npmjs.com, and the domain npmjs.org. Verifying these proofs won’t tell "
"you who owns those domains, but it does establish that the same entity "
"controls them and the PGP key advertised on Keybase."
msgstr ""

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:27
msgid ""
"You can also observe that members of npm’s executive and technical teams "
"are among the people who have chosen to follow “npmregistry” on "
"Keybase—for example, CJ Silverio (ceej), Isaac Schlueter (isaacs), Adam "
"Baldwin (adam_baldwin), and Kat Marchán (zkat)."
msgstr ""
"您还可以观察到，npm执行和技术团队的成员是选择在Keybase上关注“npmregistry”的人之一 - 例如，CJ "
"Silverio(ceej)，Isaac Schlueter(isaacs)，Adam Baldwin(adam_baldwin)和Kat "
"Marchán(zkat)。"

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:29
msgid ""
"If you install Keybase and create an account, you can follow npmregistry "
"yourself and obtain a local copy of the registry’s public key. For more "
"information, and to verify the PGP signature of a specific package "
"version from the npm public registry, see “Verifying the PGP signature "
"for a package from the npm public registry”."
msgstr ""

#: ../../source/packages-and-modules/about-private-packages.rst:2
msgid "About private packages"
msgstr "关于私人包"

#: ../../source/packages-and-modules/about-private-packages.rst:4
#, fuzzy
msgid "To use private packages, you must::"
msgstr "关于私人包"

#: ../../source/packages-and-modules/about-private-packages.rst:9
msgid ""
"With npm private packages, you can use the npm registry to host code that"
" is only visible to you and chosen collaborators, allowing you to manage "
"and use private code alongside public code in your projects."
msgstr ""

#: ../../source/packages-and-modules/about-private-packages.rst:11
msgid ""
"Private packages always have a scope, and scoped packages are private by "
"default."
msgstr "私有包始终具有范围，默认情况下范围包是私有的。"

#: ../../source/packages-and-modules/about-private-packages.rst:13
msgid ""
"**User-scoped private packages** can only be accessed by you and "
"collaborators to whom you have granted read or read/write access. For "
"more information, see :doc:`adding-collaborators-to-private-packages-"
"owned-by-a-user-account`."
msgstr ""

#: ../../source/packages-and-modules/about-private-packages.rst:14
msgid ""
"**Org-scoped private packages** can only be accessed by teams that have "
"been granted read or read/write access. For more information, see "
":doc:`../org/managing-team-access-to-org-packages`."
msgstr ""

#: ../../source/packages-and-modules/about-private-packages.rst:17
#: ../../source/packages-and-modules/about-public-packages.rst:13
msgid "Next steps"
msgstr "下一步"

#: ../../source/packages-and-modules/about-private-packages.rst:19
msgid ":doc:`creating-and-publishing-private-packages`"
msgstr ""

#: ../../source/packages-and-modules/about-private-packages.rst:20
#: ../../source/packages-and-modules/about-public-packages.rst:17
msgid ":doc:`using-npm-packages-in-your-projects`"
msgstr ""

#: ../../source/packages-and-modules/about-private-packages.rst:23
#: ../../source/packages-and-modules/about-semantic-versioning.rst:48
#: ../../source/packages-and-modules/creating-node-js-modules.rst:52
#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:54
#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:106
#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:57
msgid "Resources"
msgstr "资源"

#: ../../source/packages-and-modules/about-public-packages.rst:2
msgid "About public packages"
msgstr "关于公共包"

#: ../../source/packages-and-modules/about-public-packages.rst:4
msgid ""
"As an npm user or Org member, you can create and publish public packages "
"that anyone can download and use in their own projects."
msgstr "作为npm用户或组织成员，您可以创建和发布任何人都可以在自己的项目中下载和使用的公共包。"

#: ../../source/packages-and-modules/about-public-packages.rst:6
msgid ""
"**Unscoped** public packages exist in the global public registry "
"namespace and can be referenced in a **package.json** file with the "
"package name alone: **package-name**."
msgstr ""

#: ../../source/packages-and-modules/about-public-packages.rst:7
msgid ""
"**Scoped** public packages belong to a user or Org and must be preceded "
"by the user or Org name when included as a dependency in a "
"**package.json** file:"
msgstr ""

#: ../../source/packages-and-modules/about-public-packages.rst:9
#, fuzzy
msgid "**@username/package-name**"
msgstr "package-name"

#: ../../source/packages-and-modules/about-public-packages.rst:10
#, fuzzy
msgid "**@org-name/package-name**"
msgstr "package-name"

#: ../../source/packages-and-modules/about-public-packages.rst:15
#, fuzzy
msgid ":doc:`creating-and-publishing-scoped-public-packages`"
msgstr "创建和发布范围的公共包"

#: ../../source/packages-and-modules/about-public-packages.rst:16
#, fuzzy
msgid ":doc:`creating-and-publishing-unscoped-public-packages`"
msgstr "更新和管理已发布的包"

#: ../../source/packages-and-modules/about-scopes.rst:2
msgid "About scopes"
msgstr "关于范围"

#: ../../source/packages-and-modules/about-scopes.rst:5
msgid ""
"You must be using npm version 2 or greater to use scopes. To upgrade to "
"the latest version of npm, on the command line, run **npm install "
"npm@latest -g**"
msgstr ""
"您必须使用npm版本2或更高版本才能使用范围。要在命令行上升级到最新版本的npm，请运行 **npm install npm @ latest "
"-g**"

#: ../../source/packages-and-modules/about-scopes.rst:8
msgid ""
"When you sign up for an npm user account or create an Org, you are "
"granted a scope that matches your user or Org name. You can use this "
"scope as a namespace for related packages."
msgstr "当您注册npm用户帐户或创建组织时，您将被授予与您的用户或组织名称匹配的范围。您可以将此范围用作相关包的命名空间。"

#: ../../source/packages-and-modules/about-scopes.rst:10
msgid ""
"A scope allows you to create a package with the same name as a package "
"created by another user or Org without conflict."
msgstr "范围允许您创建与其他用户或组织创建的包具有相同名称的包，而不会发生冲突。"

#: ../../source/packages-and-modules/about-scopes.rst:12
msgid ""
"When listed as a dependent in a package.json file, scoped packages are "
"preceded by their scope name. The scope name is everything between the @ "
"and the slash:"
msgstr "当在package.json文件中列为依赖项时，作用域包的前面是其作用域名称。范围名称是@和斜杠之间的所有内容:"

#: ../../source/packages-and-modules/about-scopes.rst:14
msgid "**“npm” scope**::"
msgstr ""

#: ../../source/packages-and-modules/about-scopes.rst:18
msgid "**“npmcorp” scope**::"
msgstr ""

#: ../../source/packages-and-modules/about-scopes.rst:22
msgid ""
"To create and publish public scoped packages, see :doc:`creating-and-"
"publishing-scoped-public-packages`."
msgstr "要创建和发布公共范围包，请参阅 :doc:`creating-and-publishing-scoped-public-packages`."

#: ../../source/packages-and-modules/about-scopes.rst:24
msgid ""
"To create and publish private scoped packages, see :doc:`creating-and-"
"publishing-private-packages`."
msgstr "要创建和发布私有作用域包，请参阅 :doc:`creating-and-publishing-private-packages`."

#: ../../source/packages-and-modules/about-scopes.rst:27
msgid "Scopes and package visibility"
msgstr "范围和包可见性"

#: ../../source/packages-and-modules/about-scopes.rst:29
msgid "Unscoped packages are always public."
msgstr "未开发的包总是公开的。"

#: ../../source/packages-and-modules/about-scopes.rst:30
msgid ":doc:`about-private-packages` are always scoped."
msgstr ":doc:`about-private-packages` 总是作用域。"

#: ../../source/packages-and-modules/about-scopes.rst:31
msgid ""
"Scoped packages are private by default; you must pass a command-line flag"
" when publishing to make them public."
msgstr "默认情况下，范围包是私有的;您必须在发布时传递命令行标志以使其公开。"

#: ../../source/packages-and-modules/about-scopes.rst:33
msgid ""
"For more information on package scope and visibility, see :doc:`package-"
"scope-access-level-and-visibility`."
msgstr "有关包范围和可见性的更多信息，请参阅 :doc:`package-scope-access-level-and-visibility`."

#: ../../source/packages-and-modules/about-semantic-versioning.rst:2
msgid "About semantic versioning"
msgstr "关于语义版本控制"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:4
msgid ""
"To keep the JavaScript ecosystem healthy, reliable, and secure, every "
"time you make significant updates to an npm package you own, we recommend"
" publishing a new version of the package with an updated version number "
"in the package.json file that follows the semantic versioning spec. "
"Following the semantic versioning spec helps other developers who depend "
"on your code understand the extent of changes in a given version, and "
"adjust their own code if necessary."
msgstr "为了保持JavaScript生态系统的健康，可靠和安全，每次对您拥有的npm软件包进行重大更新时，我们建议在package.json文件中发布包含语义版本控制的更新版本号的软件包的新版本规范。遵循语义版本规范可以帮助依赖代码的其他开发人员了解给定版本中的更改范围，并在必要时调整自己的代码。"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:6
msgid ""
"If you introduce a change that breaks a package dependency, we strongly "
"recommend incrementing the version major number; see below for details."
msgstr "如果您引入了一个打破包依赖关系的更改，我们强烈建议您增加版本主编号;详见下文。"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:9
msgid "Incrementing semantic versions in published packages"
msgstr "增加已发布包中的语义版本"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:11
msgid ""
"To help developers who rely on your code, we recommend starting your "
"package version at **1.0.0** and incrementing as follows:"
msgstr "为了帮助依赖代码的开发人员，我们建议您在 **1.0.0** 处启动软件包版本并按如下方式递增:"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:14
msgid "Code status"
msgstr "代码状态"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:14
msgid "Stage"
msgstr "阶段"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:14
msgid "Rule"
msgstr "规则"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:14
msgid "Example version"
msgstr "示例版本"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:16
msgid "First release"
msgstr "首发"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:16
msgid "New product"
msgstr "新产品"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:16
msgid "Start with 1.0.0"
msgstr "从1.0.0开始"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:16
msgid "1.0.0"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:18
msgid "Backward compatible bug fixes"
msgstr "向后兼容的错误修复"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:18
msgid "Patch release"
msgstr "补丁发布"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:18
msgid "Increment the third digit"
msgstr "增加第三位数"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:18
msgid "1.0.1"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:20
msgid "Backward compatible new features"
msgstr "向后兼容的新功能"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:20
msgid "Minor release"
msgstr "次要发布"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:20
msgid "Increment the middle digit and reset last digit to zero"
msgstr "增加中间数字并将最后一个数字重置为零"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:20
msgid "1.1.0"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:22
msgid "Changes that break backward compatibility"
msgstr "破坏向后兼容性的更改"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:22
msgid "Major release"
msgstr "主要发布"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:22
msgid "Increment the first digit and reset middle and last digits to zero"
msgstr "增加第一个数字并将中间和最后一个数字重置为零"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:22
msgid "2.0.0"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:26
msgid "Using semantic versioning to specify update types your package can accept"
msgstr "使用语义版本控制来指定包可以接受的更新类型"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:28
msgid ""
"You can specify which update types your package can accept from "
"dependencies in your package’s package.json file."
msgstr "您可以指定程序包可以从程序包的package.json文件中的依赖项接受哪些更新类型。"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:30
msgid ""
"For example, to specify acceptable version ranges up to 1.0.4, use the "
"following syntax:"
msgstr "例如，要指定最大1.0.4的可接受版本范围，请使用以下语法:"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:32
msgid "Patch releases: 1.0 or 1.0.x or ~1.0.4"
msgstr "补丁发布: 1.0 or 1.0.x or ~1.0.4"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:33
msgid "Minor releases: 1 or 1.x or ^1.0.4"
msgstr "次要版本: 1 or 1.x or ^1.0.4"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:34
msgid "Major releases: * or x"
msgstr "主要版本: * or x"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:36
msgid ""
"For more information on semantic versioning syntax, see the npm semver "
"calculator."
msgstr "有关语义版本控制语法的更多信息，请参阅npm semver计算器。"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:38
#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:28
#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:51
msgid "**Example**"
msgstr "**示例**"

#: ../../source/packages-and-modules/about-semantic-versioning.rst:50
msgid ""
"<iframe width=\"300\" height=\"150\" "
"src=\"https://www.youtube.com/embed/kK4Meix58R4\" frameborder=\"0\" "
"allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-"
"picture\" allowfullscreen></iframe>"
msgstr ""

#: ../../source/packages-and-modules/about-the-public-npm-registry.rst:2
msgid "About the public npm registry"
msgstr "关于公共npm注册表"

#: ../../source/packages-and-modules/about-the-public-npm-registry.rst:4
msgid ""
"The public npm registry is a database of JavaScript packages, each "
"comprised of software and metadata. Open source developers and developers"
" at companies use the npm registry to contribute packages to the entire "
"community or members of their Orgs, and download packages to use in their"
" own projects."
msgstr "公共npm注册表是JavaScript包的数据库，每个包都包含软件和元数据。公司的开源开发人员和开发人员使用npm注册表向整个社区或他们的Orgs成员贡献包，并下载包以在他们自己的项目中使用。"

#: ../../source/packages-and-modules/about-the-public-npm-registry.rst:8
msgid ""
"To get started with the registry, sign up for an npm account and check "
"out the “Getting started” and CLI documentation."
msgstr "要开始使用注册表，请注册npm帐户并查看“入门”和CLI文档。"

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:2
msgid "Adding collaborators to private packages owned by a user account"
msgstr "将协作者添加到用户帐户拥有的私有包"

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:4
msgid ""
"As an npm user with a paid user account, you can another npm user with a "
"paid account as a collaborator on a private package you own."
msgstr "作为具有付费用户帐户的npm用户，您可以使用付费帐户的另一个npm用户作为您拥有的私人包的协作者。"

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:6
msgid ""
"The user you want to add as a collaborator on your private package must "
"have a paid user account. To sign up for a paid account, they can visit "
"https://https://www.npmjs.com/settings/username/billing, replacing "
"username with their npm username."
msgstr ""

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:9
msgid "Granting access to a private user package on the web"
msgstr "授予对Web上的私有用户包的访问权限"

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:11
msgid ""
"On the :option:`npm website`, go to the package to which you want to add "
"a collaborator::"
msgstr ""

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:15
msgid "On the package page, under “Collaborators”, click +."
msgstr "在程序包页面的“协作者”下，单击“+”。"

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:16
msgid "Enter the npm username of the collaborator."
msgstr "输入协作者的npm用户名。"

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:17
msgid "Click Submit."
msgstr "单击“提交”"

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:20
msgid "Granting private package access from the command line interface"
msgstr "从命令行界面授予私有包访问权限"

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:22
#, fuzzy
msgid ""
"To add a collaborator to a package on the command line, run the following"
" command, replacing **<user>** with the npm username of your "
"collaborator, and **<your-package-name>** with the name of the private "
"package::"
msgstr ""
"To add a collaborator to a package on the command line, run the following"
" command, replacing <user> with the npm username of your collaborator, "
"and <your-package-name> with the name of the private package:"

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:27
msgid "Granting access to private Org packages"
msgstr "授予对私有组织包的访问权限"

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:29
#, fuzzy
msgid ""
"To grant an npm user access to private Org packages, you must have an Org"
" owner add them to your Org, then add them to a team that has access to "
"the private package. For more information, see :doc:`../orgs/adding-"
"members-to-your-org`."
msgstr ""
"要授予npm用户访问私有组织包的权限，您必须让组织所有者将其添加到您的组织，然后将其添加到可以访问私有包的团队。有关更多信息，请参阅 "
":doc:`../orgs/adding-members-to-your-org` 。"

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:2
msgid "Adding dist-tags to packages"
msgstr "将dist-tags添加到包中"

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:4
msgid ""
"Distribution tags (dist-tags) are human-readable labels that you can use "
"to organize and label different versions of packages you publish. dist-"
"tags supplement :doc:`about-semantic-versioning`. In addition to being "
"more human-readable than semantic version numbering, tags allow "
"publishers to distribute their packages more effectively."
msgstr ""
"分发标签（dist-tags）是人类可读的标签，可用于组织和标记您发布的不同版本的软件包。 dist-tags补充 :doc:`about-"
"semantic-versioning` 。除了比语义版本编号更易于阅读之外，标签还允许发布者更有效地分发其包。"

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:7
#, fuzzy
msgid "For more information, see the :option:`npm dist-tag`."
msgstr "有关更多信息，请参阅npm-install命令。"

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:9
msgid ""
"Since dist-tags share a namespace with semantic versions, avoid dist-tags"
" that conflict with existing version numbers. We recommend avoiding dist-"
"tags that start with a number or the letter \"v\"."
msgstr ""
"由于dist-tags与语义版本共享命名空间，因此请避免与现有版本号冲突的dist-tag。我们建议避免使用以数字或字母 \"v\" "
"开头的dist-tag。"

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:12
msgid "Publishing a package with a dist-tag"
msgstr "使用dist-tag发布包"

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:14
msgid ""
"By default, running npm publish will tag your package with the latest "
"dist-tag. To use another dist-tag, use the --tag flag when publishing."
msgstr "默认情况下，运行npm publish会使用最新的dist-tag标记您的包。要使用另一个dist-tag，请在发布时使用--tag标志。"

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:16
#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:39
#: ../../source/packages-and-modules/creating-a-package-json-file.rst:48
#: ../../source/packages-and-modules/creating-a-package-json-file.rst:73
msgid "On the command line, navigate to the root directory of your package."
msgstr "在命令行上，导航到程序包的根目录。"

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:22
msgid "Run the following command, replacing <tag> with the tag you want to use:"
msgstr "运行以下命令，将<tag>替换为要使用的标记:"

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:30
msgid ""
"To publish a package with the “beta” dist-tag, on the command line, run "
"the following command in the root directory of your package:"
msgstr "要在命令行上发布带有“beta”dist-tag的软件包，请在软件包的根目录中运行以下命令:"

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:37
msgid "Adding a dist-tag to a specific version of your package"
msgstr "将dist标记添加到特定版本的包中"

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:45
msgid ""
"Run the following command, replacing <package_name> with the name of your"
" package, <version> with your package version number, and <tag> with the "
"distribution tag:"
msgstr "运行以下命令，将<package_name>替换为程序包的名称，将<version>替换为程序包版本号，将<tag>替换为分发标记:"

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:53
msgid ""
"To add the “stable” tag to the 1.4.0 version of the “example-package” "
"package, you would run the following command:"
msgstr "要将 “stable” 标记添加到 “example-package” 软件包的1.4.0版本，您将运行以下命令:"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:2
msgid "Auditing package dependencies for security vulnerabilities"
msgstr "审核安全漏洞的程序包依赖性"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:5
msgid "About security audits"
msgstr "关于安全审核"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:7
msgid ""
"A security audit is an assessment of package dependencies for security "
"vulnerabilities. Security audits help you protect your package’s users by"
" enabling you to find and fix known vulnerabilities in dependencies that "
"could cause data loss, service outages, unauthorized access to sensitive "
"information, or other issues."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:11
msgid "Running a security audit with npm audit"
msgstr "使用npm audit运行安全审核"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:13
msgid ""
"The npm audit command is available in npm@6. To upgrade, run npm install "
"npm@latest -g."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:15
msgid ""
"The :option:`npm audit` command submits a description of the dependencies"
" configured in your package to your default registry and asks for a "
"report of known vulnerabilities. :option:`npm audit` checks direct "
"dependencies, devDependencies, bundledDependencies, and "
"optionalDependencies, but does not check peerDependencies."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:18
msgid ""
":option:`npm audit` automatically runs when you install a package with "
"npm install. You can also run :option:`npm audit` manually on your "
"locally installed packages to conduct a security audit of the package and"
" produce a report of dependency vulnerabilities and, if available, "
"suggested patches."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:21
msgid ""
"On the command line, navigate to your package directory by typing cd "
"path/to/your-package-name and pressing Enter."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:22
msgid "Ensure your package contains package.json and package-lock.json files."
msgstr "确保您的包包含package.json和package-lock.json文件。"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:23
msgid "Type :option:`npm audit` and press Enter."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:24
msgid ""
"Review the audit report and run recommended commands or investigate "
"further if needed."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:27
msgid "Resolving EAUDITNOPJSON and EAUDITNOLOCK errors"
msgstr "解决EAUDITNOPJSON和EAUDITNOLOCK错误"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:33
msgid ""
"If you get an EAUDITNOPJSON error, create a package.json file by "
"following the steps in “Creating a package.json file”."
msgstr "如果出现EAUDITNOPJSON错误，请按照“创建package.json文件”中的步骤创建package.json文件。"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:34
msgid ""
"If you get an EAUDITNOLOCK error, make sure your package has a "
"package.json file, then create the package lock file by running npm i "
"--package-lock-only."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:37
msgid "Reviewing and acting on the security audit report"
msgstr "审查并处理安全审计报告"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:39
msgid ""
"Running :option:`npm audit` will produce a report of security "
"vulnerabilities with the affected package name, vulnerability severity "
"and description, path, and other information, and, if available, commands"
" to apply patches to resolve vulnerabilities. For more information on the"
" fields in the audit report, see “About audit reports”"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:43
msgid "Security vulnerabilities found with suggested updates"
msgstr "建议更新时发现安全漏洞"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:45
msgid ""
"If security vulnerabilities are found and updates are available, you can "
"either:"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:47
msgid ""
"Run the :option:`npm audit` fix subcommand to automatically install "
"compatible updates to vulnerable dependencies."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:48
msgid ""
"Run the recommended commands individually to install updates to "
"vulnerable dependencies. (Some updates may be semver-breaking changes; "
"for more information, see “SEMVER warnings”.)"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:55
msgid "SEMVER warnings"
msgstr "SEMVER警告"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:57
msgid ""
"If the recommended action is a potential breaking change (semantic "
"version major change), it will be followed by a SEMVER WARNING that says "
"“SEMVER WARNING: Recommended action is a potentially breaking change”. If"
" the package with the vulnerability has changed its API, you may need to "
"make additional changes to your package’s code."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:61
msgid "Security vulnerabilities found requiring manual review"
msgstr "发现安全漏洞需要人工审核"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:63
msgid ""
"If security vulnerabilities are found, but no patches are available, the "
"audit report will provide information about the vulnerability so you can "
"investigate further."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:68
msgid "To address the vulnerability, you can"
msgstr "要解决此漏洞，您可以"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:70
#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:76
msgid "Check for mitigating factors"
msgstr "检查缓解因素"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:71
#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:82
msgid "Update dependent packages if a fix exists"
msgstr "如果存在修复，则更新相关包"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:72
#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:94
msgid "Fix the vulnerability"
msgstr "修复漏洞"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:73
#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:105
msgid "Open an issue in the package or dependent package issue tracker"
msgstr "打开包或依赖包问题跟踪器中的问题"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:78
msgid ""
"Review the security advisory in the “More info” field for mitigating "
"factors that may allow you to continue using the package with the "
"vulnerability in limited cases. For example, the vulnerability may only "
"exist when the code is used on specific operating systems, or when a "
"specific function is called."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:84
msgid ""
"If a fix exists but packages that depend on the package with the "
"vulnerability have not been updated to include the fixed version, you may"
" want to open a pull or merge request on the dependent package repository"
" to use the fixed version."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:86
msgid ""
"To find the package that must be updated, check the “Path” field for the "
"location of the package with the vulnerability, then check for the "
"package that depends on it. For example, if the path to the vulnerability"
" is @package-name > dependent-package > package-with-vulnerability, you "
"will need to update dependent-package."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:88
msgid ""
"On the npm public registry, find the dependent package and navigate to "
"its repository. For more information on finding packages, see “Searching "
"for and choosing packages to download”."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:90
msgid ""
"In the dependent package repository, open a pull or merge request to "
"update the version of the vulnerable package to a version with a fix."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:91
msgid ""
"Once the pull or merge request is merged and the package has been updated"
" in the npm public registry, update your copy of the package with npm "
"update."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:96
msgid ""
"If a fix does not exist, you may want to suggest changes that address the"
" vulnerability to the package maintainer in a pull or merge request on "
"the package repository."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:98
msgid "Check the “Path” field for the location of the vulnerability."
msgstr "检查“路径”字段以获取漏洞的位置。"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:99
msgid ""
"On the npm public registry, find the package with the vulnerability. For "
"more information on finding packages, see “Searching for and choosing "
"packages to download”."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:101
msgid ""
"In the package repository, open a pull or merge request to make the fix "
"on the package repository."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:102
msgid ""
"Once the fix is merged and the package has been updated in the npm public"
" registry, update your copy of the package that depends on the package "
"with the fix."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:107
msgid ""
"If you do not want to fix the vulnerability or update the dependent "
"package yourself, open an issue in the package or dependent package issue"
" tracker."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:109
msgid ""
"On the npm public registry, find the package with the vulnerability or "
"the dependent package that needs an update. For more information on "
"finding packages, see “Searching for and choosing packages to download”."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:111
msgid ""
"In the package or dependent package issue tracker, open an issue and "
"include information from the audit report, including the vulnerability "
"report from the “More info” field."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:114
msgid "No security vulnerabilities found"
msgstr "未发现任何安全漏洞"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:117
msgid ""
"If no security vulnerabilities are found, this means that packages with "
"known vulnerabilities were not found in your package dependency tree. "
"Since the advisory database can be updated at any time, we recommend "
"regularly running :option:`npm audit` manually, or adding npm audit to "
"your continuous integration process."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:124
msgid "Turning off npm audit on package installation"
msgstr "关闭软件包安装的npm审核"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:127
msgid "Installing a single package"
msgstr "安装单个包"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:129
#, fuzzy
msgid ""
"To turn off :option:`npm audit` when installing a single package, use the"
" --no-audit flag::"
msgstr "要在安装单个程序包时关闭npm审计，请使用--no-audit标志:"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:133
#, fuzzy
msgid "For more information, see the npm-install command."
msgstr "有关更多信息，请参阅npm-install命令。"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:136
msgid "Installing all packages"
msgstr "安装所有包"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:138
#, fuzzy
msgid ""
"To turn off :option:`npm audit` when installing all packages, set the "
"audit setting to false in your user and global npmrc config files::"
msgstr "要在安装所有软件包时关闭npm审计，请在用户和全局npmrc配置文件中将审计设置设置为false:"

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:143
msgid ""
"For more information, see the npm-config management command and the npm-"
"config audit setting."
msgstr "有关更多信息，请参阅npm-config管理命令和npm-config审计设置。"

#: ../../source/packages-and-modules/changing-package-visibility.rst:2
msgid "Changing package visibility"
msgstr "更改包可见性"

#: ../../source/packages-and-modules/changing-package-visibility.rst:4
msgid ""
"You can change the visibility of a scoped package from the website or "
"command line."
msgstr "您可以从网站或命令行更改范围包的可见性。"

#: ../../source/packages-and-modules/changing-package-visibility.rst:6
msgid ""
"You must be the owner of the user account or Org that owns the package in"
" order to change package visibility."
msgstr "您必须是拥有该程序包的用户帐户或组织的所有者才能更改程序包可见性。"

#: ../../source/packages-and-modules/changing-package-visibility.rst:8
#, fuzzy
msgid ""
"For more information about package visibility, see :doc:`package-scope-"
"access-level-and-visibility`."
msgstr "有关包范围和可见性的更多信息，请参阅 :doc:`package-scope-access-level-and-visibility`."

#: ../../source/packages-and-modules/changing-package-visibility.rst:10
#, fuzzy
msgid ""
"Adding a scope to an unscoped package will not make it private. If you "
"want to make a unscoped package private, `contact npm Support`_."
msgstr "将范围添加到未范围的包不会使其成为私有。 如果您想将未包装的包装设为私有， `contact npm Support`_."

#: ../../source/packages-and-modules/changing-package-visibility.rst:13
msgid "Making a public package private"
msgstr "使公共包私有化"

#: ../../source/packages-and-modules/changing-package-visibility.rst:15
msgid ""
"Making a package private requires a paid user account or Org. To sign up "
"for a paid user or Org, go to https://www.npmjs.com/settings/account-"
"name/billing, replacing account-name with the name of your npm user "
"account or Org."
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:17
msgid ""
"If you want to restrict access and visibility for a public package you "
"own, you can make the package private. When you make a package private, "
"it will be removed from the website within a few minutes of the change."
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:20
#: ../../source/packages-and-modules/changing-package-visibility.rst:42
msgid "Website"
msgstr "网站"

#: ../../source/packages-and-modules/changing-package-visibility.rst:22
#: ../../source/packages-and-modules/changing-package-visibility.rst:44
msgid "On the `npm website`_, go to the package page."
msgstr "在 `npm website`_ 上，转到包页面。"

#: ../../source/packages-and-modules/changing-package-visibility.rst:23
msgid "On the package page, click Admin."
msgstr "在程序包页面上，单击“管理员”。"

#: ../../source/packages-and-modules/changing-package-visibility.rst:24
msgid "Under “Package Access”, select “Is Package Private?”"
msgstr "在“Package Access”下，选择“Package is Private？”"

#: ../../source/packages-and-modules/changing-package-visibility.rst:25
msgid "Click Update package settings."
msgstr "单击“更新包设置”。"

#: ../../source/packages-and-modules/changing-package-visibility.rst:28
#: ../../source/packages-and-modules/changing-package-visibility.rst:50
msgid "Command line"
msgstr "命令行"

#: ../../source/packages-and-modules/changing-package-visibility.rst:30
msgid ""
"To make a public package private on the command line, run the following "
"command, replacing <package-name> with the name of your package::"
msgstr "要在命令行上创建公共包私有，请运行以下命令，将<package-name>替换为包的名称::"

#: ../../source/packages-and-modules/changing-package-visibility.rst:34
msgid "For more information, see the :option:`npm access` documentation."
msgstr "有关更多信息，请参阅 :option:`npm access` 文档。"

#: ../../source/packages-and-modules/changing-package-visibility.rst:37
msgid "Making a private package public"
msgstr "公开私人套餐"

#: ../../source/packages-and-modules/changing-package-visibility.rst:39
msgid ""
"When you make a private package public, the package will be visible to "
"and downloadable by all npm users."
msgstr "当您将私有包公开时，所有npm用户都可以看到该包并可由其下载。"

#: ../../source/packages-and-modules/changing-package-visibility.rst:45
msgid "On the package page, click **Admin**."
msgstr "在包页面上，单击 **Admin** 。"

#: ../../source/packages-and-modules/changing-package-visibility.rst:46
msgid "Under “Package Access”, deselect “Is Package Private?”"
msgstr "在“Package Access”下，取消选择“Package is Private？”"

#: ../../source/packages-and-modules/changing-package-visibility.rst:47
msgid "Click **Update package settings**."
msgstr "单击 **更新包设置** 。"

#: ../../source/packages-and-modules/changing-package-visibility.rst:52
msgid ""
"To make a private package public on the command line, run the following "
"command, replacing **<package-name>** with the name of your package:"
msgstr "要在命令行上公开私有包，请运行以下命令，将 **<package-name>** 替换为包的名称:"

#: ../../source/packages-and-modules/changing-package-visibility.rst:58
msgid "For more information, see the :option:`npm access` CLI documentation."
msgstr "有关更多信息，请参阅 :option:`npm access` CLI文档。"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:2
msgid "Creating a package.json file"
msgstr "创建package.json文件"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:4
msgid ""
"You can add a package.json file to your package to make it easy for "
"others to manage and install. Packages published to the registry must "
"contain a package.json file."
msgstr "您可以将package.json文件添加到包中，以便其他人管理和安装。发布到注册表的包必须包含package.json文件。"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:6
msgid "A package.json file:"
msgstr "一个package.json文件:"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:8
msgid ""
"lists the packages your project depends on specifies versions of a "
"package that your project can use using semantic versioning rules makes "
"your build reproducible, and therefore easier to share with other "
"developers .. note:: To make your package easier to find on the npm "
"website, we recommend including a custom description in your package.json"
" file."
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:14
#, fuzzy
msgid "package.json fields"
msgstr "一个package.json文件:"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:17
msgid "Required name and version fields"
msgstr "Required name and version fields"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:19
msgid "A package.json file must contain \"name\" and \"version\" fields."
msgstr "A package.json file must contain \"name\" and \"version\" fields."

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:21
msgid ""
"The \"name\" field contains your package’s name, and must be lowercase "
"and one word, and may contain hyphens and underscores."
msgstr ""
"The \"name\" field contains your package’s name, and must be lowercase "
"and one word, and may contain hyphens and underscores."

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:23
msgid ""
"The \"version\" field must be in the form x.x.x and follow the semantic "
"versioning guidelines."
msgstr ""
"The \"version\" field must be in the form x.x.x and follow the semantic "
"versioning guidelines."

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:26
msgid "Author field"
msgstr "Author field"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:28
msgid ""
"If you want to include package author information in \"author\" field, "
"use the following format (email and website are both optional):"
msgstr ""
"If you want to include package author information in \"author\" field, "
"use the following format (email and website are both optional):"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:30
#, fuzzy
msgid ""
"Your Name <email@example.com> (http://example.com) Example "
"-------------------------------------------------------"
msgstr "Your Name <email@example.com> (http://example.com) Example§ {"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:35
#: ../../source/packages-and-modules/creating-a-package-json-file.rst:100
msgid "{"
msgstr "{"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:35
msgid "\"name\": \"my-awesome-package\", \"version\": \"1.0.0\""
msgstr "\"name\": \"my-awesome-package\", \"version\": \"1.0.0\""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:37
msgid ""
"} Creating a new package.json file "
"-------------------------------------------------------"
msgstr ""
"} Creating a new package.json file "
"-------------------------------------------------------"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:41
msgid ""
"You can create a package.json file by running a CLI questionnaire or "
"creating a default package.json file."
msgstr ""
"You can create a package.json file by running a CLI questionnaire or "
"creating a default package.json file."

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:44
msgid "Running a CLI questionnaire"
msgstr "Running a CLI questionnaire"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:46
msgid ""
"To create a package.json file with values that you supply, use the npm "
"init command."
msgstr ""
"To create a package.json file with values that you supply, use the npm "
"init command."

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:49
#: ../../source/packages-and-modules/creating-a-package-json-file.rst:74
msgid "cd /path/to/package"
msgstr "cd /path/to/package"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:50
#: ../../source/packages-and-modules/creating-a-package-json-file.rst:75
msgid "Run the following command:"
msgstr "运行以下命令:"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:51
msgid "npm init"
msgstr "npm init"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:52
msgid ""
"Answer the questions in the command line questionnaire. Customizing the "
"package.json questionnaire "
"-------------------------------------------------------"
msgstr ""
"Answer the questions in the command line questionnaire. Customizing the "
"package.json questionnaire "
"-------------------------------------------------------"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:56
msgid ""
"If you expect to create many package.json files, you can customize the "
"questions asked and fields created during the init process so all the "
"package.json files contain a standard set of information."
msgstr ""
"If you expect to create many package.json files, you can customize the "
"questions asked and fields created during the init process so all the "
"package.json files contain a standard set of information."

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:58
msgid ""
"In your home directory, create a file called .npm-init.js. To add custom "
"questions, using a text editor, add questions with the prompt function:"
msgstr ""
"In your home directory, create a file called .npm-init.js. To add custom "
"questions, using a text editor, add questions with the prompt function:"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:60
msgid ""
"module.exports = prompt(\"what's your favorite flavor of ice cream, "
"buddy?\", \"I LIKE THEM ALL\");"
msgstr ""
"module.exports = prompt(\"what's your favorite flavor of ice cream, "
"buddy?\", \"I LIKE THEM ALL\");"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:64
msgid ""
"To add custom fields, using a text editor, add desired fields to the "
".npm-init.js file:"
msgstr ""
"To add custom fields, using a text editor, add desired fields to the "
".npm-init.js file:"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:62
msgid "module.exports = {"
msgstr "module.exports = {"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:63
msgid ""
"customField: 'Example custom field', otherCustomField: 'This example "
"field is really cool'"
msgstr ""
"customField: 'Example custom field', otherCustomField: 'This example "
"field is really cool'"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:65
#: ../../source/packages-and-modules/creating-a-package-json-file.rst:102
#: ../../source/packages-and-modules/creating-node-js-modules.rst:34
#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:53
msgid "}"
msgstr "}"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:66
msgid ""
"To learn more about creating advanced npm init customizations, see the "
"init-package-json GitHub repository."
msgstr ""
"To learn more about creating advanced npm init customizations, see the "
"init-package-json GitHub repository."

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:69
#, fuzzy
msgid "Creating a default package.json file"
msgstr "创建package.json文件"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:71
msgid ""
"To create a default package.json using information extracted from the "
"current directory, use the npm init command with the --yes or -y flag. "
"For a list of default values, see “Default values extracted from the "
"current directory”."
msgstr "要使用从当前目录中提取的信息创建默认的package.json，请使用带有--yes或-y标志的npm init命令。有关默认值的列表，请参阅“从当前目录中提取的默认值”。"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:76
msgid "npm init --yes"
msgstr "npm init --yes"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:78
#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:30
#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:57
#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:97
msgid "Example"
msgstr "例"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:80
msgid "> npm init --yes Wrote to /home/ag_dubs/my_package/package.json:"
msgstr "> npm init --yes Wrote to /home/ag_dubs/my_package/package.json:"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:84
msgid ""
"\"name\": \"my_package\", \"description\": \"\", \"version\": \"1.0.0\", "
"\"main\": \"index.js\", \"scripts\": {"
msgstr ""
"\"name\": \"my_package\", \"description\": \"\", \"version\": \"1.0.0\", "
"\"main\": \"index.js\", \"scripts\": {"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:89
msgid "\"test\": \"echo \\\"Error: no test specified\\\" && exit 1\""
msgstr "\"test\": \"echo \\\"Error: no test specified\\\" && exit 1\""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:90
msgid "}, \"repository\": {"
msgstr "}, \"repository\": {"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:92
msgid ""
"\"type\": \"git\", \"url\": "
"\"https://github.com/ashleygwilliams/my_package.git\""
msgstr ""
"\"type\": \"git\", \"url\": "
"\"https://github.com/ashleygwilliams/my_package.git\""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:94
msgid "}, \"keywords\": [], \"author\": \"\", \"license\": \"ISC\", \"bugs\": {"
msgstr "}, \"keywords\": [], \"author\": \"\", \"license\": \"ISC\", \"bugs\": {"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:99
msgid "\"url\": \"https://github.com/ashleygwilliams/my_package/issues\""
msgstr "\"url\": \"https://github.com/ashleygwilliams/my_package/issues\""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:100
msgid "}, \"homepage\": \"https://github.com/ashleygwilliams/my_package\""
msgstr "}, \"homepage\": \"https://github.com/ashleygwilliams/my_package\""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:104
msgid "Default values extracted from the current directory"
msgstr "Default values extracted from the current directory"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:106
msgid ""
"name: the current directory name version: always 1.0.0 description: info "
"from the README, or an empty string \"\" main: always index.js scripts: "
"by default creates an empty test script keywords: empty author: empty "
"license: ISC bugs: information from the current directory, if present "
"homepage: information from the current directory, if present Setting "
"config options for the init command "
"-------------------------------------------------------"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:119
msgid ""
"You can set default config options for the init command. For example, to "
"set the default author email, author name, and license, on the command "
"line, run the following commands:"
msgstr ""
"You can set default config options for the init command. For example, to "
"set the default author email, author name, and license, on the command "
"line, run the following commands:"

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:121
msgid ""
"> npm set init.author.email \"example-user@example.com\" > npm set "
"init.author.name \"example_user\" > npm set init.license \"MIT\""
msgstr ""
"> npm set init.author.email \"example-user@example.com\" > npm set "
"init.author.name \"example_user\" > npm set init.license \"MIT\""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:2
msgid "Creating and publishing private packages"
msgstr "创建和发布私有包"

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:4
msgid ""
"To share your code with a limited set of users or teams, you can publish "
"private user-scoped or Org-scoped packages to the npm registry."
msgstr ""
"To share your code with a limited set of users or teams, you can publish "
"private user-scoped or Org-scoped packages to the npm registry."

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:6
#, fuzzy
msgid ""
"For more information on scopes and private packages, see :doc:`about-"
"scopes` and :doc:`about-private-packages`."
msgstr ""
"For more information on scopes and private packages, see “About scopes” "
"and “About private packages”."

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:8
msgid ""
"Before you can publish private user-scoped npm packages, you must `sign "
"up`_ for a paid npm user account. Additionally, to publish private Org-"
"scoped packages, you must `create an npm user account <sign up_>`_, then "
"`create a paid npm Org`_."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:11
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:11
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:15
#: ../../source/packages-and-modules/creating-node-js-modules.rst:7
msgid "Overview"
msgstr "概述"

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:13
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:13
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:17
msgid "Create your package"
msgstr "创建你的包"

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:14
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:14
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:18
msgid "Review package contents for sensitive or unnecessary information"
msgstr "查看包内容以获取敏感或不必要的信息"

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:15
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:15
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:19
msgid "Publish your package"
msgstr "发布您的包"

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:18
msgid "Creating a private package"
msgstr "创建私有包"

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:20
msgid ""
"If you are using npmrc to :doc:`../getting-started/configuring-your-"
"registry-settings-as-an-npm-enterprise-user` #using-npmrc-to-manage-"
"multiple-profiles-for-different-registries, on the command line, switch "
"to the appropriate profile::"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:24
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:24
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:26
msgid "On the command line, create a directory for your package::"
msgstr "在命令行上，为包创建一个目录::"

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:28
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:28
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:30
msgid "Navigate to the root directory of your package::"
msgstr "导航到包的根目录::"

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:32
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:32
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:34
msgid ""
"If you are using git to manage your package code, in the package root "
"directory, run the following commands, replacing git-remote-url with the "
"git remote URL for your package::"
msgstr "如果您使用git来管理包代码，请在包根目录中运行以下命令，将git-remote-url替换为包的git远程URL::"

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:37
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:37
msgid ""
"In the package root directory, run the npm init command and pass the "
"scope to the scope flag:"
msgstr "在程序包根目录中，运行npm init命令并将作用域传递给作用域标志:"

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:39
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:39
msgid "For an Org-scoped package, replace my-org with the name of your Org::"
msgstr "对于组织范围的包，请将my-org替换为组织的名称::"

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:42
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:43
msgid "For a user-scoped package, replace my-username with your username::"
msgstr "对于用户范围的包，请将my-username替换为您的用户名::"

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:46
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:47
msgid ""
"Respond to the prompts to generate a package.json file. For help naming "
"your package, see “Package name guidelines”."
msgstr "响应提示生成package.json文件。有关命名程序包的帮助，请参阅“程序包名称指南”。"

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:47
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:48
msgid ""
"Create a README file that explains what your package code is and how to "
"use it."
msgstr "创建一个README文件，说明您的包代码是什么以及如何使用它。"

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:48
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:49
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:42
msgid "In your preferred text editor, write the code for your package."
msgstr "在首选的文本编辑器中，编写包的代码。"

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:51
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:52
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:45
msgid "Reviewing package contents for sensitive or unnecessary information"
msgstr "查看包装内容以获取敏感或不必要的信息"

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:53
msgid ""
"Publishing sensitive information to the registry can harm your users, "
"compromise your development infrastructure, be expensive to fix, and put "
"you at risk of legal action."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:55
msgid ""
"We strongly recommend removing sensitive information, such as private "
"keys, passwords, [personally identifiable information][pii] (PII), and "
"credit card data before publishing your package to the registry."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:57
msgid ""
"Even if your package is private, sensitive information can be exposed if "
"the package is made public or downloaded to a computer that can be "
"accessed by more users than intended."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:59
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:57
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:51
msgid ""
"For less sensitive information, such as testing data, use a "
"**.npmignore** or **.gitignore** file to prevent publishing to the "
"registry. For more information, see this article."
msgstr ""
"对于不太敏感的信息，例如测试数据，请使用 **.npmignore** 或 **.gitignore** "
"文件以防止发布到注册表。有关更多信息，请参阅此文章。"

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:62
msgid "Publishing private packages"
msgstr "创建和发布私有包"

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:64
msgid "By default, scoped packages are published with private visibility."
msgstr "默认情况下，使用私有可见性发布范围包。"

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:66
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:64
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:56
msgid "On the command line, navigate to the root directory of your package::"
msgstr "在命令行上，导航到包的根目录::"

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:70
msgid "To publish your private package to the npm registry, run::"
msgstr "要将私有包发布到npm注册表，请运行::"

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:74
msgid ""
"To see your private package page, visit https://npmjs.com/package"
"/package-name, replacing package-name with the name of your package. "
"Private packages will say private below the package name on the npm "
"website."
msgstr ""
"要查看您的私人包页面，请访问 https://npmjs.com/package/package-name，将 package-name "
"替换为您的包名称。私有软件包会在npm网站上的软件包名称下面说私有。"

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:79
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:78
msgid ""
"For more information on the **publish** command, see the :option:`npm "
"publish`."
msgstr "有关 **publish** 命令的更多信息，请参阅 :option:`npm publish`。"

#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:2
msgid "Creating and publishing scoped public packages"
msgstr "创建和发布范围的公共包"

#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:4
msgid ""
"To share your code publicly in a user or Org namespace, you can publish "
"public user-scoped or Org-scoped packages to the npm registry."
msgstr "若要在用户或Org命名空间中公开共享代码，可以将公共用户范围或组织范围的包发布到npm注册表。"

#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:6
msgid "For more information on scopes, see https://docs.npmjs.com/about-scopes."
msgstr "有关范围的更多信息，请参阅 https://docs.npmjs.com/about-scopes。"

#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:8
msgid ""
"Before you can publish user-scoped npm packages, you must `sign up`_ for "
"an npm user account. Additionally, to publish Org-scoped packages, you "
"must `create an npm user account <sign up_>`_, then `create an npm Org`_."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:18
msgid "Creating a scoped public package"
msgstr "创建范围的公共包"

#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:20
msgid ""
"If you are using npmrc to manage accounts on multiple registries, on the "
"command line, switch to the appropriate profile::"
msgstr "如果您使用npmrc管理多个注册表上的帐户，请在命令行上切换到相应的配置文件::"

#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:54
msgid ""
"Publishing sensitive information to the registry can harm your users, "
"compromise your development infrastructure, be expensive to fix, and put "
"you at risk of legal action. **We strongly recommend removing sensitive "
"information, such as private keys, passwords,** `personally identifiable "
"information`_ **(PII), and credit card data before publishing your "
"package to the registry.**"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:60
msgid "Publishing scoped public packages"
msgstr "发布范围的公共包"

#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:62
msgid ""
"By default, scoped packages are published with private visibility. To "
"publish a scoped package with public visibility, use ``npm publish "
"--access public``."
msgstr "默认情况下，使用私有可见性发布范围包。要发布具有公共可见性的范围包，请使用 ``npm publish --access public`` 。"

#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:68
msgid "To publish your scoped public package to the npm registry, run::"
msgstr "要将作用域公共包发布到npm注册表，请运行::"

#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:72
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:64
msgid ""
"To see your public package page, visit https://npmjs.com/package/package-"
"name, replacing package-name with the name of your package. Public "
"packages will say public below the package name on the npm website."
msgstr ""
"要查看您的公共包页面，请访问 https://npmjs.com/package/package-name ，将package-"
"name替换为您的包名称。公共包将在npm网站上的包名称下面公开。"

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:2
msgid "Creating and publishing unscoped public packages"
msgstr "更新和管理已发布的包"

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:4
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:24
msgid ""
"You can only publish unscoped packages to the npm public registry. You "
"cannot publish unscoped packages to an npm Enterprise registry."
msgstr "您只能将未编组的包发布到npm公共注册表。您无法将未范围的包发布到npm Enterprise注册表。"

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:6
msgid ""
"As an npm user, you can create unscoped packages to use in your own "
"projects and publish them to the npm public registry for others to use in"
" theirs. Unscoped packages are always public and are referred to by the "
"package name only:"
msgstr "作为npm用户，您可以创建未编译的包以在您自己的项目中使用，并将它们发布到npm公共注册表，供其他人在他们的项目中使用。无范围的包始终是公共的，仅由包名称引用:"

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:8
msgid "**package-name**"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:10
msgid ""
"For more information on package scope, access, and visibility, see :doc"
":`package-scope-access-level-and-visibility`."
msgstr "有关包范围和可见性的更多信息，请参阅 :doc:`package-scope-access-level-and-visibility`."

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:12
msgid ""
"Before you can publish public unscoped npm packages, you must sign up for"
" an npm user account."
msgstr "在发布公开的未绑定的npm包之前，您必须注册npm用户帐户。"

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:22
msgid "Creating an unscoped public package"
msgstr "创建一个没有范围的公共包"

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:39
msgid "In the package root directory, run the npm init command."
msgstr "在程序包根目录中，运行 npm init 命令。"

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:40
msgid ""
"Respond to the prompts to generate a package.json file. For help naming "
"your package, see :doc:`package-name-guidelines`."
msgstr "响应提示生成package.json文件。有关命名包的帮助，请参阅 :doc:`package-name-guidelines`。"

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:41
msgid ""
"Create a :doc:`about-package-readme-files` that explains what your "
"package code is and how to use it."
msgstr "创建一个 :doc:`about-package-readme-files`，解释你的包代码是什么以及如何使用它。"

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:47
msgid ""
"Publishing sensitive information to the registry can harm your users, "
"compromise your development infrastructure, be expensive to fix, and put "
"you at risk of legal action. **We strongly recommend removing sensitive "
"information, such as private keys, passwords,** `personally identifiable "
"information`_ (PII), **and credit card data before publishing your "
"package to the registry.**"
msgstr ""
"将敏感信息发布到注册表可能会损害您的用户，危及您的开发基础架构，修复成本高昂，并使您面临法律诉讼的风险。 "
"**我们强烈建议在将包发布到注册表之前删除敏感信息，例如私钥，密码，** `personally identifiable "
"information`_ （PII）， **和信用卡数据。**"

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:54
msgid "Publishing unscoped public packages"
msgstr "发布未编写的公共包"

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:60
msgid "To publish your public package to the npm registry, run::"
msgstr "要将公共包发布到npm注册表，请运行::"

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:66
msgid ""
"For more information on the publish command, see the :option:`npm "
"publish`."
msgstr "有关publish命令的更多信息，请参阅 :option:`npm publish` 。"

#: ../../source/packages-and-modules/creating-node-js-modules.rst:2
msgid "Creating Node.js modules"
msgstr "创建Node.js模块"

#: ../../source/packages-and-modules/creating-node-js-modules.rst:4
msgid "Node.js modules are a type of package that can be published to npm."
msgstr "Node.js模块是一种可以发布到npm的包。"

#: ../../source/packages-and-modules/creating-node-js-modules.rst:9
msgid ""
"Create a package.json file Create the file that will be loaded when your "
"module is required by another application Test your module"
msgstr "创建package.json文件创建在另一个应用程序需要模块时将加载的文件测试模块"

#: ../../source/packages-and-modules/creating-node-js-modules.rst:14
msgid "Create a package.json file"
msgstr "创建package.json文件"

#: ../../source/packages-and-modules/creating-node-js-modules.rst:16
msgid ""
"To create a package.json file, on the command line, in the root directory"
" of your Node.js module, run npm init: For scoped modules, run npm init "
"--scope=@scope-name For unscoped modules, run npm init Provide responses "
"for the required fields (name and version), as well as the main field: "
"name: The name of your module. version: The initial module version. We "
"recommend following semantic versioning guidelines and starting with "
"1.0.0. main: The name of the file that will be loaded when your module is"
" required by another application. The default name is index.js. For more "
"information on package.json files, see “Creating a package.json file”."
msgstr ""

#: ../../source/packages-and-modules/creating-node-js-modules.rst:26
msgid ""
"Create the file that will be loaded when your module is required by "
"another application"
msgstr "创建在另一个应用程序需要模块时将加载的文件"

#: ../../source/packages-and-modules/creating-node-js-modules.rst:28
msgid ""
"Once your package.json file is created, create the file that will be "
"loaded when your module is required. The default name for this file is "
"index.js."
msgstr "创建package.json文件后，创建在需要模块时将加载的文件。该文件的默认名称是index.js。"

#: ../../source/packages-and-modules/creating-node-js-modules.rst:30
msgid ""
"In the file, add a function as a property of the exports object. This "
"will make the function available to other code:"
msgstr "在该文件中，添加一个函数作为exports对象的属性。这将使该功能可用于其他代码:"

#: ../../source/packages-and-modules/creating-node-js-modules.rst:32
msgid "exports.printMsg = function() {"
msgstr "exports.printMsg = function() {"

#: ../../source/packages-and-modules/creating-node-js-modules.rst:33
msgid "console.log(\"This is a message from the demo package\");"
msgstr "console.log(\"This is a message from the demo package\");"

#: ../../source/packages-and-modules/creating-node-js-modules.rst:37
msgid "Test your module"
msgstr "Test your module"

#: ../../source/packages-and-modules/creating-node-js-modules.rst:39
msgid ""
"Publish your package to npm: For private packages and unscoped packages, "
"use npm publish. For scoped public packages, use npm publish --access "
"public On the command line, create a new test directory outside of your "
"project directory. mkdir test-directory Switch to the new directory: cd "
"/path/to/test-directory In the test directory, install your module: npm "
"install <your-module-name> In the test directory, create a test.js file "
"which requires your module and calls your module as a method. On the "
"command line, run node test.js. The message sent to the console.log "
"should appear."
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:2
msgid "Deprecating and undeprecating packages or package versions"
msgstr "弃用和取消激活软件包或软件包版本"

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:4
#, fuzzy
msgid ""
"If you no longer wish to maintain a package, or if you would like to "
"encourage users to update to a new or different version, you can "
":option:`npm deprecate` it. Deprecating a package or version will print a"
" message to the terminal when a user installs it."
msgstr ""
"If you no longer wish to maintain a package, or if you would like to "
"encourage users to update to a new or different version, you can "
"deprecate it. Deprecating a package or version will print a message to "
"the terminal when a user installs it."

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:7
msgid ""
"A deprecation warning or message can say anything. You may wish to "
"include a message encouraging users to update to a specific version, or "
"an alternate, supported package."
msgstr ""
"A deprecation warning or message can say anything. You may wish to "
"include a message encouraging users to update to a specific version, or "
"an alternate, supported package."

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:9
msgid ""
"We strongly recommend deprecating packages or package versions instead of"
" `unpublishing <https://docs.npmjs.com/unpublishing-packages-from-the-"
"registry>`_ them, because unpublishing removes a package from the "
"registry entirely, meaning anyone who relied on it will no longer be able"
" to use it, with no warning."
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:12
msgid "Deprecating an entire package or a single version of a package"
msgstr "弃用整个包或单个版本的包"

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:15
msgid "Deprecating an entire package"
msgstr "弃用整个包"

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:17
msgid ""
"Deprecating an entire package will remove it from search results on the "
"npm website, and a deprecation message will also be displayed on the "
"package page."
msgstr ""
"Deprecating an entire package will remove it from search results on the "
"npm website, and a deprecation message will also be displayed on the "
"package page."

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:22
#, fuzzy
msgid ""
"To deprecate an entire package, run the following command, replacing "
"<package-name> with the name of your package, and \"<message>\" with your"
" deprecation message::"
msgstr ""
"To deprecate an entire package, run the following command, replacing "
"<package-name> with the name of your package, and \"<message>\" with your"
" deprecation message:"

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:26
#, fuzzy
msgid ""
"If you have enabled `two-factor authentication <https://docs.npmjs.com"
"/about-two-factor-authentication>`_, add a one-time password to the "
"command, --otp=123456 (where 123456 is the code from your authenticator "
"app)."
msgstr ""
"If you have two-factor auth, add a one-time password to the command, "
"--otp=123456 (where 123456 is the code from your authenticator)."

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:29
msgid "Deprecating a single version of a package"
msgstr "弃用单个版本的包"

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:31
msgid ""
"When you deprecate a version fo a package, a red message will be "
"displayed on that version’s package page, similar to deprecating an "
"entire package."
msgstr ""
"When you deprecate a version fo a package, a red message will be "
"displayed on that version’s package page, similar to deprecating an "
"entire package."

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:36
#, fuzzy
msgid ""
"To deprecate a package version, run the following command, replacing "
"**<package-name>** with the name of your package, **<version>** with your"
" version number, and \"**<message>**\" with your deprecation message::"
msgstr ""
"To deprecate a package version, run the following command, replacing "
"<package-name> with the name of your package, <version> with your version"
" number, and \"<message>\" with your deprecation message:"

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:40
#, fuzzy
msgid "The CLI will also accept version ranges for **<version>**."
msgstr ""
"npm deprecate <package-name>@<version> \"<message>\" The CLI will also "
"accept version ranges for <version>."

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:42
#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:53
#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:67
#, fuzzy
msgid ""
"If you have two-factor auth, add a one-time password to the command, "
"**--otp=123456** (where *123456* is the code from your authenticator)."
msgstr ""
"If you have two-factor auth, add a one-time password to the command, "
"--otp=123456 (where 123456 is the code from your authenticator)."

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:45
msgid "Undeprecating a package or version"
msgstr "不批准包裹或版本"

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:47
#, fuzzy
msgid ""
"To undeprecate a package, replace \"**<message>**\" with \"\" (an empty "
"string) in one of the above commands."
msgstr ""
"To undeprecate a package, replace \"<message>\" with \"\" (an empty "
"string) in one of the above commands."

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:49
#, fuzzy
msgid ""
"For example, to undeprecate a package version, run the following command,"
" replacing <package-name> with the name of your package, and <version> "
"with your version number::"
msgstr ""
"For example, to undeprecate a package version, run the following command,"
" replacing <package-name> with the name of your package, and <version> "
"with your version number:"

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:56
msgid "Transferring a deprecated package to npm"
msgstr "将已弃用的包转移到npm"

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:58
#, fuzzy
msgid ""
"If you are no longer maintaining a package, but other users depend on it,"
" and you’d like to remove it from your user profile, you can transfer it "
"to the **@npm** user account, which is owned by npm, Inc."
msgstr ""
"If you are no longer maintaining a package, but other users depend on it,"
" and you’d like to remove it from your user profile, you can transfer it "
"to the @npm user account, which is owned by npm, Inc."

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:60
msgid ""
"Once you transfer a package to the npm account, you will no longer be "
"able to update it."
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:62
#, fuzzy
msgid ""
"To transfer a package to the npm user account, run the following two "
"commands in order, replacing <user> with your npm user name, and "
"<package-name> with the package you want to transfer::"
msgstr ""
".. note:: Once you transfer a package to the npm account, you will no "
"longer be able to update it. To transfer a package to the npm user "
"account, run the following two commands in order, replacing <user> with "
"your npm user name, and <package-name> with the package you want to "
"transfer:"

#: ../../source/packages-and-modules/downloading-and-installing-packages-globally.rst:2
msgid "Downloading and installing packages globally"
msgstr "全局下载和安装包"

#: ../../source/packages-and-modules/downloading-and-installing-packages-globally.rst:4
msgid ""
"If you are using npm 5.2 or higher, we recommend using npx to run "
"packages globally."
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-globally.rst:6
#, fuzzy
msgid ""
"Installing a package globally allows you to use the code in the package "
"as a set of tools on your local computer."
msgstr ""
"Tip: If you are using npm 5.2 or higher, we recommend using npx to run "
"packages globally. Installing a package globally allows you to use the "
"code in the package as a set of tools on your local computer."

#: ../../source/packages-and-modules/downloading-and-installing-packages-globally.rst:8
#, fuzzy
msgid ""
"To download and install packages globally, on the command line, run the "
"following command::"
msgstr ""
"To download and install packages globally, on the command line, run the "
"following command:"

#: ../../source/packages-and-modules/downloading-and-installing-packages-globally.rst:12
msgid ""
"If you get an EACCES permissions error, you may need to reinstall npm "
"with a version manager or manually change npm’s default directory. For "
"more information, see “Resolving EACCES permissions errors when "
"installing packages globally”."
msgstr ""
"If you get an EACCES permissions error, you may need to reinstall npm "
"with a version manager or manually change npm’s default directory. For "
"more information, see “Resolving EACCES permissions errors when "
"installing packages globally”."

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:2
msgid "Downloading and installing packages locally"
msgstr "在本地下载和安装包"

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:4
msgid ""
"You can install a package locally if you want to depend on the package "
"from your own module, using something like Node.js require. This is npm "
"install’s default behavior."
msgstr ""
"You can install a package locally if you want to depend on the package "
"from your own module, using something like Node.js require. This is npm "
"install’s default behavior."

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:7
msgid "Installing an unscoped package"
msgstr "安装未打包的包"

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:9
msgid ""
"Unscoped packages are always public, which means they can be searched "
"for, downloaded, and installed by anyone. To install a public package, on"
" the command line, run"
msgstr ""
"Unscoped packages are always public, which means they can be searched "
"for, downloaded, and installed by anyone. To install a public package, on"
" the command line, run"

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:11
msgid ""
"npm install <package_name> This will create the node_modules directory in"
" your current directory (if one doesn’t exist yet) and will download the "
"package to that directory."
msgstr ""
"npm install <package_name> This will create the node_modules directory in"
" your current directory (if one doesn’t exist yet) and will download the "
"package to that directory."

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:14
#, fuzzy
msgid ""
"If there is no package.json file in the local directory, the latest "
"version of the package is installed. If there is a package.json file, npm"
" installs the latest version that satisfies the semver rule declared in "
"package.json."
msgstr ""
".. note:: If there is no package.json file in the local directory, the "
"latest version of the package is installed. If there is a package.json "
"file, npm installs the latest version that satisfies the semver rule "
"declared in package.json."

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:17
msgid "Installed a scoped public package"
msgstr "安装了一个范围的公共包"

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:19
#, fuzzy
msgid ""
"Scoped public packages can be downloaded and installed by anyone, as long"
" as the scope name is referenced during installation::"
msgstr ""
"Scoped public packages can be downloaded and installed by anyone, as long"
" as the scope name is referenced during installation:"

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:24
msgid "Installing a private package"
msgstr "安装私有包"

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:26
#, fuzzy
msgid ""
"Private packages can only be downloaded and installed by those who have "
"been granted read access to the package. Since private packages are "
"always scoped, you must reference the scope name during installation::"
msgstr ""
"Private packages can only be downloaded and installed by those who have "
"been granted read access to the package. Since private packages are "
"always scoped, you must reference the scope name during installation:"

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:31
msgid "Testing package installation"
msgstr "测试包安装"

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:33
#, fuzzy
msgid ""
"To confirm that npm install worked correctly, in your module directory, "
"check that a node_modules directory exists and that it contains a "
"directory for the package(s) you installed::"
msgstr ""
"To confirm that npm install worked correctly, in your module directory, "
"check that a node_modules directory exists and that it contains a "
"directory for the package(s) you installed:"

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:38
msgid "Installed package version"
msgstr "已安装的包版本"

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:40
msgid ""
"If there is a package.json file in the directory in which npm install is "
"run, npm instalsx the latest version of the package that satisfies the "
"semantic versioning rule declared in package.json."
msgstr ""
"If there is a package.json file in the directory in which npm install is "
"run, npm instalsx the latest version of the package that satisfies the "
"semantic versioning rule declared in package.json."

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:42
msgid ""
"If there is no package.json file, the latest version of the package is "
"installed."
msgstr ""
"If there is no package.json file, the latest version of the package is "
"installed."

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:45
msgid "Installing a package with dist-tags"
msgstr "使用dist-tags安装包"

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:47
msgid ""
"Like npm publish, npm install <package_name> will use the latest tag by "
"default."
msgstr ""
"Like npm publish, npm install <package_name> will use the latest tag by "
"default."

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:49
#, fuzzy
msgid ""
"To override this behavior, use npm install <package_name>@<tag>. For "
"example, to install the example-package at the version tagged with beta, "
"you would run the following command::"
msgstr ""
"To override this behavior, use npm install <package_name>@<tag>. For "
"example, to install the example-package at the version tagged with beta, "
"you would run the following command:"

#: ../../source/packages-and-modules/index.rst:2
msgid "Packages and modules"
msgstr "包和模块"

#: ../../source/packages-and-modules/index.rst:5
msgid "Introduction to packages and modules"
msgstr "包和模块简介"

#: ../../source/packages-and-modules/index.rst:18
msgid "Contributing packages to the registry"
msgstr "将包提供给注册表"

#: ../../source/packages-and-modules/index.rst:35
msgid "Updating and managing your published packages"
msgstr "更新和管理已发布的包"

#: ../../source/packages-and-modules/index.rst:50
msgid "Getting packages from the registry"
msgstr "从注册表获取包"

#: ../../source/packages-and-modules/index.rst:65
msgid "Securing your code"
msgstr "保护您的代码"

#: ../../source/packages-and-modules/package-name-guidelines.rst:2
msgid "Package name guidelines"
msgstr "包名称指南"

#: ../../source/packages-and-modules/package-name-guidelines.rst:4
msgid "When choosing a name for your package, choose a name that"
msgstr "为包选择名称时，请选择一个名称"

#: ../../source/packages-and-modules/package-name-guidelines.rst:6
msgid "is unique"
msgstr ""

#: ../../source/packages-and-modules/package-name-guidelines.rst:7
#, fuzzy
msgid "is descriptive"
msgstr "描述"

#: ../../source/packages-and-modules/package-name-guidelines.rst:8
#, fuzzy
msgid ""
"meets npm policy guidelines. For example, do not give your package an "
"offensive name, and do not use someone else’s trademarked name or violate"
" the npm trademark policy."
msgstr ""
"is unique is descriptive meets npm policy guidelines. For example, do not"
" give your package an offensive name, and do not use someone else’s "
"trademarked name or violate the npm trademark policy. Additionally, when "
"choosing a name for an unscoped package, also choose a name that"

#: ../../source/packages-and-modules/package-name-guidelines.rst:10
#, fuzzy
msgid ""
"Additionally, when choosing a name for an unscoped package, also choose a"
" name that"
msgstr "为包选择名称时，请选择一个名称"

#: ../../source/packages-and-modules/package-name-guidelines.rst:12
msgid "is not already owned by someone else"
msgstr ""

#: ../../source/packages-and-modules/package-name-guidelines.rst:13
msgid "is not spelled in a similar way to another package name"
msgstr ""

#: ../../source/packages-and-modules/package-name-guidelines.rst:14
msgid "will not confuse others about authorship"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:2
msgid "npm package scope, access level, and visibility"
msgstr "npm包范围，访问级别和可见性"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:4
msgid ""
"Visibility of npm packages depends on the scope (namespace) in which the "
"package is contained, and the access level (private or public) set for "
"the package."
msgstr "npm包的可见性取决于包含包的范围（命名空间）以及为包设置的访问级别（私有或公共）。"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:7
msgid ""
"To create Org-scoped packages, you must first create an Org. For more "
"information, see :doc:`../orgs/creating-an-org`."
msgstr "要创建组织范围的包，必须先创建组织。有关更多信息，请参阅 :doc:`../orgs/creating-an-org` 。"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:10
msgid "Public registry"
msgstr "公共登记处"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:13
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:34
msgid "Scope"
msgstr "范围"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:13
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:34
msgid "Access level"
msgstr "访问权限"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:13
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:34
msgid "Can view and download"
msgstr "可以查看和下载"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:13
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:34
msgid "Can write (publish)"
msgstr "可以写（发布）"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:15
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:17
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:36
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:38
msgid "Org"
msgstr "组织"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:15
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:19
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:36
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:40
msgid "Private"
msgstr "私有"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:15
msgid "Members of a team in the Org with read access to the package"
msgstr "组织中的团队成员具有对包的读取权限"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:15
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:17
msgid "Members of a team in the Org with read and write access to the package"
msgstr "组织中的团队成员具有对包的读写权限"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:17
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:21
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:23
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:38
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:42
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:44
msgid "Public"
msgstr "公共"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:17
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:21
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:23
msgid "Everyone"
msgstr "大家"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:19
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:21
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:40
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:42
msgid "User"
msgstr "用户"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:19
msgid ""
"The package owner and users who have been granted read access to the "
"package"
msgstr "包所有者和已被授予对包的读访问权限的用户"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:19
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:21
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:23
msgid ""
"The package owner and users who have been granted read and write access "
"to the package"
msgstr "包所有者和已被授予对包的读写权限的用户"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:23
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:44
msgid "Unscoped"
msgstr "无范围"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:26
msgid ""
"Only user accounts can create and manage unscoped packages. Orgs can only"
" manage scoped packages."
msgstr "只有用户帐户才能创建和管理未范围的包。 Orgs只能管理范围包。"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:29
msgid "npm Enterprise"
msgstr "npm 企业"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:31
msgid ""
"The following table applies to customers who purchased npm Enterprise "
"after July 26, 2018."
msgstr "下表适用于2018年7月26日之后购买npm Enterprise的客户。"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:36
msgid ""
"Logged-in members of the Enterprise registry who belong to a team in the "
"Org with read access to the package"
msgstr "属于组织中团队的Enterprise注册表的成员，具有对包的读访问权限"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:36
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:38
msgid ""
"Logged-in members of the Enterprise registry who belong to a team in the "
"Org with read and write access to the package"
msgstr "属于组织中的团队的Enterprise注册表的成员，具有对包的读写权限"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:38
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:42
msgid "All logged-in members of the Enterprise registry"
msgstr "Enterprise注册表的所有登录成员"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:40
msgid ""
"The package owner and logged-in members of the Enterprise registry who "
"have been granted read access to the package"
msgstr "已授予Enterprise注册表的程序包所有者和已登录成员的读取权限"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:40
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:42
msgid ""
"The package owner and logged-in members of the Enterprise registry who "
"have been granted read and write access to the package"
msgstr "已授予已对包授予读写权限的Enterprise注册表的包所有者和已登录成员"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:44
msgid "All users of the Enterprise registry"
msgstr "Enterprise注册表的所有用户"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:44
msgid "None (see note below)"
msgstr "无（见下面的注释）"

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:47
msgid ""
"The unscoped namespace on npm Enterprise is reserved for unscoped "
"packages in the public npm registry. To prevent npm Enterprise users from"
" accidentally publishing proprietary code to the public npm registry, "
"where it would be visible to anyone on the internet, we do not allow "
"publishing unscoped packages to npm Enterprise."
msgstr ""
"npm "
"Enterprise上的未作用域名称空间保留给公共npm注册表中的未作用域包。为了防止npm企业用户意外地将专有代码发布到公共npm注册表，互联网上的任何人都可以看到它，我们不允许将未编译的包发布到npm"
" Enterprise。"

#: ../../source/packages-and-modules/reporting-a-vulnerability-in-an-npm-package.rst:2
msgid "Reporting a vulnerability in an npm package"
msgstr "报告npm包中的漏洞"

#: ../../source/packages-and-modules/reporting-a-vulnerability-in-an-npm-package.rst:4
msgid ""
"Vulnerability reporting is currently only available for packages in the "
"public npm registry."
msgstr "漏洞报告目前仅适用于公共npm注册表中的包。"

#: ../../source/packages-and-modules/reporting-a-vulnerability-in-an-npm-package.rst:6
msgid ""
"If you find a security vulnerability in an npm package (either yours or "
"someone else’s), you can report it to the npm Security team to help keep "
"the Javascript ecosystem safe."
msgstr "漏洞报告目前仅适用于公共npm注册表中的包。"

#: ../../source/packages-and-modules/reporting-a-vulnerability-in-an-npm-package.rst:9
msgid "Disclosure timeline"
msgstr "披露时间表"

#: ../../source/packages-and-modules/reporting-a-vulnerability-in-an-npm-package.rst:11
msgid ""
"Vulnerability is reported npm Security triages vulnerability report npm "
"Security notifies package maintainers npm Security publishes security "
"advisory when package maintainers release a fix If maintainers are "
"unresponsive after 45 days, npm Security makes the advisory public"
msgstr ""
"报告漏洞npm安全分类漏洞报告npm安全通知软件包维护者npm "
"Security在软件包维护者发布修复程序时发布安全建议如果维护者在45天后没有响应，npm Security会公开咨询"

#: ../../source/packages-and-modules/reporting-a-vulnerability-in-an-npm-package.rst:18
msgid "Reporting a vulnerability"
msgstr "报告漏洞"

#: ../../source/packages-and-modules/reporting-a-vulnerability-in-an-npm-package.rst:20
msgid ""
"Vulnerability reports are sent to the npm Security team, not the package "
"maintainer."
msgstr "漏洞报告将发送给npm安全团队，而不是软件包维护者。"

#: ../../source/packages-and-modules/reporting-a-vulnerability-in-an-npm-package.rst:21
msgid ""
"Gather information about the vulnerability. On the package page, click "
"Report a vulnerability. On the vulnerability report page, provide "
"information about yourself and the vulnerability: Name: Your name. Email "
"address: An email address the npm Security team can use to contact you. "
"Package name and version: The name of the package that contains the "
"vulnerability. Package version: The version of the package that contains "
"the vulnerability. Include all affected versions. Description of "
"vulnerability: A brief description of the vulnerability and its effects. "
"Include references, commits, and/or code examples that would help our "
"researchers reproduce and investigate the vulnerability. Click Send "
"Report."
msgstr ""

#: ../../source/packages-and-modules/requiring-2fa-for-package-publishing-and-settings-modification.rst:2
msgid "Requiring 2FA for package publishing and settings modification"
msgstr "要求2FA进行包发布和设置修改"

#: ../../source/packages-and-modules/requiring-2fa-for-package-publishing-and-settings-modification.rst:4
msgid ""
"To protect your packages, as a package publisher, you can require "
"everyone who has write access to a package to provide a one-time password"
" in addition to their login token when they publish the package to the "
"registry or modify package settings."
msgstr ""
"To protect your packages, as a package publisher, you can require "
"everyone who has write access to a package to provide a one-time password"
" in addition to their login token when they publish the package to the "
"registry or modify package settings."

#: ../../source/packages-and-modules/requiring-2fa-for-package-publishing-and-settings-modification.rst:6
msgid ""
"To publish or modify a package with the two factor authentication (2FA) "
"setting enabled, a publisher must have 2FA enabled on their user account "
"with “Authorization and Publishing” selected. For more information, see "
"“Configuring two-factor authentication”."
msgstr ""
"To publish or modify a package with the two factor authentication (2FA) "
"setting enabled, a publisher must have 2FA enabled on their user account "
"with “Authorization and Publishing” selected. For more information, see "
"“Configuring two-factor authentication”."

#: ../../source/packages-and-modules/requiring-2fa-for-package-publishing-and-settings-modification.rst:8
msgid ""
"Currently, publishing a package with 2FA enabled on CI is not possible. "
"For more secure CI publishing, enable 2FA on the npm account used for CI,"
" and select \"Authorization\" only, and create a CIDR-restricted token "
"for CI by following the steps in \"Creating and viewing authentication "
"tokens\"."
msgstr ""

#: ../../source/packages-and-modules/requiring-2fa-for-package-publishing-and-settings-modification.rst:11
msgid "Enabling two-factor authentication for package publishing"
msgstr "为包发布启用双因素身份验证"

#: ../../source/packages-and-modules/requiring-2fa-for-package-publishing-and-settings-modification.rst:13
msgid ""
"Log in to npm with your user account. npm login dialog with username and "
"password fields left blank Navigate to the package on which you want to "
"require a second factor to publish or modify settings. Click Admin. admin"
" tab on package page Under “Package Access”, select “Require Two Factor "
"Authentication to publish or modify settings” require two factor "
"authentication to publish or modify settings checkbox selected Click "
"Update Package Settings. update package settings button"
msgstr ""

#: ../../source/packages-and-modules/requiring-2fa-for-package-publishing-and-settings-modification.rst:20
msgid "Disabling two-factor authentication for package publishing"
msgstr "禁用包发布的双因素身份验证"

#: ../../source/packages-and-modules/requiring-2fa-for-package-publishing-and-settings-modification.rst:21
msgid ""
"Log in to npm with your user account. npm login dialog with username and "
"password fields left blank Navigate to the package on which you want to "
"remove the requirement for a second factor to publish or modify settings."
" Click Admin. admin tab on package page Under “Package Access”, deselect "
"“Require Two Factor Authentication to publish or modify settings” require"
" two factor authentication to publish or modify settings checkbox "
"deselected Click Update Package Settings. update package settings button"
msgstr ""

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:2
msgid "Resolving EACCES permissions errors when installing packages globally"
msgstr "全局安装软件包时解决EACCES权限错误"

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:4
msgid ""
"If you see an EACCES error when you try to install a package globally, "
"you can either:"
msgstr "如果在尝试全局安装程序包时看到EACCES错误，则可以:"

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:6
msgid ""
"Reinstall npm with a node version manager (recommended), or Manually "
"change npm’s default directory"
msgstr "使用节点版本管理器重新安装npm（推荐），或手动更改npm的默认目录"

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:11
msgid "Reinstall npm with a node version manager"
msgstr "使用节点版本管理器重新安装npm"

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:13
msgid ""
"This is the best way to avoid permissions issues. To reinstall npm with a"
" node version manager, follow the steps in “Downloading and installing "
"Node.js and npm”. You do not need to remove your current version of npm "
"or Node.js before installing a node version manager."
msgstr "这是避免权限问题的最佳方法。要使用节点版本管理器重新安装npm，请按照“下载并安装Node.js和npm”中的步骤操作。在安装节点版本管理器之前，您无需删除当前版本的npm或Node.js."

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:16
msgid "Manually change npm’s default directory"
msgstr "手动更改npm的默认目录"

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:18
msgid "This section does not apply to Microsoft Windows."
msgstr "本节不适用于Microsoft Windows。"

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:19
#, fuzzy
msgid ""
"To minimize the chance of permissions errors, you can configure npm to "
"use a different directory. In this example, you will create and use "
"hidden directory in your home directory."
msgstr ""
".. note:: This section does not apply to Microsoft Windows. To minimize "
"the chance of permissions errors, you can configure npm to use a "
"different directory. In this example, you will create and use hidden "
"directory in your home directory."

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:21
msgid ""
"Back up your computer. On the command line, in your home directory, "
"create a directory for global installations:"
msgstr ""
"Back up your computer. On the command line, in your home directory, "
"create a directory for global installations:"

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:23
msgid "mkdir ~/.npm-global"
msgstr "mkdir ~/.npm-global"

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:24
msgid "Configure npm to use the new directory path:"
msgstr "配置npm以使用新目录路径:"

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:25
msgid "npm config set prefix '~/.npm-global'"
msgstr "npm config set prefix '~/.npm-global'"

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:26
msgid ""
"In your preferred text editor, open or create a ~/.profile file and add "
"this line:"
msgstr ""
"In your preferred text editor, open or create a ~/.profile file and add "
"this line:"

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:27
msgid "export PATH=~/.npm-global/bin:$PATH"
msgstr "export PATH=~/.npm-global/bin:$PATH"

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:28
msgid "On the command line, update your system variables:"
msgstr "在命令行上，更新系统变量:"

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:29
msgid "source ~/.profile"
msgstr "source ~/.profile"

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:30
msgid ""
"To test your new configuration, install a package globally without using "
"sudo:"
msgstr ""
"To test your new configuration, install a package globally without using "
"sudo:"

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:31
msgid "npm install -g jshint"
msgstr "npm install -g jshint"

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:32
msgid ""
"Instead of steps 2-4, you can use the corresponding ENV variable (e.g. if"
" you don’t want to modify ~/.profile):"
msgstr ""
"Instead of steps 2-4, you can use the corresponding ENV variable (e.g. if"
" you don’t want to modify ~/.profile):"

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:34
msgid "NPM_CONFIG_PREFIX=~/.npm-global"
msgstr "NPM_CONFIG_PREFIX=~/.npm-global"

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:35
msgid "npx: an alternative to running global commands"
msgstr "npx: an alternative to running global commands"

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:37
msgid ""
"If you are using npm version 5.2 or greater, you may want to consider npx"
" as an alternative way to run global commands, especially if you only "
"need a command occasionally. For more information, see this article about"
" npx."
msgstr ""
"If you are using npm version 5.2 or greater, you may want to consider npx"
" as an alternative way to run global commands, especially if you only "
"need a command occasionally. For more information, see this article about"
" npx."

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:2
msgid "Searching for and choosing packages to download"
msgstr "搜索并选择要下载的包"

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:4
msgid ""
"You can use the npm search bar to find packages to use in your projects. "
"npm search uses npms and the npms analyzer; for more information on both,"
" see https://npms.io/about."
msgstr ""
"You can use the npm search bar to find packages to use in your projects. "
"npm search uses npms and the npms analyzer; for more information on both,"
" see https://npms.io/about."

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:7
msgid "Searching for a package"
msgstr "正在搜索包裹"

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:9
msgid ""
"In the search bar, type a search term and press Enter. As you type, "
"possible choices will appear."
msgstr ""

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:17
msgid ""
"To list packages ranked according to package search rank criteria, in the"
" left sidebar, under “Sort packages”, click the criterion. For example, "
"to sort packages by popularity, click “Popularity”."
msgstr ""

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:18
msgid "In the package search results list, click the name of the package."
msgstr ""

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:21
msgid "Package search rank criteria"
msgstr "包搜索排名标准"

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:23
msgid ""
"Often, there are dozens or even hundreds of packages with similar names "
"and/or similar purposes. To help you decide the best ones to explore, "
"each package has been ranked according to four criteria using the npms "
"analyzer:"
msgstr ""
"Often, there are dozens or even hundreds of packages with similar names "
"and/or similar purposes. To help you decide the best ones to explore, "
"each package has been ranked according to four criteria using the npms "
"analyzer:"

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:26
msgid "Popularity"
msgstr "声望"

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:28
msgid ""
"Popularity indicates how many times the package has been downloaded. This"
" is a strong indicator of packages that others have found to be useful."
msgstr ""
"Popularity indicates how many times the package has been downloaded. This"
" is a strong indicator of packages that others have found to be useful."

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:31
msgid "Quality"
msgstr "质量"

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:33
msgid ""
"Quality includes considerations such as the presence of a README file, "
"stability, tests, up-to-date dependencies, custom website, and code "
"complexity."
msgstr ""
"Quality includes considerations such as the presence of a README file, "
"stability, tests, up-to-date dependencies, custom website, and code "
"complexity."

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:36
msgid "Maintenance"
msgstr "保养"

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:38
msgid ""
"Maintenance ranks packages according to the attention they are given by "
"developers. More frequently maintained packages are more likely to work "
"well with the current or upcoming versions of the npm CLI, for example."
msgstr ""
"Maintenance ranks packages according to the attention they are given by "
"developers. More frequently maintained packages are more likely to work "
"well with the current or upcoming versions of the npm CLI, for example."

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:41
msgid "Optimal"
msgstr "最佳"

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:43
msgid ""
"Optimal combines the other three criteria (popularity, quality, "
"maintenance) into one score in a meaningful way."
msgstr ""
"Optimal combines the other three criteria (popularity, quality, "
"maintenance) into one score in a meaningful way."

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:2
msgid "Specifying dependencies and devDependencies in a package.json file"
msgstr "在package.json文件中指定依赖项和devDependencies"

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:4
msgid ""
"To specify the packages your project depends on, you must list them as "
"\"dependencies\" or \"devDependencies\" in your package’s package.json "
"file. When you (or another user) run npm install, npm will download "
"dependencies and devDependencies that are listed in package.json that "
"meet the semantic version requirements listed for each. To see which "
"versions of a package will be installed, use the semver calculator."
msgstr ""

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:6
msgid ""
"\"dependencies\": Packages required by your application in production. "
"\"devDependencies\": Packages that are only needed for local development "
"and testing."
msgstr ""
"\"dependencies\": Packages required by your application in production. "
"\"devDependencies\": Packages that are only needed for local development "
"and testing."

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:10
msgid "Adding dependencies to a package.json file"
msgstr "将依赖项添加到package.json文件"

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:12
msgid ""
"You can add dependencies to a package.json file from the command line or "
"by manually editing the package.json file."
msgstr ""
"You can add dependencies to a package.json file from the command line or "
"by manually editing the package.json file."

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:15
msgid "Adding dependencies to a package.json file from the command line"
msgstr "从命令行向package.json文件添加依赖项"

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:17
msgid ""
"To add dependencies and devDependencies to a package.json file from the "
"command line, you can install them in the root directory of your package "
"using the --save-prod flag for dependencies (the default behavior of npm "
"install) or the --save-dev flag for devDependencies."
msgstr ""
"To add dependencies and devDependencies to a package.json file from the "
"command line, you can install them in the root directory of your package "
"using the --save-prod flag for dependencies (the default behavior of npm "
"install) or the --save-dev flag for devDependencies."

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:19
msgid ""
"To add an entry to the \"dependencies\" attribute of a package.json file,"
" on the command line, run the following command:"
msgstr ""
"To add an entry to the \"dependencies\" attribute of a package.json file,"
" on the command line, run the following command:"

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:21
msgid ""
"npm install <package-name> [--save-prod] To add an entry to the "
"\"devDependencies\" attribute of a package.json file, on the command "
"line, run the following command:"
msgstr ""
"npm install <package-name> [--save-prod] To add an entry to the "
"\"devDependencies\" attribute of a package.json file, on the command "
"line, run the following command:"

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:24
#, fuzzy
msgid "npm install <package-name> --save-dev"
msgstr "npm install example-package-name --no-audit"

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:27
#, fuzzy
msgid "Manually editing the package.json file"
msgstr "创建package.json文件"

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:29
msgid ""
"To add dependencies to a package.json file, in a text editor, add an "
"attribute called \"dependencies\" that references the name and semantic "
"version of each dependency:"
msgstr ""
"To add dependencies to a package.json file, in a text editor, add an "
"attribute called \"dependencies\" that references the name and semantic "
"version of each dependency:"

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:42
msgid ""
"To add devDependencies to a package.json file, in a text editor, add an "
"attribute called \"devDependencies\" that references the name and "
"semantic version of each devDependency:"
msgstr ""
"To add devDependencies to a package.json file, in a text editor, add an "
"attribute called \"devDependencies\" that references the name and "
"semantic version of each devDependency:"

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:44
msgid "\"name\": \"my_package\", \"version\": \"1.0.0\", \"dependencies\": {"
msgstr "\"name\": \"my_package\", \"version\": \"1.0.0\", \"dependencies\": {"

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:47
msgid "\"my_dep\": \"^1.0.0\", \"another_dep\": \"~2.2.0\""
msgstr "\"my_dep\": \"^1.0.0\", \"another_dep\": \"~2.2.0\""

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:49
msgid "}, \"devDependencies\" : {"
msgstr "}, \"devDependencies\" : {"

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:51
msgid "\"my_test_framework\": \"^3.1.0\". \"another_dev_dep\": \"1.0.0 - 1.2.0\""
msgstr "\"my_test_framework\": \"^3.1.0\". \"another_dev_dep\": \"1.0.0 - 1.2.0\""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:2
msgid "Transferring a package from a user account to an Org"
msgstr "将包从用户帐户转移到组织"

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:4
msgid ""
"As a package maintainer, you may want to move a package into an Org so "
"that all members or everyone on a specific team, can publish to the "
"package."
msgstr ""
"As a package maintainer, you may want to move a package into an Org so "
"that all members or everyone on a specific team, can publish to the "
"package."

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:6
#, fuzzy
msgid ""
"If your package is private, the new package owner must also have a paid "
"user account It is possible to transfer ownership of scoped packages, "
"however we don't recommend it because it can create some ownership "
"confusion."
msgstr ""
".. note:: If your package is scoped and private, the new package owner "
"must also have a paid user account. It is possible to transfer ownership "
"of user-scoped packages, however we don't recommend it because it can "
"create some ownership confusion."

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:7
msgid ""
"Transferring packages between a user and an Org works slightly "
"differently than transferring packages between users. There will be an "
"extra step of adding the package to an Org team. The new maintainer or "
"owner will also need to be the Org owner or team admin."
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:10
msgid "Transferring a package from a user account to an Org on the website"
msgstr "将包从用户帐户转移到网站上的组织"

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:12
msgid "To transfer a package you own or maintain to an Org, follow these steps:"
msgstr "要将您拥有或维护的包转移到组织，请按照下列步骤操作:"

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:14
msgid ""
"Navigate to the package page for the package you want to transfer, "
"replacing <your-package-name> with the name of your package: "
"https://www.npmjs.com/package/<your-package-name>. On the package Admin "
"tab, under “Maintainers,” enter the npm username of the new maintainer. "
"package page admin tab showing text field to invite maintainers"
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:18
msgid ""
"Click “Invite.” To remove yourself as a maintainer, under the maintainers"
" list, click the “x” next to your username. package page admin tab "
"listing two maintainers"
msgstr ""
"Click “Invite.” To remove yourself as a maintainer, under the maintainers"
" list, click the “x” next to your username. package page admin tab "
"listing two maintainers"

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:22
msgid ""
"Once this has been done, the Org owner or team admin who is now a "
"maintainer on the package will need to add the package to an Org team."
msgstr "完成此操作后，现在是程序包维护者的组织所有者或团队管理员需要将程序包添加到组织团队。"

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:25
msgid "Transferring a package from a user account to an Org on the command line"
msgstr "在命令行上将程序包从用户帐户传输到组织"

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:27
msgid ""
"To transfer a package to an Org using the CLI, on the command line, run "
"the npm owner add and rm commands in order, replacing <their-username> "
"with the npm username of the Org owner or team admin, and <your-username>"
" with your npm username, and <package-name> with the package you want to "
"transfer:"
msgstr ""
"要使用CLI将程序包传输到组织，请在命令行上按顺序运行npm owner add和rm命令，将<their-"
"username>替换为组织所有者或团队管理员的npm用户名，以及<your-username >使用您的npm用户名，使用您要传输的包的"
"<package-name>:"

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:29
msgid ""
"npm owner add npm <their-username> <package-name> npm owner rm <your-"
"username> <package-name> If you have two-factor authentication enabled "
"for writes, add a one-time password to the commands, --otp=123456 (where "
"123456 is the code from your authenticator application)."
msgstr ""
"npm owner add npm <their-username> <package-name> npm owner rm <your-"
"username> <package-name> If you have two-factor authentication enabled "
"for writes, add a one-time password to the commands, --otp=123456 (where "
"123456 is the code from your authenticator application)."

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:33
msgid ""
"npm owner add npm <their-username> <package-name> --otp=123456 npm owner "
"rm <your-username> <package-name> --otp=123456 .. note:: After this is "
"done, the Org owner or team admin will be able to add the package to a "
"team in their Org, using the access command."
msgstr ""
"npm owner add npm <their-username> <package-name> --otp=123456 npm owner "
"rm <your-username> <package-name> --otp=123456 .. note:: After this is "
"done, the Org owner or team admin will be able to add the package to a "
"team in their Org, using the access command."

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:2
msgid "Transferring a package from a user account to another user account"
msgstr "将包从用户帐户转移到另一个用户帐户"

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:4
msgid ""
"As a package owner or maintainer, you can transfer ownership of a package"
" you no longer wish to maintain to another trusted npm user on either the"
" npm website or the command line."
msgstr ""
"As a package owner or maintainer, you can transfer ownership of a package"
" you no longer wish to maintain to another trusted npm user on either the"
" npm website or the command line."

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:6
msgid ""
"Transferring a package from a user to an Org, or an Org to a user works "
"differently than this process."
msgstr "将包从用户转移到组织或组织转移到用户的工作方式与此过程不同。"

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:8
msgid ""
"For more information on how npm support handles package name disputes "
"between users, you can refer to npm’s package name dispute policy."
msgstr "有关npm支持如何处理用户之间的包名争议的更多信息，您可以参考npm的包名争议政策。"

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:10
msgid ""
"If your package is scoped and private, the new package owner must also "
"have a paid user account. It is possible to transfer ownership of user-"
"scoped packages, however we don't recommend it because it can create some"
" ownership confusion."
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:13
msgid ""
"Transferring a package from a user account to another user account on the"
" website"
msgstr "将包从用户帐户转移到网站上的另一个用户帐户"

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:15
msgid ""
"To transfer a package you own or maintain to another user, follow these "
"steps:"
msgstr "要将您拥有或维护的包转移给其他用户，请按照下列步骤操作:"

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:17
msgid ""
"Navigate to the package page for the package you want to transfer, "
"replacing <your-package-name> with the name of your package: "
"https://www.npmjs.com/package/<your-package-name>."
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:18
msgid ""
"On the package Admin tab, under “Maintainers”, enter the npm username of "
"the new maintainer."
msgstr "在程序包Admin选项卡的“Maintainers”下，输入新维护者的npm用户名。"

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:23
msgid "Click “Invite.”"
msgstr "点击 “Invite.”"

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:24
msgid ""
"To remove yourself as a maintainer, under the maintainers list, click the"
" “x” next to your username."
msgstr "要删除自己作为维护者，请在维护者列表下单击用户名旁边的“x”。"

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:30
msgid ""
"Transferring a package from a user account to another user account on the"
" command line"
msgstr "在命令行上将程序包从用户帐户转移到另一个用户帐户"

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:32
#, fuzzy
msgid ""
"To transfer a package to another npm user using the CLI, run the npm "
"owner add and rm commands in order, replacing <their-username> with the "
"other user’s npm username, <your-username> with your npm username, and "
"<package-name> with the package you want to transfer::"
msgstr ""
"To transfer a package to another npm user using the CLI, run the npm "
"owner add and rm commands in order, replacing <their-username> with the "
"other user’s npm username, <your-username> with your npm username, and "
"<package-name> with the package you want to transfer:"

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:37
#, fuzzy
msgid ""
"If you have two-factor authentication enabled for writes, add a one-time "
"password to the command, --otp=123456 (where 123456 is the code from your"
" authenticator application)."
msgstr ""
"If you have two-factor auth, add a one-time password to the command, "
"--otp=123456 (where 123456 is the code from your authenticator)."

#: ../../source/packages-and-modules/transferring-a-package-from-an-org-to-a-user-account.rst:2
msgid "Transferring a package from an Org to a user account"
msgstr "将包从组织转移到用户帐户"

#: ../../source/packages-and-modules/transferring-a-package-from-an-org-to-a-user-account.rst:4
msgid ""
"You may also want to move a package out of an Org to a user account. For "
"example, if you no longer want the package to be controlled by an Org, "
"and would like to transfer it to a user."
msgstr ""
"You may also want to move a package out of an Org to a user account. For "
"example, if you no longer want the package to be controlled by an Org, "
"and would like to transfer it to a user."

#: ../../source/packages-and-modules/transferring-a-package-from-an-org-to-a-user-account.rst:6
msgid ""
"If a package has been added to an Org team, adding a collaborator using "
"the package admin tab or the owner CLI command will result in a team not "
"found error."
msgstr ""
"If a package has been added to an Org team, adding a collaborator using "
"the package admin tab or the owner CLI command will result in a team not "
"found error."

#: ../../source/packages-and-modules/transferring-a-package-from-an-org-to-a-user-account.rst:8
msgid ""
"In this case, you won’t be able to add a collaborator, then remove the "
"package from a team."
msgstr "在这种情况下，您将无法添加协作者，然后从团队中删除该包。"

#: ../../source/packages-and-modules/transferring-a-package-from-an-org-to-a-user-account.rst:10
msgid ""
"If you need to transfer a package from an Org to a user account, contact "
"npm Support."
msgstr "如果您需要将包从组织转移到用户帐户，请联系npm支持。"

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:2
msgid "Uninstalling packages and dependencies"
msgstr "卸载包和依赖项"

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:4
msgid ""
"If you no longer need to use a package in your code, we recommend "
"uninstalling it and removing it from your project’s dependencies."
msgstr "如果您不再需要在代码中使用包，我们建议将其卸载并从项目的依赖项中删除它。"

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:7
#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:109
msgid "Uninstalling local packages"
msgstr "卸载本地包"

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:10
msgid "Removing a local package from your node_modules directory"
msgstr "从node_modules目录中删除本地程序包"

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:12
#, fuzzy
msgid ""
"To remove a package from your **node_modules** directory, on the command "
"line, use the :option:`npm uninstall` command. Include the scope if the "
"package is scoped."
msgstr "要从node_modules目录中删除程序包，请在命令行上使用uninstall命令。如果包是作用域，则包括范围。"

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:16
#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:43
#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:83
msgid "Unscoped package"
msgstr "无范围包"

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:23
#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:50
#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:90
msgid "Scoped package"
msgstr "范围包"

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:37
msgid "Removing a local package from the package.json dependencies"
msgstr "从package.json依赖项中删除本地包"

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:39
#, fuzzy
msgid ""
"To remove a package from the dependencies in **package.json**, use the "
"**--save** flag. Include the scope if the package is scoped."
msgstr ""
"To remove a package from the dependencies in package.json, use the --save"
" flag. Include the scope if the package is scoped."

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:64
#, fuzzy
msgid ""
"If you installed a package as a \"*devDependency*\" (i.e. with **--save-"
"dev**), use **--save-dev** to uninstall it: ``npm uninstall --save-dev "
"package_name``"
msgstr ""
"npm uninstall --save lodash .. note:: If you installed a package as a "
"\"devDependency\" (i.e. with --save-dev), use --save-dev to uninstall it:"
" npm uninstall --save-dev package_name"

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:68
msgid "Confirming local package uninstallation"
msgstr "确认本地程序包卸载"

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:70
#, fuzzy
msgid ""
"To confirm that ``npm uninstall`` worked correctly, check that the "
"**node_modules** directory no longer contains a directory for the "
"uninstalled package(s)."
msgstr ""
"To confirm that npm uninstall worked correctly, check that the "
"node_modules directory no longer contains a directory for the uninstalled"
" package(s)."

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:73
#, fuzzy
msgid "Unix system (such as OSX): ``ls node_modules``"
msgstr "Unix系统（如OSX）: ``ls node_modules``"

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:74
msgid "Windows systems: ``dir node_modules``"
msgstr "Windows系统: ``dir node_modules``"

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:77
#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:113
msgid "Uninstalling global packages"
msgstr "卸载全局包"

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:79
#, fuzzy
msgid ""
"To uninstall an unscoped global package, on the command line, use the "
"**uninstall** command with the **-g** flag. Include the scope if the "
"package is scoped."
msgstr ""
"To uninstall an unscoped global package, on the command line, use the "
"uninstall command with the -g flag. Include the scope if the package is "
"scoped."

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:99
msgid "For example, to uninstall a package called **jshint**, run:"
msgstr "例如，要卸载名为 **jshint** 的包，请运行:"

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:2
msgid "Unpublishing packages from the registry"
msgstr "从注册表中取消发布包"

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:4
msgid ""
"In order to permanently remove a package (or package version) from the "
"npm registry, as a package owner or collaborator, you can unpublish it "
"from the the command line within 72 hours of the initial publish."
msgstr ""
"In order to permanently remove a package (or package version) from the "
"npm registry, as a package owner or collaborator, you can unpublish it "
"from the the command line within 72 hours of the initial publish."

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:6
msgid ""
"If you want to unpublish a package after 72 hours have passed, contact "
"npm Support. For more information about why we don’t allow users to "
"unpublish packages after 72 hours, see our unpublish policy."
msgstr ""
"If you want to unpublish a package after 72 hours have passed, contact "
"npm Support. For more information about why we don’t allow users to "
"unpublish packages after 72 hours, see our unpublish policy."

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:8
msgid ""
"If you are using npm Enterprise, you can have an admin contact npm "
"Enterprise Support at enterprise@npmjs.com to increase the unpublishing "
"window for your instance beyond 72 hours."
msgstr ""

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:9
msgid ""
"Unpublishing a package using the CLI or by contacting npm support is the "
"only way to remove a package or version from the registry. For example, "
"removing all the collaborators or teams from the package will not "
"unpublish it."
msgstr ""

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:11
msgid ""
"If you are no longer interested in maintaining a package, but want it to "
"remain available for users to install, or if your package has dependents,"
" we’d recommend deprecating it. To learn about how to deprecate a "
"package, see “Deprecating and undeprecating packages or package "
"versions”."
msgstr ""

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:13
msgid ""
"Unpublishing a package permanently removes the package from the registry "
"so it is no longer available for other users to install. Once a package "
"is unpublished, it cannot be republished. If you’ve unpublished a package"
" by mistake, we’d recommend publishing again under a different name, or "
"for unpublished versions, bumping the version number and publishing "
"again."
msgstr ""

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:15
msgid "You might want to unpublish a package because you:"
msgstr "您可能想要取消发布包，因为您:"

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:17
msgid ""
"Published something accidentally. Wanted to test npm. Published content "
"you didn’t intend to be public. Wanted to rename a package. (The only way"
" to rename a package is to re-publish it under a new name) .. note:: "
"Since various systems rely on package-name@version being unique, you "
"cannot reuse a published version by unpublishing and re-publishing it. If"
" you want to reuse a version number, we recommend publishing a minor "
"version update instead."
msgstr ""

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:24
msgid "Unpublishing an entire package"
msgstr "取消发布整个包裹"

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:26
msgid ""
"To unpublish an entire package, run the following command, replacing "
"<package-name> with the name of your package:"
msgstr ""
"To unpublish an entire package, run the following command, replacing "
"<package-name> with the name of your package:"

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:28
msgid ""
"npm unpublish <package-name> -f If you have two-factor authentication "
"enabled for writes, you will need to add a one-time password to the "
"unpublish command, --otp=123456 (where 123456 is the code from your "
"authenticator app)."
msgstr ""
"npm unpublish <package-name> -f If you have two-factor authentication "
"enabled for writes, you will need to add a one-time password to the "
"unpublish command, --otp=123456 (where 123456 is the code from your "
"authenticator app)."

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:32
msgid "Unpublishing a single version of a package"
msgstr "取消发布单个版本的包"

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:34
msgid ""
"To unpublish a single version of a package, run the following command, "
"replacing <package-name> with the name of your package, and <version> "
"with your version number:"
msgstr ""
"To unpublish a single version of a package, run the following command, "
"replacing <package-name> with the name of your package, and <version> "
"with your version number:"

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:36
msgid ""
"npm unpublish <package-name>@<version> If you have two-factor auth, add a"
" one-time password to the command, --otp=123456 (where 123456 is the code"
" from your authenticator)."
msgstr ""
"npm unpublish <package-name>@<version> If you have two-factor auth, add a"
" one-time password to the command, --otp=123456 (where 123456 is the code"
" from your authenticator)."

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:2
msgid "Updating packages downloaded from the registry"
msgstr "更新从注册表下载的包"

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:4
msgid ""
"Updating local and global packages you downloaded from the registry helps"
" keep your code and tools stable, usable, and secure."
msgstr ""
"Updating local and global packages you downloaded from the registry helps"
" keep your code and tools stable, usable, and secure."

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:7
msgid "Updating local packages"
msgstr "更新本地包"

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:9
msgid ""
"We recommend regularly updating the local packages your project depends "
"on to improve your code as improvements to its dependencies are made."
msgstr ""
"We recommend regularly updating the local packages your project depends "
"on to improve your code as improvements to its dependencies are made."

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:11
#, fuzzy
msgid ""
"Navigate to the root directory of your project and ensure it contains a "
"package.json file::"
msgstr "导航到包的根目录::"

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:15
#, fuzzy
msgid "In your project root directory, run the update command::"
msgstr "在程序包根目录中，运行 npm init 命令。"

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:19
msgid ""
"To test the update, run the outdated command. There should not be any "
"output::"
msgstr ""

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:24
msgid "Updating globally-installed packages"
msgstr "更新全局安装的包"

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:27
#, fuzzy
msgid ""
"If you are using npm version 2.6.0 or less, run this script to update all"
" outdated global packages. However, please consider upgrading to the "
"latest version of npm:"
msgstr ""
".. note:: If you are using npm version 2.6.0 or less, run this script to "
"update all outdated global packages. However, please consider upgrading "
"to the latest version of npm: npm install npm@latest -g"

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:36
msgid "Determining which global packages need updating"
msgstr "确定哪些全局包需要更新"

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:38
msgid ""
"To see which global packages need to be updated, on the command line, "
"run::"
msgstr "要查看需要更新的全局包，请在命令行上运行::"

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:43
msgid "Updating a single global package"
msgstr "更新单个全局包"

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:45
msgid "To update a single global package, on the command line, run::"
msgstr "要更新单个全局程序包，请在命令行上运行::"

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:50
msgid "Updating all globally-installed packages"
msgstr "更新所有全局安装的包"

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:52
msgid "To update all global packages, on the command line, run::"
msgstr "要更新所有全局程序包，请在命令行上运行::"

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:61
msgid "CLI commands"
msgstr "CLI命令"

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:63
msgid ":option:`npm update`"
msgstr ""

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:64
msgid ":option:`npm outdated`"
msgstr ""

#: ../../source/packages-and-modules/updating-your-published-package-version-number.rst:2
msgid "Updating your published package version number"
msgstr "更新已发布的软件包版本号"

#: ../../source/packages-and-modules/updating-your-published-package-version-number.rst:4
msgid ""
"When you make significant changes to a published package, we recommend "
"updating the version number to communicate the extent of the changes to "
"others who rely on your code."
msgstr ""
"When you make significant changes to a published package, we recommend "
"updating the version number to communicate the extent of the changes to "
"others who rely on your code."

#: ../../source/packages-and-modules/updating-your-published-package-version-number.rst:6
msgid ""
"If you have linked a git repository to a package, updating the package "
"version number will also add a tag with the updated release number to the"
" linked git repository."
msgstr ""

#: ../../source/packages-and-modules/updating-your-published-package-version-number.rst:8
msgid ""
"To change the version number in package.json, on the command line, in the"
" package root directory, run the following command, replacing "
"<update_type> with one of the semantic versioning release types (patch, "
"major, or minor)::"
msgstr ""

#: ../../source/packages-and-modules/updating-your-published-package-version-number.rst:12
#, fuzzy
msgid "Run npm publish."
msgstr "npm publish"

#: ../../source/packages-and-modules/updating-your-published-package-version-number.rst:13
msgid ""
"Go to your package page (https://npmjs.com/package/<package>) to check "
"that the package version has been updated."
msgstr ""

#: ../../source/packages-and-modules/updating-your-published-package-version-number.rst:15
#, fuzzy
msgid "For more information on :option:`npm version`, see the CLI documentation."
msgstr "For more information on the publish command, see the CLI documentation."

#: ../../source/packages-and-modules/using-deprecated-packages.rst:2
msgid "Using deprecated packages"
msgstr "使用已弃用的包"

#: ../../source/packages-and-modules/using-deprecated-packages.rst:4
msgid ""
"If you install a package, and it prints a deprecation message, we "
"recommend following the instructions, if possible."
msgstr ""
"If you install a package, and it prints a deprecation message, we "
"recommend following the instructions, if possible."

#: ../../source/packages-and-modules/using-deprecated-packages.rst:6
msgid ""
"That might mean updating to a new version, or updating your package "
"dependencies."
msgstr ""
"That might mean updating to a new version, or updating your package "
"dependencies."

#: ../../source/packages-and-modules/using-deprecated-packages.rst:11
msgid ""
"A deprecation message doesn’t always mean the package or version is "
"unusable; it may mean the package is unmaintained and will no longer be "
"updated by the publisher."
msgstr ""
"A deprecation message doesn’t always mean the package or version is "
"unusable; it may mean the package is unmaintained and will no longer be "
"updated by the publisher."

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:2
msgid "Using npm packages in your projects"
msgstr "在项目中使用npm包"

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:4
#, fuzzy
msgid ""
"Once you have :doc:`downloading-and-installing-packages` in node_modules,"
" you can use it in your code."
msgstr "在node_modules中安装软件包后，可以在代码中使用它。"

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:7
msgid "Using unscoped packages in your projects"
msgstr "在项目中使用未范围的包"

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:10
#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:48
msgid "Node.js module"
msgstr "Node.js 模"

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:12
#, fuzzy
msgid ""
"If you are creating a Node.js module, you can use a package in your "
"module by passing it as an argument to the **require** function."
msgstr "如果要创建Node.js模块，可以通过将其作为参数传递给require函数来使用模块中的包。"

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:15
msgid "Example: using lodash in a Node.js module"
msgstr "示例:在Node.js模块中使用lodash"

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:17
#, fuzzy
msgid ""
"For example, to use the lodash package in a Node.js module, in the root "
"directory of the module, create a file named **index.js** with the "
"following contents:"
msgstr ""
"For example, to use the lodash package in a Node.js module, in the root "
"directory of the module, create a file named index.js with the following "
"contents:"

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:27
#, fuzzy
msgid "Run the code using **node index.js**. It should output [2, 3]."
msgstr ""
"var output = lodash.without([1, 2, 3], 1); console.log(output); Run the "
"code using node index.js. It should output [2, 3]."

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:30
#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:58
msgid "package.json file"
msgstr "package.json 文件:"

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:32
#, fuzzy
msgid ""
"In **package.json**, list the package under dependencies. You can "
"optionally include a semantic version."
msgstr ""
"In package.json, list the package under dependencies. You can optionally "
"include a semantic version."

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:43
msgid "Using scoped packages in your projects"
msgstr "在项目中使用范围包"

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:45
msgid ""
"To use a scoped package, simply include the scope wherever you use the "
"package name."
msgstr ""
"To use a scoped package, simply include the scope wherever you use the "
"package name."

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:50
msgid ""
"When requiring a scoped package in the index.js file of your Node.js "
"module, you must reference the scope in addition to the package name:"
msgstr ""
"When requiring a scoped package in the index.js file of your Node.js "
"module, you must reference the scope in addition to the package name:"

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:60
#, fuzzy
msgid "In **package.json**:"
msgstr "在 package.json:"

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:71
msgid "Resolving “Cannot find module” errors"
msgstr "解决 “Cannot find module” errors"

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:73
#, fuzzy
msgid ""
"If you have not properly installed a package, you will receive an error "
"when you try to use it in your code. For example, if you reference the "
"**lodash** package without installing it, you would see the following "
"error:"
msgstr ""
"If you have not properly installed a package, you will receive an error "
"when you try to use it in your code. For example, if you reference the "
"lodash package without installing it, you would see the following error:"

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:83
#, fuzzy
msgid ""
"To resolve “cannot find module” errors, run the appropriate **install** "
"command in the same directory as your project’s **index.js** file:"
msgstr ""
"Error: Cannot find module 'lodash' To resolve “cannot find module” "
"errors, run the appropriate install command in the same directory as your"
" project’s index.js file:"

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:85
#, fuzzy
msgid "For scoped packages, run ``npm install <@scope/package_name>``"
msgstr "Unscoped package§ npm uninstall <package_name>"

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:86
#, fuzzy
msgid "For unscoped packages, run ``npm install <package_name>``"
msgstr ""
"For scoped packages, run npm install <@scope/package_name> For unscoped "
"packages, run npm install <package_name>"

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:2
msgid "Verifying the PGP signature of a package from the npm public registry"
msgstr "从npm公共注册表验证包的PGP签名"

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:4
msgid ""
"To ensure the integrity of a package version you download from the npm "
"public registry, you can manually verify the PGP signature of the "
"package."
msgstr ""
"To ensure the integrity of a package version you download from the npm "
"public registry, you can manually verify the PGP signature of the "
"package."

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:6
msgid ""
"Since fully verifying signatures on Keybase requires rechecking proofs "
"(which requires network activity) and is therefore expensive, we "
"recommend only verifying signatures if it is absolutely necessary -- for "
"example, when verifying a deploy artifact, or when initially storing a "
"package in your cache."
msgstr ""

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:9
msgid "Prerequisites"
msgstr "Prerequisites"

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:11
msgid ""
"Install Keybase from https://keybase.io/download Create a Keybase account"
" on https://keybase.io Follow “npmregistry” on Keybase. Download a local "
"copy of the npm public registry’s public PGP key."
msgstr ""
"Install Keybase from https://keybase.io/download Create a Keybase account"
" on https://keybase.io Follow “npmregistry” on Keybase. Download a local "
"copy of the npm public registry’s public PGP key."

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:17
#, fuzzy
msgid "Verifying npm signatures for the public registry"
msgstr "从npm公共注册表验证包的PGP签名"

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:19
msgid ""
"The following steps use version 1.4.3 of the light-cycle package as an "
"example."
msgstr ""

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:20
#, fuzzy
msgid ""
"On the command line, fetch the signature for the package version you want"
" and save it in a file:"
msgstr ""
".. note:: The following steps use version 1.4.3 of the light-cycle "
"package as an example. On the command line, fetch the signature for the "
"package version you want and save it in a file:"

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:21
msgid ""
"$ http GET https://registry.npmjs.org/light-cycle | json "
"\"versions['1.4.3'].dist.npm-signature\" > sig-to-check"
msgstr ""
"$ http GET https://registry.npmjs.org/light-cycle | json "
"\"versions['1.4.3'].dist.npm-signature\" > sig-to-check"

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:22
msgid ""
"Get the integrity field for that version (example below includes "
"response):"
msgstr ""
"Get the integrity field for that version (example below includes "
"response):"

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:23
msgid ""
"$ http GET https://registry.npmjs.org/light-cycle | json "
"\"versions['1.4.3'].dist.integrity\""
msgstr ""
"$ http GET https://registry.npmjs.org/light-cycle | json "
"\"versions['1.4.3'].dist.integrity\""

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:24
#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:29
msgid "Example response:"
msgstr "响应示例:"

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:26
msgid "sha512-sFcuivsDZ99fY0TbvuRC6CDXB8r/ylafjJAMnbSF0y4EMM1/1DtQo40G2WKz1rBbyiz4SLAc3Wa6yZyC4XSGOQ=="
msgstr "sha512-sFcuivsDZ99fY0TbvuRC6CDXB8r/ylafjJAMnbSF0y4EMM1/1DtQo40G2WKz1rBbyiz4SLAc3Wa6yZyC4XSGOQ=="

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:27
msgid ""
"Construct the string that ties the unique package name and version to the"
" integrity string (example below includes response):"
msgstr ""
"Construct the string that ties the unique package name and version to the"
" integrity string (example below includes response):"

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:28
msgid ""
"$ keybase pgp verify --signed-by npmregistry -d sig-to-check -m 'light-"
"cycle@1.4.3:sha512-sFcuivsDZ99fY0TbvuRC6CDXB8r/ylafjJAMnbSF0y4EMM1/1DtQo40G2WKz1rBbyiz4SLAc3Wa6yZyC4XSGOQ=='"
msgstr ""
"$ keybase pgp verify --signed-by npmregistry -d sig-to-check -m 'light-"
"cycle@1.4.3:sha512-sFcuivsDZ99fY0TbvuRC6CDXB8r/ylafjJAMnbSF0y4EMM1/1DtQo40G2WKz1rBbyiz4SLAc3Wa6yZyC4XSGOQ=='"

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:31
msgid ""
"▶ INFO Identifying npmregistry ✔ <tracked> public key fingerprint: 0963 "
"1802 8A2B 58C8 4929 D8E1 3D4D 5B12 0276 566A You last followed "
"npmregistry on 2018-04-10 21:21:57 PDT ✔ <tracked> admin of DNS zone "
"npmjs.com: found TXT entry keybase-site-verification=iK3pjpRBkv-"
"CIJ4PHtWL4TTcFXMpPiwPynatKl3oWO4 ✔ <tracked> \"npmjs\" on twitter: "
"https://twitter.com/npmjs/status/981288548845240320 [cached 2018-04-12 "
"13:18:31 PDT; but got a retryable error (API network error: Get "
"https://twitter.com/npmjs/status/981288548845240320: net/http: request "
"canceled (Client.Timeout exceeded while awaiting headers) (code=170)) "
"this time around] ✔ <tracked> admin of DNS zone npmjs.org: found TXT "
"entry keybase-site-verification=Ls8jN55i6KesjiX91Ck79bUZ17eA-"
"iohmw2jJFM16xc Signature verified. Signed by npmregistry 7 minutes ago "
"(2018-04-13 15:00:37 -0700 PDT). PGP Fingerprint: "
"096318028a2b58c84929d8e13d4d5b120276566a."
msgstr ""

#~ msgid ""
#~ "Vulnerability table fields§ Severity "
#~ "Description Package Patched in Dependency "
#~ "of Path More info Severity§ The "
#~ "severity of the vulnerability, determined "
#~ "by the impact and exploitability of "
#~ "the vulnerability in its most common "
#~ "use case."
#~ msgstr ""

#~ msgid ""
#~ "Severity        Recommended action Critical"
#~ "        Address immediately High    Address "
#~ "as quickly as possible Moderate        "
#~ "Address as time allows Low     Address"
#~ " at your discretion Description§ The "
#~ "description of the vulnerability. For "
#~ "example, “Denial of service”."
#~ msgstr ""

#~ msgid ""
#~ "Patched in§ The semantic version range"
#~ " that describes which versions contain "
#~ "a fix for the vulnerability."
#~ msgstr ""

#~ msgid ""
#~ "Dependency of§ The module that the "
#~ "package with the vulnerability depends "
#~ "on."
#~ msgstr ""

#~ msgid ""
#~ "Creating and adding a README.md file "
#~ "to a package§ In a text editor,"
#~ " in your package root directory, "
#~ "create a file called README.md. In "
#~ "the README.md file, add useful "
#~ "information about your package. Save the"
#~ " README.md file. .. note:: The file"
#~ " extension .md indicates a Markdown "
#~ "file. For more information about "
#~ "Markdown, see the GitHub Guide "
#~ "\"Mastering Markdown\". Updating an existing"
#~ " package README file§ The README file"
#~ " will only be updated on the "
#~ "package page when you publish a "
#~ "new version of your package. To "
#~ "update your README file:"
#~ msgstr ""

#~ msgid ""
#~ "About packages§ A package is a "
#~ "file or directory that is described "
#~ "by a package.json file. A package "
#~ "must contain a package.json file in "
#~ "order to be published to the npm"
#~ " registry. For more information on "
#~ "creating a package.json file, see "
#~ "“Creating a package.json file”."
#~ msgstr ""

#~ msgid ""
#~ "“About scopes” “About private packages” "
#~ "“Package scope, access level, and "
#~ "visibility” About package formats§ A "
#~ "package is any of the following:"
#~ msgstr ""

#~ msgid ""
#~ "g) A git url that, when cloned,"
#~ " results in (a). npm package git "
#~ "URL formats§ Git URLs used for npm"
#~ " packages can be formatted in the "
#~ "following ways:"
#~ msgstr ""

#~ msgid ""
#~ "About modules§ A module is any "
#~ "file or directory in the node_modules"
#~ " directory that can be loaded by "
#~ "the Node.js require() function."
#~ msgstr ""

#~ msgid ""
#~ "Tools we use§ openpgpjs§ To generate "
#~ "PGP signatures, we use openpgpjs, a "
#~ "pure JavaScript implementation of OpenPGP. "
#~ "To learn more about openpgpjs, see "
#~ "https://openpgpjs.org/."
#~ msgstr ""

#~ msgid ""
#~ "Keybase§ We use Keybase to publicize "
#~ "our PGP key and give you "
#~ "confidence that the npm registry you "
#~ "install from is the same registry "
#~ "that signs packages."
#~ msgstr ""

#~ msgid ""
#~ "User-scoped private packages can only"
#~ " be accessed by you and collaborators"
#~ " to whom you have granted read "
#~ "or read/write access. For more "
#~ "information, see “Adding collaborators to "
#~ "private packages owned by a user "
#~ "account”. Org-scoped private packages "
#~ "can only be accessed by teams that"
#~ " have been granted read or read/write"
#~ " access. For more information, see "
#~ "“Managing team access to Org packages”."
#~ " Next steps§ “Creating and publishing "
#~ "private packages” “Using npm packages in"
#~ " your projects” Resources§"
#~ msgstr ""

#~ msgid ""
#~ "Unscoped public packages exist in the"
#~ " global public registry namespace and "
#~ "can be referenced in a package.json "
#~ "file with the package name alone: "
#~ "package-name. Scoped public packages belong"
#~ " to a user or Org and must "
#~ "be preceded by the user or Org "
#~ "name when included as a dependency "
#~ "in a package.json file: @username/package-"
#~ "name @org-name/package-name Next steps§"
#~ " “Creating and publishing scoped public "
#~ "packages” “Creating and publishing unscoped"
#~ " public packages” “Using npm packages "
#~ "in your projects”"
#~ msgstr ""

#~ msgid ""
#~ "Scopes and package visibility§ Unscoped "
#~ "packages are always public. Private "
#~ "packages are always scoped. Scoped "
#~ "packages are private by default; you "
#~ "must pass a command-line flag when"
#~ " publishing to make them public. For"
#~ " more information on package scope "
#~ "and visibility, see “Package scope, "
#~ "access level, and visibility”."
#~ msgstr ""

#~ msgid ""
#~ ".. note:: If you introduce a "
#~ "change that breaks a package dependency,"
#~ " we strongly recommend incrementing the "
#~ "version major number; see below for "
#~ "details. Incrementing semantic versions in "
#~ "published packages§ To help developers "
#~ "who rely on your code, we "
#~ "recommend starting your package version "
#~ "at 1.0.0 and incrementing as follows:"
#~ msgstr ""

#~ msgid ""
#~ "Code status     Stage   Rule    Example "
#~ "version First release   New product     "
#~ "Start with 1.0.0        1.0.0 Backward "
#~ "compatible bug fixes   Patch release   "
#~ "Increment the third digit       1.0.1 "
#~ "Backward compatible new features        Minor"
#~ " release   Increment the middle digit "
#~ "and reset last digit to zero 1.1.0"
#~ " Changes that break backward compatibility"
#~ "       Major release   Increment the first"
#~ " digit and reset middle and last "
#~ "digits to zero      2.0.0 Using semantic"
#~ " versioning to specify update types "
#~ "your package can accept§ You can "
#~ "specify which update types your package"
#~ " can accept from dependencies in your"
#~ " package’s package.json file."
#~ msgstr ""

#~ msgid ""
#~ ".. note:: The user you want to "
#~ "add as a collaborator on your "
#~ "private package must have a paid "
#~ "user account. To sign up for a "
#~ "paid account, they can visit "
#~ "https://https://www.npmjs.com/settings/username/billing, "
#~ "replacing username with their npm "
#~ "username. Granting access to a private"
#~ " user package on the web§ On "
#~ "the npm website, go to the package"
#~ " to which you want to add a "
#~ "collaborator: https://www.npmjs.com/package/<your-"
#~ "package-name> On the package page, "
#~ "under “Collaborators”, click +. Enter "
#~ "the npm username of the collaborator."
#~ " Click Submit. Granting private package "
#~ "access from the command line interface§"
#~ " To add a collaborator to a "
#~ "package on the command line, run "
#~ "the following command, replacing <user> "
#~ "with the npm username of your "
#~ "collaborator, and <your-package-name> "
#~ "with the name of the private "
#~ "package:"
#~ msgstr ""

#~ msgid ""
#~ "npm owner add <user> <your-package-"
#~ "name> Granting access to private Org "
#~ "packages§ To grant an npm user "
#~ "access to private Org packages, you "
#~ "must have an Org owner add them"
#~ " to your Org, then add them to"
#~ " a team that has access to the"
#~ " private package. For more information, "
#~ "see “Adding members to your Org”."
#~ msgstr ""

#~ msgid ""
#~ ".. note:: Since dist-tags share a"
#~ " namespace with semantic versions, avoid"
#~ " dist-tags that conflict with "
#~ "existing version numbers. We recommend "
#~ "avoiding dist-tags that start with "
#~ "a number or the letter \"v\". "
#~ "Publishing a package with a dist-"
#~ "tag§ By default, running npm publish "
#~ "will tag your package with the "
#~ "latest dist-tag. To use another "
#~ "dist-tag, use the --tag flag when "
#~ "publishing."
#~ msgstr ""

#~ msgid ""
#~ "Example§ To publish a package with "
#~ "the “beta” dist-tag, on the "
#~ "command line, run the following command"
#~ " in the root directory of your "
#~ "package:"
#~ msgstr ""

#~ msgid ""
#~ "npm publish --tag beta Adding a "
#~ "dist-tag to a specific version of "
#~ "your package§ On the command line, "
#~ "navigate to the root directory of "
#~ "your package."
#~ msgstr ""

#~ msgid ""
#~ "Example§ To add the “stable” tag "
#~ "to the 1.4.0 version of the "
#~ "“example-package” package, you would run"
#~ " the following command:"
#~ msgstr ""

#~ msgid ""
#~ "Turning off npm audit on package "
#~ "installation§ Installing a single package§ "
#~ "To turn off npm audit when "
#~ "installing a single package, use the "
#~ "--no-audit flag:"
#~ msgstr ""

#~ msgid ""
#~ "Installing all packages§ To turn off "
#~ "npm audit when installing all packages,"
#~ " set the audit setting to false "
#~ "in your user and global npmrc "
#~ "config files:"
#~ msgstr ""

#~ msgid ""
#~ ".. note:: Adding a scope to an "
#~ "unscoped package will not make it "
#~ "private. If you want to make a "
#~ "unscoped package private, contact npm "
#~ "Support. Making a public package "
#~ "private§ .. note:: Making a package "
#~ "private requires a paid user account "
#~ "or Org. To sign up for a "
#~ "paid user or Org, go to "
#~ "https://www.npmjs.com/settings/account-name/billing, "
#~ "replacing account-name with the name "
#~ "of your npm user account or Org."
#~ " If you want to restrict access "
#~ "and visibility for a public package "
#~ "you own, you can make the package"
#~ " private. When you make a package "
#~ "private, it will be removed from "
#~ "the website within a few minutes "
#~ "of the change."
#~ msgstr ""

#~ msgid ""
#~ "Website§ On the npm website, go to"
#~ " the package page. On the package "
#~ "page, click Admin. Under “Package "
#~ "Access”, select “Is Package Private?” "
#~ "Click Update package settings. Command "
#~ "line§ To make a public package "
#~ "private on the command line, run "
#~ "the following command, replacing <package-"
#~ "name> with the name of your "
#~ "package:"
#~ msgstr ""

#~ msgid ""
#~ "Making a private package public§ Note:"
#~ " When you make a private package "
#~ "public, the package will be visible "
#~ "to and downloadable by all npm "
#~ "users. Website§ On the npm website, "
#~ "go to the package page. On the "
#~ "package page, click Admin. Under "
#~ "“Package Access”, deselect “Is Package "
#~ "Private?” Click Update package settings. "
#~ "Command line§ To make a private "
#~ "package public on the command line, "
#~ "run the following command, replacing "
#~ "<package-name> with the name of your"
#~ " package:"
#~ msgstr ""

#~ msgid ""
#~ "lists the packages your project depends"
#~ " on specifies versions of a package"
#~ " that your project can use using "
#~ "semantic versioning rules makes your "
#~ "build reproducible, and therefore easier "
#~ "to share with other developers .. "
#~ "note:: To make your package easier "
#~ "to find on the npm website, we "
#~ "recommend including a custom description "
#~ "in your package.json file. package.json "
#~ "fields§ Required name and version "
#~ "fields§ A package.json file must contain"
#~ " \"name\" and \"version\" fields."
#~ msgstr ""

#~ msgid ""
#~ "Author field§ If you want to "
#~ "include package author information in "
#~ "\"author\" field, use the following "
#~ "format (email and website are both "
#~ "optional):"
#~ msgstr ""

#~ msgid ""
#~ "} Creating a new package.json file§ "
#~ "You can create a package.json file "
#~ "by running a CLI questionnaire or "
#~ "creating a default package.json file."
#~ msgstr ""

#~ msgid ""
#~ "Running a CLI questionnaire§ To create"
#~ " a package.json file with values that"
#~ " you supply, use the npm init "
#~ "command."
#~ msgstr ""

#~ msgid ""
#~ "Answer the questions in the command "
#~ "line questionnaire. Customizing the "
#~ "package.json questionnaire§ If you expect "
#~ "to create many package.json files, you"
#~ " can customize the questions asked "
#~ "and fields created during the init "
#~ "process so all the package.json files"
#~ " contain a standard set of "
#~ "information."
#~ msgstr ""

#~ msgid ""
#~ "Creating a default package.json file§ To"
#~ " create a default package.json using "
#~ "information extracted from the current "
#~ "directory, use the npm init command "
#~ "with the --yes or -y flag. For "
#~ "a list of default values, see "
#~ "“Default values extracted from the "
#~ "current directory”."
#~ msgstr ""

#~ msgid ""
#~ "Default values extracted from the "
#~ "current directory§ name: the current "
#~ "directory name version: always 1.0.0 "
#~ "description: info from the README, or"
#~ " an empty string \"\" main: always"
#~ " index.js scripts: by default creates "
#~ "an empty test script keywords: empty "
#~ "author: empty license: ISC bugs: "
#~ "information from the current directory, "
#~ "if present homepage: information from "
#~ "the current directory, if present "
#~ "Setting config options for the init "
#~ "command§ You can set default config "
#~ "options for the init command. For "
#~ "example, to set the default author "
#~ "email, author name, and license, on "
#~ "the command line, run the following "
#~ "commands:"
#~ msgstr ""

#~ msgid ""
#~ ".. note:: Before you can publish "
#~ "private user-scoped npm packages, you"
#~ " must sign up for a paid npm"
#~ " user account. Additionally, to publish "
#~ "private Org-scoped packages, you must"
#~ " create an npm user account, then "
#~ "create a paid npm Org. Overview§ "
#~ "Create your package Review package "
#~ "contents for sensitive or unnecessary "
#~ "information Publish your package Creating "
#~ "a private package§ If you are "
#~ "using npmrc to manage accounts on "
#~ "multiple registries, on the command "
#~ "line, switch to the appropriate profile:"
#~ msgstr ""

#~ msgid ""
#~ "Respond to the prompts to generate "
#~ "a package.json file. For help naming "
#~ "your package, see “Package name "
#~ "guidelines”. Create a README file that"
#~ " explains what your package code is"
#~ " and how to use it. In your "
#~ "preferred text editor, write the code"
#~ " for your package. Reviewing package "
#~ "contents for sensitive or unnecessary "
#~ "information§ Publishing sensitive information "
#~ "to the registry can harm your "
#~ "users, compromise your development "
#~ "infrastructure, be expensive to fix, and"
#~ " put you at risk of legal "
#~ "action. We strongly recommend removing "
#~ "sensitive information, such as private "
#~ "keys, passwords, [personally identifiable "
#~ "information][pii] (PII), and credit card "
#~ "data before publishing your package to"
#~ " the registry. Even if your package"
#~ " is private, sensitive information can "
#~ "be exposed if the package is made"
#~ " public or downloaded to a computer"
#~ " that can be accessed by more "
#~ "users than intended."
#~ msgstr ""

#~ msgid ""
#~ "Publishing private packages§ By default, "
#~ "scoped packages are published with "
#~ "private visibility."
#~ msgstr ""

#~ msgid ""
#~ ".. note:: Before you can publish "
#~ "user-scoped npm packages, you must "
#~ "sign up for an npm user account."
#~ " Additionally, to publish Org-scoped "
#~ "packages, you must create an npm "
#~ "user account, then create an npm "
#~ "Org. Overview§ Create your package "
#~ "Review package contents for sensitive or"
#~ " unnecessary information Publish your "
#~ "package Creating a scoped public "
#~ "package§ If you are using npmrc to"
#~ " manage accounts on multiple registries,"
#~ " on the command line, switch to "
#~ "the appropriate profile:"
#~ msgstr ""

#~ msgid ""
#~ "Respond to the prompts to generate "
#~ "a package.json file. For help naming "
#~ "your package, see “Package name "
#~ "guidelines”. Create a README file that"
#~ " explains what your package code is"
#~ " and how to use it. In your "
#~ "preferred text editor, write the code"
#~ " for your package. Reviewing package "
#~ "contents for sensitive or unnecessary "
#~ "information§ Publishing sensitive information "
#~ "to the registry can harm your "
#~ "users, compromise your development "
#~ "infrastructure, be expensive to fix, and"
#~ " put you at risk of legal "
#~ "action. We strongly recommend removing "
#~ "sensitive information, such as private "
#~ "keys, passwords, personally identifiable "
#~ "information (PII), and credit card data"
#~ " before publishing your package to "
#~ "the registry."
#~ msgstr ""

#~ msgid ""
#~ "Publishing scoped public packages§ By "
#~ "default, scoped packages are published "
#~ "with private visibility. To publish a"
#~ " scoped package with public visibility, "
#~ "use npm publish --access public."
#~ msgstr ""

#~ msgid ""
#~ ".. note:: Before you can publish "
#~ "public unscoped npm packages, you must"
#~ " sign up for an npm user "
#~ "account. Overview§ Create your package "
#~ "Review package contents for sensitive or"
#~ " unnecessary information Publish your "
#~ "package Creating an unscoped public "
#~ "package§ .. note:: You can only "
#~ "publish unscoped packages to the npm "
#~ "public registry. You cannot publish "
#~ "unscoped packages to an npm Enterprise"
#~ " registry. On the command line, "
#~ "create a directory for your package:"
#~ msgstr ""

#~ msgid ""
#~ "In the package root directory, run "
#~ "the npm init command. Respond to "
#~ "the prompts to generate a package.json"
#~ " file. For help naming your package,"
#~ " see “Package name guidelines”. Create "
#~ "a README file that explains what "
#~ "your package code is and how to"
#~ " use it. In your preferred text "
#~ "editor, write the code for your "
#~ "package. Reviewing package contents for "
#~ "sensitive or unnecessary information§ "
#~ "Publishing sensitive information to the "
#~ "registry can harm your users, compromise"
#~ " your development infrastructure, be "
#~ "expensive to fix, and put you at"
#~ " risk of legal action. We strongly"
#~ " recommend removing sensitive information, "
#~ "such as private keys, passwords, "
#~ "personally identifiable information (PII), and"
#~ " credit card data before publishing "
#~ "your package to the registry."
#~ msgstr ""

#~ msgid ""
#~ "Publishing unscoped public packages§ On "
#~ "the command line, navigate to the "
#~ "root directory of your package."
#~ msgstr ""

#~ msgid ""
#~ "Overview§ Create a package.json file "
#~ "Create the file that will be "
#~ "loaded when your module is required "
#~ "by another application Test your module"
#~ " Create a package.json file§ To "
#~ "create a package.json file, on the "
#~ "command line, in the root directory "
#~ "of your Node.js module, run npm "
#~ "init: For scoped modules, run npm "
#~ "init --scope=@scope-name For unscoped "
#~ "modules, run npm init Provide responses"
#~ " for the required fields (name and"
#~ " version), as well as the main "
#~ "field: name: The name of your "
#~ "module. version: The initial module "
#~ "version. We recommend following semantic "
#~ "versioning guidelines and starting with "
#~ "1.0.0. main: The name of the file"
#~ " that will be loaded when your "
#~ "module is required by another "
#~ "application. The default name is "
#~ "index.js. For more information on "
#~ "package.json files, see “Creating a "
#~ "package.json file”."
#~ msgstr ""

#~ msgid ""
#~ "Create the file that will be "
#~ "loaded when your module is required "
#~ "by another application§ Once your "
#~ "package.json file is created, create the"
#~ " file that will be loaded when "
#~ "your module is required. The default "
#~ "name for this file is index.js."
#~ msgstr ""

#~ msgid ""
#~ "} Test your module§ Publish your "
#~ "package to npm: For private packages "
#~ "and unscoped packages, use npm publish."
#~ " For scoped public packages, use npm"
#~ " publish --access public On the "
#~ "command line, create a new test "
#~ "directory outside of your project "
#~ "directory. mkdir test-directory Switch "
#~ "to the new directory: cd /path/to"
#~ "/test-directory In the test directory, "
#~ "install your module: npm install "
#~ "<your-module-name> In the test "
#~ "directory, create a test.js file which"
#~ " requires your module and calls your"
#~ " module as a method. On the "
#~ "command line, run node test.js. The "
#~ "message sent to the console.log should"
#~ " appear. Resources§"
#~ msgstr ""

#~ msgid ""
#~ ".. note:: We strongly recommend "
#~ "deprecating packages or package versions "
#~ "instead of unpublishing them, because "
#~ "unpublishing removes a package from the"
#~ " registry entirely, meaning anyone who "
#~ "relied on it will no longer be "
#~ "able to use it, with no warning."
#~ " Deprecating an entire package or a"
#~ " single version of a package§ "
#~ "Deprecating an entire package§ Deprecating "
#~ "an entire package will remove it "
#~ "from search results on the npm "
#~ "website, and a deprecation message will"
#~ " also be displayed on the package "
#~ "page."
#~ msgstr ""

#~ msgid ""
#~ "Deprecating a single version of a "
#~ "package§ When you deprecate a version"
#~ " fo a package, a red message "
#~ "will be displayed on that version’s "
#~ "package page, similar to deprecating an"
#~ " entire package."
#~ msgstr ""

#~ msgid ""
#~ "Undeprecating a package or version§ To"
#~ " undeprecate a package, replace "
#~ "\"<message>\" with \"\" (an empty "
#~ "string) in one of the above "
#~ "commands."
#~ msgstr ""

#~ msgid ""
#~ "Transferring a deprecated package to "
#~ "npm§ If you are no longer "
#~ "maintaining a package, but other users"
#~ " depend on it, and you’d like "
#~ "to remove it from your user "
#~ "profile, you can transfer it to "
#~ "the @npm user account, which is "
#~ "owned by npm, Inc."
#~ msgstr ""

#~ msgid ""
#~ "npm install -g <package_name> If you "
#~ "get an EACCES permissions error, you "
#~ "may need to reinstall npm with a"
#~ " version manager or manually change "
#~ "npm’s default directory. For more "
#~ "information, see “Resolving EACCES permissions"
#~ " errors when installing packages globally”."
#~ msgstr ""

#~ msgid ""
#~ "Installing an unscoped package§ Unscoped "
#~ "packages are always public, which means"
#~ " they can be searched for, "
#~ "downloaded, and installed by anyone. To"
#~ " install a public package, on the "
#~ "command line, run"
#~ msgstr ""

#~ msgid ""
#~ ".. note:: If there is no "
#~ "package.json file in the local "
#~ "directory, the latest version of the "
#~ "package is installed. If there is "
#~ "a package.json file, npm installs the"
#~ " latest version that satisfies the "
#~ "semver rule declared in package.json. "
#~ "Installed a scoped public package§ "
#~ "Scoped public packages can be downloaded"
#~ " and installed by anyone, as long "
#~ "as the scope name is referenced "
#~ "during installation:"
#~ msgstr ""

#~ msgid ""
#~ "npm install @scope/package-name Installing "
#~ "a private package§ Private packages can"
#~ " only be downloaded and installed by"
#~ " those who have been granted read "
#~ "access to the package. Since private "
#~ "packages are always scoped, you must "
#~ "reference the scope name during "
#~ "installation:"
#~ msgstr ""

#~ msgid ""
#~ "npm install @scope/private-package-name "
#~ "Testing package installation§ To confirm "
#~ "that npm install worked correctly, in"
#~ " your module directory, check that a"
#~ " node_modules directory exists and that "
#~ "it contains a directory for the "
#~ "package(s) you installed:"
#~ msgstr ""

#~ msgid ""
#~ "ls node_modules Installed package version§ "
#~ "If there is a package.json file in"
#~ " the directory in which npm install"
#~ " is run, npm instalsx the latest "
#~ "version of the package that satisfies"
#~ " the semantic versioning rule declared "
#~ "in package.json."
#~ msgstr ""

#~ msgid ""
#~ "Installing a package with dist-tags§ "
#~ "Like npm publish, npm install "
#~ "<package_name> will use the latest tag"
#~ " by default."
#~ msgstr ""

#~ msgid "npm install example-package@beta Resources§"
#~ msgstr "npm install example-package@beta Resources§"

#~ msgid ""
#~ ".. note:: To create Org-scoped "
#~ "packages, you must first create an "
#~ "Org. For more information, see "
#~ "\"Creating an Org\". Public registry§ "
#~ "Scope   Access level    Can view and "
#~ "download   Can write (publish) Org     "
#~ "Private Members of a team in the"
#~ " Org with read access to the "
#~ "package    Members of a team in "
#~ "the Org with read and write access"
#~ " to the package Org     Public  "
#~ "Everyone        Members of a team in "
#~ "the Org with read and write access"
#~ " to the package User    Private The"
#~ " package owner and users who have "
#~ "been granted read access to the "
#~ "package    The package owner and users"
#~ " who have been granted read and "
#~ "write access to the package User    "
#~ "Public  Everyone        The package owner "
#~ "and users who have been granted "
#~ "read and write access to the "
#~ "package Unscoped        Public  Everyone        "
#~ "The package owner and users who "
#~ "have been granted read and write "
#~ "access to the package .. note:: "
#~ "Only user accounts can create and "
#~ "manage unscoped packages. Orgs can only"
#~ " manage scoped packages. npm Enterprise§"
#~ " The following table applies to "
#~ "customers who purchased npm Enterprise "
#~ "after July 26, 2018. Scope   Access "
#~ "level    Can view and download   Can "
#~ "write (publish) Org     Private Logged-"
#~ "in members of the Enterprise registry"
#~ " who belong to a team in the"
#~ " Org with read access to the "
#~ "package    Logged-in members of the "
#~ "Enterprise registry who belong to a "
#~ "team in the Org with read and "
#~ "write access to the package Org     "
#~ "Public  All logged-in members of "
#~ "the Enterprise registry        Logged-in "
#~ "members of the Enterprise registry who"
#~ " belong to a team in the Org"
#~ " with read and write access to "
#~ "the package User    Private The package"
#~ " owner and logged-in members of "
#~ "the Enterprise registry who have been"
#~ " granted read access to the package"
#~ "     The package owner and logged-in"
#~ " members of the Enterprise registry "
#~ "who have been granted read and "
#~ "write access to the package User    "
#~ "Public  All logged-in members of "
#~ "the Enterprise registry        The package "
#~ "owner and logged-in members of the"
#~ " Enterprise registry who have been "
#~ "granted read and write access to "
#~ "the package Unscoped        Public  All "
#~ "users of the Enterprise registry    None"
#~ " (see note below) .. note:: The "
#~ "unscoped namespace on npm Enterprise is"
#~ " reserved for unscoped packages in "
#~ "the public npm registry. To prevent "
#~ "npm Enterprise users from accidentally "
#~ "publishing proprietary code to the "
#~ "public npm registry, where it would "
#~ "be visible to anyone on the "
#~ "internet, we do not allow publishing "
#~ "unscoped packages to npm Enterprise. <"
#~ " About private packages"
#~ msgstr ""

#~ msgid ""
#~ ".. note:: Vulnerability reporting is "
#~ "currently only available for packages in"
#~ " the public npm registry. If you "
#~ "find a security vulnerability in an "
#~ "npm package (either yours or someone "
#~ "else’s), you can report it to the"
#~ " npm Security team to help keep "
#~ "the Javascript ecosystem safe."
#~ msgstr ""

#~ msgid ""
#~ "Disclosure timeline§ Vulnerability is reported"
#~ " npm Security triages vulnerability report"
#~ " npm Security notifies package maintainers"
#~ " npm Security publishes security advisory"
#~ " when package maintainers release a "
#~ "fix If maintainers are unresponsive "
#~ "after 45 days, npm Security makes "
#~ "the advisory public Reporting a "
#~ "vulnerability§ .. note:: Vulnerability reports"
#~ " are sent to the npm Security "
#~ "team, not the package maintainer. Gather"
#~ " information about the vulnerability. On"
#~ " the package page, click Report a "
#~ "vulnerability. On the vulnerability report "
#~ "page, provide information about yourself "
#~ "and the vulnerability: Name: Your name."
#~ " Email address: An email address the"
#~ " npm Security team can use to "
#~ "contact you. Package name and version:"
#~ " The name of the package that "
#~ "contains the vulnerability. Package version:"
#~ " The version of the package that "
#~ "contains the vulnerability. Include all "
#~ "affected versions. Description of "
#~ "vulnerability: A brief description of "
#~ "the vulnerability and its effects. "
#~ "Include references, commits, and/or code "
#~ "examples that would help our researchers"
#~ " reproduce and investigate the "
#~ "vulnerability. Click Send Report."
#~ msgstr ""

#~ msgid ""
#~ ".. note:: Currently, publishing a "
#~ "package with 2FA enabled on CI is"
#~ " not possible. For more secure CI "
#~ "publishing, enable 2FA on the npm "
#~ "account used for CI, and select "
#~ "\"Authorization\" only, and create a "
#~ "CIDR-restricted token for CI by "
#~ "following the steps in \"Creating and"
#~ " viewing authentication tokens\". Enabling "
#~ "two-factor authentication for package "
#~ "publishing§ Log in to npm with "
#~ "your user account. npm login dialog "
#~ "with username and password fields left"
#~ " blank Navigate to the package on "
#~ "which you want to require a second"
#~ " factor to publish or modify "
#~ "settings. Click Admin. admin tab on "
#~ "package page Under “Package Access”, "
#~ "select “Require Two Factor Authentication "
#~ "to publish or modify settings” require"
#~ " two factor authentication to publish "
#~ "or modify settings checkbox selected "
#~ "Click Update Package Settings. update "
#~ "package settings button Disabling two-"
#~ "factor authentication for package publishing§"
#~ " Log in to npm with your user"
#~ " account. npm login dialog with "
#~ "username and password fields left blank"
#~ " Navigate to the package on which "
#~ "you want to remove the requirement "
#~ "for a second factor to publish or"
#~ " modify settings. Click Admin. admin "
#~ "tab on package page Under “Package "
#~ "Access”, deselect “Require Two Factor "
#~ "Authentication to publish or modify "
#~ "settings” require two factor authentication"
#~ " to publish or modify settings "
#~ "checkbox deselected Click Update Package "
#~ "Settings. update package settings button"
#~ msgstr ""

#~ msgid ""
#~ "Reinstall npm with a node version "
#~ "manager (recommended), or Manually change "
#~ "npm’s default directory Reinstall npm "
#~ "with a node version manager§ This "
#~ "is the best way to avoid "
#~ "permissions issues. To reinstall npm "
#~ "with a node version manager, follow "
#~ "the steps in “Downloading and installing"
#~ " Node.js and npm”. You do not "
#~ "need to remove your current version "
#~ "of npm or Node.js before installing "
#~ "a node version manager."
#~ msgstr ""

#~ msgid ""
#~ "Manually change npm’s default directory§ "
#~ ".. note:: This section does not "
#~ "apply to Microsoft Windows. To minimize"
#~ " the chance of permissions errors, "
#~ "you can configure npm to use a "
#~ "different directory. In this example, "
#~ "you will create and use hidden "
#~ "directory in your home directory."
#~ msgstr ""

#~ msgid ""
#~ "Searching for a package§ In the "
#~ "search bar, type a search term and"
#~ " press Enter. As you type, possible"
#~ " choices will appear. search text "
#~ "field containing search query qr code"
#~ " dropdown containing search results for "
#~ "query qr code To list packages "
#~ "ranked according to package search rank"
#~ " criteria, in the left sidebar, under"
#~ " “Sort packages”, click the criterion. "
#~ "For example, to sort packages by "
#~ "popularity, click “Popularity”. In the "
#~ "package search results list, click the"
#~ " name of the package. Package search"
#~ " rank criteria§ Often, there are "
#~ "dozens or even hundreds of packages "
#~ "with similar names and/or similar "
#~ "purposes. To help you decide the "
#~ "best ones to explore, each package "
#~ "has been ranked according to four "
#~ "criteria using the npms analyzer:"
#~ msgstr ""

#~ msgid ""
#~ "Popularity§ Popularity indicates how many "
#~ "times the package has been downloaded."
#~ " This is a strong indicator of "
#~ "packages that others have found to "
#~ "be useful."
#~ msgstr ""

#~ msgid ""
#~ "Quality§ Quality includes considerations such"
#~ " as the presence of a README "
#~ "file, stability, tests, up-to-date "
#~ "dependencies, custom website, and code "
#~ "complexity."
#~ msgstr ""

#~ msgid ""
#~ "Maintenance§ Maintenance ranks packages "
#~ "according to the attention they are "
#~ "given by developers. More frequently "
#~ "maintained packages are more likely to"
#~ " work well with the current or "
#~ "upcoming versions of the npm CLI, "
#~ "for example."
#~ msgstr ""

#~ msgid ""
#~ "Optimal§ Optimal combines the other "
#~ "three criteria (popularity, quality, "
#~ "maintenance) into one score in a "
#~ "meaningful way."
#~ msgstr ""

#~ msgid ""
#~ "\"dependencies\": Packages required by your"
#~ " application in production. \"devDependencies\":"
#~ " Packages that are only needed for"
#~ " local development and testing. Adding "
#~ "dependencies to a package.json file§ You"
#~ " can add dependencies to a "
#~ "package.json file from the command line"
#~ " or by manually editing the "
#~ "package.json file."
#~ msgstr ""

#~ msgid ""
#~ "Adding dependencies to a package.json "
#~ "file from the command line§ To add"
#~ " dependencies and devDependencies to a "
#~ "package.json file from the command line,"
#~ " you can install them in the "
#~ "root directory of your package using "
#~ "the --save-prod flag for dependencies"
#~ " (the default behavior of npm "
#~ "install) or the --save-dev flag "
#~ "for devDependencies."
#~ msgstr ""

#~ msgid ""
#~ "npm install <package-name> --save-dev"
#~ " Manually editing the package.json file§"
#~ " To add dependencies to a "
#~ "package.json file, in a text editor, "
#~ "add an attribute called \"dependencies\" "
#~ "that references the name and semantic"
#~ " version of each dependency:"
#~ msgstr ""

#~ msgid ""
#~ "} To add devDependencies to a "
#~ "package.json file, in a text editor, "
#~ "add an attribute called \"devDependencies\""
#~ " that references the name and "
#~ "semantic version of each devDependency:"
#~ msgstr ""

#~ msgid ""
#~ "Transferring a package from a user "
#~ "account to an Org on the website§"
#~ " To transfer a package you own "
#~ "or maintain to an Org, follow "
#~ "these steps:"
#~ msgstr ""

#~ msgid ""
#~ ".. note:: Once this has been done,"
#~ " the Org owner or team admin "
#~ "who is now a maintainer on the "
#~ "package will need to add the "
#~ "package to an Org team. Transferring "
#~ "a package from a user account to"
#~ " an Org on the command line§ To"
#~ " transfer a package to an Org "
#~ "using the CLI, on the command "
#~ "line, run the npm owner add and"
#~ " rm commands in order, replacing "
#~ "<their-username> with the npm username "
#~ "of the Org owner or team admin,"
#~ " and <your-username> with your npm"
#~ " username, and <package-name> with "
#~ "the package you want to transfer:"
#~ msgstr ""

#~ msgid ""
#~ ".. note:: If your package is "
#~ "scoped and private, the new package "
#~ "owner must also have a paid user"
#~ " account. It is possible to transfer"
#~ " ownership of user-scoped packages, "
#~ "however we don't recommend it because"
#~ " it can create some ownership "
#~ "confusion. Transferring a package from a"
#~ " user account to another user account"
#~ " on the website§ To transfer a "
#~ "package you own or maintain to "
#~ "another user, follow these steps:"
#~ msgstr ""

#~ msgid ""
#~ "Transferring a package from a user "
#~ "account to another user account on "
#~ "the command line§ To transfer a "
#~ "package to another npm user using "
#~ "the CLI, run the npm owner add "
#~ "and rm commands in order, replacing "
#~ "<their-username> with the other user’s"
#~ " npm username, <your-username> with "
#~ "your npm username, and <package-name>"
#~ " with the package you want to "
#~ "transfer:"
#~ msgstr ""

#~ msgid ""
#~ "Uninstalling local packages§ Removing a "
#~ "local package from your node_modules "
#~ "directory§ To remove a package from "
#~ "your node_modules directory, on the "
#~ "command line, use the uninstall command."
#~ " Include the scope if the package "
#~ "is scoped."
#~ msgstr ""

#~ msgid ""
#~ "Scoped package§ npm uninstall "
#~ "<@scope/package_name> Example§ npm uninstall "
#~ "lodash Removing a local package from "
#~ "the package.json dependencies§ To remove "
#~ "a package from the dependencies in "
#~ "package.json, use the --save flag. "
#~ "Include the scope if the package "
#~ "is scoped."
#~ msgstr ""

#~ msgid ""
#~ "Unscoped package§ npm uninstall --save "
#~ "<package_name> Scoped package§ npm uninstall"
#~ " --save <@scope/package_name> Example§ npm "
#~ "uninstall --save lodash .. note:: If "
#~ "you installed a package as a "
#~ "\"devDependency\" (i.e. with --save-dev), "
#~ "use --save-dev to uninstall it: "
#~ "npm uninstall --save-dev package_name "
#~ "Confirming local package uninstallation§ To"
#~ " confirm that npm uninstall worked "
#~ "correctly, check that the node_modules "
#~ "directory no longer contains a directory"
#~ " for the uninstalled package(s)."
#~ msgstr ""

#~ msgid ""
#~ "Unix system (such as OSX): ls "
#~ "node_modules Windows systems: dir node_modules"
#~ " Uninstalling global packages§ To uninstall"
#~ " an unscoped global package, on the"
#~ " command line, use the uninstall "
#~ "command with the -g flag. Include "
#~ "the scope if the package is "
#~ "scoped."
#~ msgstr ""

#~ msgid ""
#~ "Unscoped package§ npm uninstall -g "
#~ "<package_name> Scoped package§ npm uninstall"
#~ " -g <@scope/package_name> Example§ For "
#~ "example, to uninstall a package called"
#~ " jshint, run:"
#~ msgstr ""

#~ msgid "npm uninstall -g jshint Resources§ Uninstalling local packages§"
#~ msgstr "npm uninstall -g jshint Resources§ Uninstalling local packages§"

#~ msgid ""
#~ "Published something accidentally. Wanted to"
#~ " test npm. Published content you "
#~ "didn’t intend to be public. Wanted "
#~ "to rename a package. (The only way"
#~ " to rename a package is to "
#~ "re-publish it under a new name) "
#~ ".. note:: Since various systems rely "
#~ "on package-name@version being unique, "
#~ "you cannot reuse a published version "
#~ "by unpublishing and re-publishing it."
#~ " If you want to reuse a version"
#~ " number, we recommend publishing a "
#~ "minor version update instead. Unpublishing "
#~ "an entire package§ To unpublish an "
#~ "entire package, run the following "
#~ "command, replacing <package-name> with "
#~ "the name of your package:"
#~ msgstr ""

#~ msgid ""
#~ "Unpublishing a single version of a "
#~ "package§ To unpublish a single version"
#~ " of a package, run the following "
#~ "command, replacing <package-name> with "
#~ "the name of your package, and "
#~ "<version> with your version number:"
#~ msgstr ""

#~ msgid ""
#~ "Updating local packages§ We recommend "
#~ "regularly updating the local packages "
#~ "your project depends on to improve "
#~ "your code as improvements to its "
#~ "dependencies are made."
#~ msgstr ""

#~ msgid ""
#~ "Navigate to the root directory of "
#~ "your project and ensure it contains "
#~ "a package.json file: cd /path/to/project "
#~ "In your project root directory, run "
#~ "the update command: npm update To "
#~ "test the update, run the outdated "
#~ "command. There should not be any "
#~ "output. npm outdated Updating globally-"
#~ "installed packages§ .. note:: If you "
#~ "are using npm version 2.6.0 or "
#~ "less, run this script to update "
#~ "all outdated global packages. However, "
#~ "please consider upgrading to the latest"
#~ " version of npm: npm install "
#~ "npm@latest -g Determining which global "
#~ "packages need updating§ To see which "
#~ "global packages need to be updated, "
#~ "on the command line, run:"
#~ msgstr ""

#~ msgid ""
#~ "npm outdated -g --depth=0 Updating a "
#~ "single global package§ To update a "
#~ "single global package, on the command"
#~ " line, run:"
#~ msgstr ""

#~ msgid ""
#~ "npm update -g <package_name> Updating "
#~ "all globally-installed packages§ To "
#~ "update all global packages, on the "
#~ "command line, run:"
#~ msgstr ""

#~ msgid ""
#~ "Using unscoped packages in your "
#~ "projects§ Node.js module§ If you are "
#~ "creating a Node.js module, you can "
#~ "use a package in your module by"
#~ " passing it as an argument to "
#~ "the require function."
#~ msgstr ""

#~ msgid ""
#~ "Example: using lodash in a Node.js "
#~ "module§ For example, to use the "
#~ "lodash package in a Node.js module, "
#~ "in the root directory of the "
#~ "module, create a file named index.js "
#~ "with the following contents:"
#~ msgstr ""

#~ msgid ""
#~ "package.json file§ In package.json, list "
#~ "the package under dependencies. You can"
#~ " optionally include a semantic version."
#~ msgstr ""

#~ msgid ""
#~ "} Using scoped packages in your "
#~ "projects§ To use a scoped package, "
#~ "simply include the scope wherever you"
#~ " use the package name."
#~ msgstr ""

#~ msgid ""
#~ "Node.js module§ When requiring a scoped"
#~ " package in the index.js file of "
#~ "your Node.js module, you must reference"
#~ " the scope in addition to the "
#~ "package name:"
#~ msgstr ""

#~ msgid ""
#~ "var projectName = require(\"@scope/package-"
#~ "name\") package.json file§ In package.json:"
#~ msgstr ""

#~ msgid ""
#~ "} Resolving “Cannot find module” errors§"
#~ " If you have not properly installed"
#~ " a package, you will receive an "
#~ "error when you try to use it "
#~ "in your code. For example, if you"
#~ " reference the lodash package without "
#~ "installing it, you would see the "
#~ "following error:"
#~ msgstr ""

#~ msgid ""
#~ ".. note:: Since fully verifying "
#~ "signatures on Keybase requires rechecking "
#~ "proofs (which requires network activity) "
#~ "and is therefore expensive, we recommend"
#~ " only verifying signatures if it is"
#~ " absolutely necessary -- for example, "
#~ "when verifying a deploy artifact, or "
#~ "when initially storing a package in "
#~ "your cache. Prerequisites§ Install Keybase "
#~ "from https://keybase.io/download Create a "
#~ "Keybase account on https://keybase.io Follow"
#~ " “npmregistry” on Keybase. Download a "
#~ "local copy of the npm public "
#~ "registry’s public PGP key. Verifying npm"
#~ " signatures for the public registry§ "
#~ ".. note:: The following steps use "
#~ "version 1.4.3 of the light-cycle "
#~ "package as an example. On the "
#~ "command line, fetch the signature for"
#~ " the package version you want and "
#~ "save it in a file:"
#~ msgstr ""

#~ msgid ""
#~ "A package is a file or directory"
#~ " that is described by a package.json"
#~ " file. A package must contain a "
#~ "package.json file in order to be "
#~ "published to the npm registry. For "
#~ "more information on creating a "
#~ "package.json file, see “Creating a "
#~ "package.json file”."
#~ msgstr ""

#~ msgid ""
#~ "“About scopes” “About private packages” "
#~ "“Package scope, access level, and "
#~ "visibility”"
#~ msgstr "npm包范围，访问级别和可见性"

#~ msgid "A git url that, when cloned, results in (a)."
#~ msgstr ""

#~ msgid ""
#~ "git://github.com/user/project.git#commit-ish "
#~ "git+ssh://user@hostname:project.git#commit-ish "
#~ "git+http://user@hostname/project/blah.git#commit-ish "
#~ "git+https://user@hostname/project/blah.git#commit-ish The"
#~ " commit-ish can be any tag, "
#~ "sha, or branch that can be "
#~ "supplied as an argument to git "
#~ "checkout. The default commit-ish is "
#~ "master."
#~ msgstr ""

#~ msgid ""
#~ "A folder with a package.json file "
#~ "containing a \"main\" field. A folder"
#~ " with an index.js file in it. A"
#~ " JavaScript file. .. note:: Since "
#~ "modules are not required to have a"
#~ " package.json file, not all modules "
#~ "are packages. Only modules that have "
#~ "a package.json file are also packages."
#~ " In the context of a Node "
#~ "program, the module is also the "
#~ "thing that was loaded from a file."
#~ " For example, in the following "
#~ "program:"
#~ msgstr ""

#~ msgid ""
#~ "var req = require('request') we might"
#~ " say that “The variable req refers"
#~ " to the request module”."
#~ msgstr ""

#~ msgid ""
#~ ".. note:: You must be using npm"
#~ " version 2 or greater to use "
#~ "scopes. To upgrade to the latest "
#~ "version of npm, on the command "
#~ "line, run npm install npm@latest -g "
#~ "When you sign up for an npm "
#~ "user account or create an Org, you"
#~ " are granted a scope that matches "
#~ "your user or Org name. You can "
#~ "use this scope as a namespace for"
#~ " related packages."
#~ msgstr ""

#~ msgid ""
#~ "“npm” scope: @npm/package-name “npmcorp” "
#~ "scope: @npmcorp/package-name To create "
#~ "and publish public scoped packages, see"
#~ " “Creating and publishing scoped public "
#~ "packages”."
#~ msgstr ""
#~ "“npm” scope: @npm/package-name “npmcorp” "
#~ "scope: @npmcorp/package-name To create "
#~ "and publish public scoped packages, see"
#~ " “Creating and publishing scoped public "
#~ "packages”."

#~ msgid ""
#~ "Unscoped packages are always public. "
#~ "Private packages are always scoped. "
#~ "Scoped packages are private by default;"
#~ " you must pass a command-line "
#~ "flag when publishing to make them "
#~ "public. For more information on package"
#~ " scope and visibility, see “Package "
#~ "scope, access level, and visibility”."
#~ msgstr ""
#~ "Unscoped packages are always public. "
#~ "Private packages are always scoped. "
#~ "Scoped packages are private by default;"
#~ " you must pass a command-line "
#~ "flag when publishing to make them "
#~ "public. For more information on package"
#~ " scope and visibility, see “Package "
#~ "scope, access level, and visibility”."

#~ msgid ""
#~ "In a text editor, in your package"
#~ " root directory, create a file called"
#~ " README.md. In the README.md file, "
#~ "add useful information about your "
#~ "package. Save the README.md file. .. "
#~ "note:: The file extension .md indicates"
#~ " a Markdown file. For more "
#~ "information about Markdown, see the "
#~ "GitHub Guide \"Mastering Markdown\"."
#~ msgstr ""

#~ msgid "npm version patch npm publish"
#~ msgstr "npm版本补丁npm发布"

#~ msgid ""
#~ "To use private packages, you must "
#~ "be using npm version 2.7.0 or "
#~ "greater. To upgrade, on the command "
#~ "line, run npm install npm@latest -g "
#~ "have a paid user or Org account"
#~ " With npm private packages, you can"
#~ " use the npm registry to host "
#~ "code that is only visible to you"
#~ " and chosen collaborators, allowing you "
#~ "to manage and use private code "
#~ "alongside public code in your projects."
#~ msgstr ""

#~ msgid ""
#~ "User-scoped private packages can only"
#~ " be accessed by you and collaborators"
#~ " to whom you have granted read "
#~ "or read/write access. For more "
#~ "information, see “Adding collaborators to "
#~ "private packages owned by a user "
#~ "account”. Org-scoped private packages "
#~ "can only be accessed by teams that"
#~ " have been granted read or read/write"
#~ " access. For more information, see "
#~ "“Managing team access to Org packages”."
#~ msgstr ""

#~ msgid ""
#~ "“Creating and publishing private packages” "
#~ "“Using npm packages in your projects”"
#~ msgstr "创建和发布私有包"

#~ msgid ""
#~ "Unscoped public packages exist in the"
#~ " global public registry namespace and "
#~ "can be referenced in a package.json "
#~ "file with the package name alone: "
#~ "package-name. Scoped public packages belong"
#~ " to a user or Org and must "
#~ "be preceded by the user or Org "
#~ "name when included as a dependency "
#~ "in a package.json file: @username/package-"
#~ "name @org-name/package-name"
#~ msgstr ""

#~ msgid ""
#~ "“Creating and publishing scoped public "
#~ "packages” “Creating and publishing unscoped"
#~ " public packages” “Using npm packages "
#~ "in your projects”"
#~ msgstr ""
#~ "“Creating and publishing scoped public "
#~ "packages” “Creating and publishing unscoped"
#~ " public packages” “Using npm packages "
#~ "in your projects”"

#~ msgid ""
#~ "Code status     Stage   Rule    Example "
#~ "version First release   New product     "
#~ "Start with 1.0.0        1.0.0 Backward "
#~ "compatible bug fixes   Patch release   "
#~ "Increment the third digit       1.0.1 "
#~ "Backward compatible new features        Minor"
#~ " release   Increment the middle digit "
#~ "and reset last digit to zero 1.1.0"
#~ " Changes that break backward compatibility"
#~ "       Major release   Increment the first"
#~ " digit and reset middle and last "
#~ "digits to zero      2.0.0"
#~ msgstr ""

#~ msgid ""
#~ ".. note:: The user you want to "
#~ "add as a collaborator on your "
#~ "private package must have a paid "
#~ "user account. To sign up for a "
#~ "paid account, they can visit "
#~ "https://https://www.npmjs.com/settings/username/billing, "
#~ "replacing username with their npm "
#~ "username."
#~ msgstr ""
#~ ".. note:: The user you want to "
#~ "add as a collaborator on your "
#~ "private package must have a paid "
#~ "user account. To sign up for a "
#~ "paid account, they can visit "
#~ "https://https://www.npmjs.com/settings/username/billing, "
#~ "replacing username with their npm "
#~ "username."

#~ msgid ""
#~ "On the npm website, go to the "
#~ "package to which you want to add"
#~ " a collaborator: https://www.npmjs.com/package"
#~ "/<your-package-name> On the package "
#~ "page, under “Collaborators”, click +. "
#~ "Enter the npm username of the "
#~ "collaborator. Click Submit."
#~ msgstr ""
#~ "On the npm website, go to the "
#~ "package to which you want to add"
#~ " a collaborator: https://www.npmjs.com/package"
#~ "/<your-package-name> On the package "
#~ "page, under “Collaborators”, click +. "
#~ "Enter the npm username of the "
#~ "collaborator. Click Submit."

#~ msgid "npm owner add <user> <your-package-name>"
#~ msgstr "npm owner add <user> <your-package-name>"

#~ msgid ""
#~ "Distribution tags (dist-tags) are "
#~ "human-readable labels that you can "
#~ "use to organize and label different "
#~ "versions of packages you publish. "
#~ "dist-tags supplement semantic versioning. "
#~ "In addition to being more human-"
#~ "readable than semantic version numbering, "
#~ "tags allow publishers to distribute "
#~ "their packages more effectively."
#~ msgstr ""

#~ msgid ""
#~ ".. note:: Since dist-tags share a"
#~ " namespace with semantic versions, avoid"
#~ " dist-tags that conflict with "
#~ "existing version numbers. We recommend "
#~ "avoiding dist-tags that start with "
#~ "a number or the letter \"v\". "
#~ "Publishing a package with a dist-"
#~ "tag -------------------------------------------------------"
#~ msgstr ""

#~ msgid ""
#~ "On the command line, navigate to "
#~ "the root directory of your package. "
#~ "cd /path/to/package Run the following "
#~ "command, replacing <tag> with the tag"
#~ " you want to use:"
#~ msgstr ""
#~ "On the command line, navigate to "
#~ "the root directory of your package. "
#~ "cd /path/to/package Run the following "
#~ "command, replacing <tag> with the tag"
#~ " you want to use:"

#~ msgid "npm publish --tag <tag>"
#~ msgstr "npm publish --tag <tag>"

#~ msgid ""
#~ "npm publish --tag beta Adding a "
#~ "dist-tag to a specific version of "
#~ "your package "
#~ "-------------------------------------------------------"
#~ msgstr ""
#~ "npm publish --tag beta Adding a "
#~ "dist-tag to a specific version of "
#~ "your package "
#~ "-------------------------------------------------------"

#~ msgid "npm dist-tag add <package-name>@<version> [<tag>]"
#~ msgstr "npm dist-tag add <package-name>@<version> [<tag>]"

#~ msgid "npm dist-tag add example-package@1.4.0 stable"
#~ msgstr "npm dist-tag add example-package@1.4.0 stable"

#~ msgid ""
#~ "For more information about package "
#~ "visibility, see “Package scope, access "
#~ "level, and visibility”."
#~ msgstr ""
#~ "For more information about package "
#~ "visibility, see “Package scope, access "
#~ "level, and visibility”."

#~ msgid ""
#~ ".. note:: Making a package private "
#~ "requires a paid user account or "
#~ "Org. To sign up for a paid "
#~ "user or Org, go to "
#~ "https://www.npmjs.com/settings/account-name/billing, "
#~ "replacing account-name with the name "
#~ "of your npm user account or Org."
#~ " If you want to restrict access "
#~ "and visibility for a public package "
#~ "you own, you can make the package"
#~ " private. When you make a package "
#~ "private, it will be removed from "
#~ "the website within a few minutes "
#~ "of the change."
#~ msgstr ""

#~ msgid ""
#~ "On the npm website, go to the "
#~ "package page. On the package page, "
#~ "click Admin. Under “Package Access”, "
#~ "select “Is Package Private?” Click "
#~ "Update package settings. Command line "
#~ "-------------------------------------------------------"
#~ msgstr ""
#~ "On the npm website, go to the "
#~ "package page. On the package page, "
#~ "click Admin. Under “Package Access”, "
#~ "select “Is Package Private?” Click "
#~ "Update package settings. Command line "
#~ "-------------------------------------------------------"

#~ msgid ""
#~ "npm access restricted <package-name> For"
#~ " more information, see the npm access"
#~ " documentation."
#~ msgstr ""
#~ "npm access restricted <package-name> For"
#~ " more information, see the npm access"
#~ " documentation."

#~ msgid ""
#~ "On the npm website, go to the "
#~ "package page. On the package page, "
#~ "click Admin. Under “Package Access”, "
#~ "deselect “Is Package Private?” Click "
#~ "Update package settings. Command line "
#~ "-------------------------------------------------------"
#~ msgstr ""
#~ "On the npm website, go to the "
#~ "package page. On the package page, "
#~ "click Admin. Under “Package Access”, "
#~ "deselect “Is Package Private?” Click "
#~ "Update package settings. Command line "
#~ "-------------------------------------------------------"

#~ msgid ""
#~ "npm access public <package-name> For "
#~ "more information, see the npm access "
#~ "CLI documentation."
#~ msgstr ""
#~ "npm access public <package-name> For "
#~ "more information, see the npm access "
#~ "CLI documentation."

#~ msgid ""
#~ ".. note:: Before you can publish "
#~ "private user-scoped npm packages, you"
#~ " must sign up for a paid npm"
#~ " user account. Additionally, to publish "
#~ "private Org-scoped packages, you must"
#~ " create an npm user account, then "
#~ "create a paid npm Org."
#~ msgstr ""
#~ ".. note:: Before you can publish "
#~ "private user-scoped npm packages, you"
#~ " must sign up for a paid npm"
#~ " user account. Additionally, to publish "
#~ "private Org-scoped packages, you must"
#~ " create an npm user account, then "
#~ "create a paid npm Org."

#~ msgid ""
#~ "Create your package Review package "
#~ "contents for sensitive or unnecessary "
#~ "information Publish your package"
#~ msgstr ""
#~ "Create your package Review package "
#~ "contents for sensitive or unnecessary "
#~ "information Publish your package"

#~ msgid "npmrc <profile-name>"
#~ msgstr "npmrc <profile-name>"

#~ msgid "mkdir my-test-package"
#~ msgstr "mkdir my-test-package"

#~ msgid "cd my-test-package"
#~ msgstr "cd my-test-package"

#~ msgid "git init git remote add origin git://git-remote-url"
#~ msgstr "git init git remote add origin git://git-remote-url"

#~ msgid "npm init --scope=@my-org"
#~ msgstr "npm init --scope=@my-org"

#~ msgid "npm init --scope=@my-username"
#~ msgstr "npm init --scope=@my-username"

#~ msgid ""
#~ "Publishing sensitive information to the "
#~ "registry can harm your users, compromise"
#~ " your development infrastructure, be "
#~ "expensive to fix, and put you at"
#~ " risk of legal action. We strongly"
#~ " recommend removing sensitive information, "
#~ "such as private keys, passwords, "
#~ "[personally identifiable information][pii] (PII),"
#~ " and credit card data before "
#~ "publishing your package to the registry."
#~ " Even if your package is private, "
#~ "sensitive information can be exposed if"
#~ " the package is made public or "
#~ "downloaded to a computer that can "
#~ "be accessed by more users than "
#~ "intended."
#~ msgstr ""

#~ msgid ""
#~ "On the command line, navigate to "
#~ "the root directory of your package. "
#~ "cd /path/to/package To publish your "
#~ "private package to the npm registry, "
#~ "run: npm publish To see your "
#~ "private package page, visit "
#~ "https://npmjs.com/package/package-name, replacing "
#~ "package-name with the name of your"
#~ " package. Private packages will say "
#~ "private below the package name on "
#~ "the npm website. private package page"
#~ " showing private below package name"
#~ msgstr ""

#~ msgid ""
#~ ".. note:: Before you can publish "
#~ "user-scoped npm packages, you must "
#~ "sign up for an npm user account."
#~ " Additionally, to publish Org-scoped "
#~ "packages, you must create an npm "
#~ "user account, then create an npm "
#~ "Org."
#~ msgstr ""
#~ ".. note:: Before you can publish "
#~ "user-scoped npm packages, you must "
#~ "sign up for an npm user account."
#~ " Additionally, to publish Org-scoped "
#~ "packages, you must create an npm "
#~ "user account, then create an npm "
#~ "Org."

#~ msgid ""
#~ "Publishing sensitive information to the "
#~ "registry can harm your users, compromise"
#~ " your development infrastructure, be "
#~ "expensive to fix, and put you at"
#~ " risk of legal action. We strongly"
#~ " recommend removing sensitive information, "
#~ "such as private keys, passwords, "
#~ "personally identifiable information (PII), and"
#~ " credit card data before publishing "
#~ "your package to the registry."
#~ msgstr ""

#~ msgid "npm publish --access public"
#~ msgstr "npm publish --access public"

#~ msgid ""
#~ "< Creating and publishing unscoped "
#~ "public packages | Creating and "
#~ "publishing private packages >"
#~ msgstr ""
#~ "< Creating and publishing unscoped "
#~ "public packages | Creating and "
#~ "publishing private packages >"

#~ msgid ""
#~ ".. note:: You can only publish "
#~ "unscoped packages to the npm public "
#~ "registry. You cannot publish unscoped "
#~ "packages to an npm Enterprise registry."
#~ " As an npm user, you can create"
#~ " unscoped packages to use in your "
#~ "own projects and publish them to "
#~ "the npm public registry for others "
#~ "to use in theirs. Unscoped packages "
#~ "are always public and are referred "
#~ "to by the package name only:"
#~ msgstr ""

#~ msgid ""
#~ "For more information on package scope,"
#~ " access, and visibility, see “Package "
#~ "scope, access level, and visibility”."
#~ msgstr ""
#~ "For more information on package scope,"
#~ " access, and visibility, see “Package "
#~ "scope, access level, and visibility”."

#~ msgid ""
#~ "In the package root directory, run "
#~ "the npm init command. Respond to "
#~ "the prompts to generate a package.json"
#~ " file. For help naming your package,"
#~ " see “Package name guidelines”. Create "
#~ "a README file that explains what "
#~ "your package code is and how to"
#~ " use it. In your preferred text "
#~ "editor, write the code for your "
#~ "package."
#~ msgstr ""

#~ msgid ""
#~ "To see your public package page, "
#~ "visit https://npmjs.com/package/package-name, "
#~ "replacing package-name with the name "
#~ "of your package. Public packages will"
#~ " say public below the package name"
#~ " on the npm website. For more "
#~ "information on the publish command, see"
#~ " the CLI documentation."
#~ msgstr ""
#~ "To see your public package page, "
#~ "visit https://npmjs.com/package/package-name, "
#~ "replacing package-name with the name "
#~ "of your package. Public packages will"
#~ " say public below the package name"
#~ " on the npm website. For more "
#~ "information on the publish command, see"
#~ " the CLI documentation."

#~ msgid ""
#~ ".. note:: We strongly recommend "
#~ "deprecating packages or package versions "
#~ "instead of unpublishing them, because "
#~ "unpublishing removes a package from the"
#~ " registry entirely, meaning anyone who "
#~ "relied on it will no longer be "
#~ "able to use it, with no warning."
#~ msgstr ""
#~ ".. note:: We strongly recommend "
#~ "deprecating packages or package versions "
#~ "instead of unpublishing them, because "
#~ "unpublishing removes a package from the"
#~ " registry entirely, meaning anyone who "
#~ "relied on it will no longer be "
#~ "able to use it, with no warning."

#~ msgid ""
#~ "deprecation message saying package no "
#~ "longer supported use at your own "
#~ "risk"
#~ msgstr ""
#~ "deprecation message saying package no "
#~ "longer supported use at your own "
#~ "risk"

#~ msgid ""
#~ "npm deprecate <package-name> \"<message>\" "
#~ "If you have enabled two-factor "
#~ "authentication, add a one-time password"
#~ " to the command, --otp=123456 (where "
#~ "123456 is the code from your "
#~ "authenticator app)."
#~ msgstr ""
#~ "npm deprecate <package-name> \"<message>\" "
#~ "If you have enabled two-factor "
#~ "authentication, add a one-time password"
#~ " to the command, --otp=123456 (where "
#~ "123456 is the code from your "
#~ "authenticator app)."

#~ msgid ""
#~ "deprecation message saying version no "
#~ "longer supported upgrade to @latest"
#~ msgstr "弃用消息说不再支持升级到@latest的版本"

#~ msgid ""
#~ "npm deprecate <package-name>@<version> \"\""
#~ " If you have two-factor auth, "
#~ "add a one-time password to the "
#~ "command, --otp=123456 (where 123456 is "
#~ "the code from your authenticator)."
#~ msgstr ""
#~ "npm deprecate <package-name>@<version> \"\""
#~ " If you have two-factor auth, "
#~ "add a one-time password to the "
#~ "command, --otp=123456 (where 123456 is "
#~ "the code from your authenticator)."

#~ msgid ""
#~ "npm owner add npm <package-name> "
#~ "npm owner rm <user> <package-name> "
#~ "If you have two-factor auth, add"
#~ " a one-time password to the "
#~ "command, --otp=123456 (where 123456 is "
#~ "the code from your authenticator)."
#~ msgstr ""
#~ "npm owner add npm <package-name> "
#~ "npm owner rm <user> <package-name> "
#~ "If you have two-factor auth, add"
#~ " a one-time password to the "
#~ "command, --otp=123456 (where 123456 is "
#~ "the code from your authenticator)."

#~ msgid ""
#~ "is not already owned by someone "
#~ "else is not spelled in a similar"
#~ " way to another package name will "
#~ "not confuse others about authorship"
#~ msgstr ""
#~ "is not already owned by someone "
#~ "else is not spelled in a similar"
#~ " way to another package name will "
#~ "not confuse others about authorship"

#~ msgid ""
#~ "Scope|Access level|Can view and download|Can"
#~ " write (publish) Org|Private|Members of a"
#~ " team in the Org with read "
#~ "access to the package|Members of a "
#~ "team in the Org with read and "
#~ "write access to the package "
#~ "Org|Public|Everyone|Members of a team in "
#~ "the Org with read and write access"
#~ " to the package User|Private|The package"
#~ " owner and users who have been "
#~ "granted read access to the package|The"
#~ " package owner and users who have "
#~ "been granted read and write access "
#~ "to the package User|Public|Everyone|The "
#~ "package owner and users who have "
#~ "been granted read and write access "
#~ "to the package Unscoped|Public|Everyone|The "
#~ "package owner and users who have "
#~ "been granted read and write access "
#~ "to the package .. note:: Only user"
#~ " accounts can create and manage "
#~ "unscoped packages. Orgs can only manage"
#~ " scoped packages."
#~ msgstr ""

#~ msgid ""
#~ "The following table applies to customers"
#~ " who purchased npm Enterprise after "
#~ "July 26, 2018. Scope|Access level|Can "
#~ "view and download|Can write (publish) "
#~ "Org|Private|Logged-in members of the "
#~ "Enterprise registry who belong to a "
#~ "team in the Org with read access"
#~ " to the package|Logged-in members of"
#~ " the Enterprise registry who belong "
#~ "to a team in the Org with "
#~ "read and write access to the "
#~ "package Org|Public|All logged-in members "
#~ "of the Enterprise registry|Logged-in "
#~ "members of the Enterprise registry who"
#~ " belong to a team in the Org"
#~ " with read and write access to "
#~ "the package User|Private|The package owner "
#~ "and logged-in members of the "
#~ "Enterprise registry who have been "
#~ "granted read access to the package|The"
#~ " package owner and logged-in members"
#~ " of the Enterprise registry who have"
#~ " been granted read and write access"
#~ " to the package User|Public|All logged-"
#~ "in members of the Enterprise "
#~ "registry|The package owner and logged-in"
#~ " members of the Enterprise registry "
#~ "who have been granted read and "
#~ "write access to the package "
#~ "Unscoped|Public|All users of the Enterprise"
#~ " registry|None (see note below) .. "
#~ "note:: The unscoped namespace on npm "
#~ "Enterprise is reserved for unscoped "
#~ "packages in the public npm registry. "
#~ "To prevent npm Enterprise users from "
#~ "accidentally publishing proprietary code to"
#~ " the public npm registry, where it"
#~ " would be visible to anyone on "
#~ "the internet, we do not allow "
#~ "publishing unscoped packages to npm "
#~ "Enterprise. < About private packages"
#~ msgstr ""

#~ msgid ""
#~ ".. note:: Vulnerability reports are sent"
#~ " to the npm Security team, not "
#~ "the package maintainer. Gather information "
#~ "about the vulnerability. On the package"
#~ " page, click Report a vulnerability. "
#~ "On the vulnerability report page, "
#~ "provide information about yourself and "
#~ "the vulnerability: Name: Your name. "
#~ "Email address: An email address the "
#~ "npm Security team can use to "
#~ "contact you. Package name and version:"
#~ " The name of the package that "
#~ "contains the vulnerability. Package version:"
#~ " The version of the package that "
#~ "contains the vulnerability. Include all "
#~ "affected versions. Description of "
#~ "vulnerability: A brief description of "
#~ "the vulnerability and its effects. "
#~ "Include references, commits, and/or code "
#~ "examples that would help our researchers"
#~ " reproduce and investigate the "
#~ "vulnerability. Click Send Report."
#~ msgstr ""

#~ msgid ""
#~ ".. note:: Currently, publishing a "
#~ "package with 2FA enabled on CI is"
#~ " not possible. For more secure CI "
#~ "publishing, enable 2FA on the npm "
#~ "account used for CI, and select "
#~ "\"Authorization\" only, and create a "
#~ "CIDR-restricted token for CI by "
#~ "following the steps in \"Creating and"
#~ " viewing authentication tokens\"."
#~ msgstr ""

#~ msgid ""
#~ "In the search bar, type a search"
#~ " term and press Enter. As you "
#~ "type, possible choices will appear. "
#~ "search text field containing search "
#~ "query qr code dropdown containing search"
#~ " results for query qr code To "
#~ "list packages ranked according to "
#~ "package search rank criteria, in the "
#~ "left sidebar, under “Sort packages”, "
#~ "click the criterion. For example, to "
#~ "sort packages by popularity, click "
#~ "“Popularity”. In the package search "
#~ "results list, click the name of "
#~ "the package."
#~ msgstr ""

#~ msgid ""
#~ ".. note:: If your package is "
#~ "private, the new package owner must "
#~ "also have a paid user account It"
#~ " is possible to transfer ownership of"
#~ " scoped packages, however we don't "
#~ "recommend it because it can create "
#~ "some ownership confusion. Transferring "
#~ "packages between a user and an Org"
#~ " works slightly differently than "
#~ "transferring packages between users. There "
#~ "will be an extra step of adding"
#~ " the package to an Org team. "
#~ "The new maintainer or owner will "
#~ "also need to be the Org owner "
#~ "or team admin."
#~ msgstr ""

#~ msgid ""
#~ "Navigate to the package page for "
#~ "the package you want to transfer, "
#~ "replacing <your-package-name> with the"
#~ " name of your package: "
#~ "https://www.npmjs.com/package/<your-package-name>. "
#~ "On the package Admin tab, under "
#~ "“Maintainers”, enter the npm username of"
#~ " the new maintainer. package page "
#~ "admin tab showing text field to "
#~ "invite maintainers"
#~ msgstr ""

#~ msgid ""
#~ "npm owner add npm <their-username> "
#~ "<package-name> npm owner rm <your-"
#~ "username> <package-name> If you have "
#~ "two-factor authentication enabled for "
#~ "writes, add a one-time password to"
#~ " the command, --otp=123456 (where 123456"
#~ " is the code from your authenticator"
#~ " application)."
#~ msgstr ""
#~ "npm owner add npm <their-username> "
#~ "<package-name> npm owner rm <your-"
#~ "username> <package-name> If you have "
#~ "two-factor authentication enabled for "
#~ "writes, add a one-time password to"
#~ " the command, --otp=123456 (where 123456"
#~ " is the code from your authenticator"
#~ " application)."

#~ msgid ""
#~ "npm owner add npm <their-username> "
#~ "<package-name> --otp=123456 npm owner rm"
#~ " <your-username> <package-name> "
#~ "--otp=123456"
#~ msgstr ""
#~ "npm owner add npm <their-username> "
#~ "<package-name> --otp=123456 npm owner rm"
#~ " <your-username> <package-name> "
#~ "--otp=123456"

#~ msgid ""
#~ ".. note:: If you are using npm "
#~ "Enterprise, you can have an admin "
#~ "contact npm Enterprise Support at "
#~ "enterprise@npmjs.com to increase the "
#~ "unpublishing window for your instance "
#~ "beyond 72 hours. Unpublishing a package"
#~ " using the CLI or by contacting "
#~ "npm support is the only way to "
#~ "remove a package or version from "
#~ "the registry. For example, removing all"
#~ " the collaborators or teams from the"
#~ " package will not unpublish it."
#~ msgstr ""

#~ msgid ""
#~ ".. note:: If you have linked a "
#~ "git repository to a package, updating"
#~ " the package version number will also"
#~ " add a tag with the updated "
#~ "release number to the linked git "
#~ "repository. To change the version number"
#~ " in package.json, on the command "
#~ "line, in the package root directory, "
#~ "run the following command, replacing "
#~ "<update_type> with one of the semantic"
#~ " versioning release types (patch, major,"
#~ " or minor): npm version <update_type> "
#~ "Run npm publish. Go to your "
#~ "package page (https://npmjs.com/package/<package>) "
#~ "to check that the package version "
#~ "has been updated. For more information"
#~ " on npm version, see the CLI "
#~ "documentation."
#~ msgstr ""

#~ msgid ""
#~ ".. note:: Since fully verifying "
#~ "signatures on Keybase requires rechecking "
#~ "proofs (which requires network activity) "
#~ "and is therefore expensive, we recommend"
#~ " only verifying signatures if it is"
#~ " absolutely necessary -- for example, "
#~ "when verifying a deploy artifact, or "
#~ "when initially storing a package in "
#~ "your cache."
#~ msgstr ""

#~ msgid "npm install -g <package_name>"
#~ msgstr "Unscoped package§ npm uninstall <package_name>"

#~ msgid "npm install @scope/package-name"
#~ msgstr "npm install example-package-name --no-audit"

#~ msgid ""
#~ "npm install @scope/private-package-name "
#~ "Testing package installation "
#~ "-------------------------------------------------------"
#~ msgstr ""
#~ "npm install @scope/private-package-name "
#~ "Testing package installation "
#~ "-------------------------------------------------------"

#~ msgid "ls node_modules"
#~ msgstr "包和模块"

#~ msgid ""
#~ "npm install example-package@beta Resources "
#~ "-------------------------------------------------------"
#~ msgstr ""
#~ "npm install example-package@beta Resources "
#~ "-------------------------------------------------------"

#~ msgid ""
#~ "npm uninstall <@scope/package_name> Example "
#~ "-------------------------------------------------------"
#~ msgstr ""
#~ "npm uninstall <@scope/package_name> Example "
#~ "-------------------------------------------------------"

#~ msgid ""
#~ "npm uninstall lodash Removing a local"
#~ " package from the package.json dependencies"
#~ " -------------------------------------------------------"
#~ msgstr ""
#~ "npm uninstall lodash Removing a local"
#~ " package from the package.json dependencies"
#~ " -------------------------------------------------------"

#~ msgid ""
#~ "npm uninstall --save <package_name> Scoped "
#~ "package -------------------------------------------------------"
#~ msgstr ""
#~ "npm uninstall --save <package_name> Scoped "
#~ "package -------------------------------------------------------"

#~ msgid ""
#~ "Navigate to the root directory of "
#~ "your project and ensure it contains "
#~ "a package.json file: cd /path/to/project "
#~ "In your project root directory, run "
#~ "the update command: npm update To "
#~ "test the update, run the outdated "
#~ "command. There should not be any "
#~ "output. npm outdated"
#~ msgstr ""
#~ "Navigate to the root directory of "
#~ "your project and ensure it contains "
#~ "a package.json file: cd /path/to/project "
#~ "In your project root directory, run "
#~ "the update command: npm update To "
#~ "test the update, run the outdated "
#~ "command. There should not be any "
#~ "output. npm outdated"

#~ msgid "npm outdated -g --depth=0"
#~ msgstr "npm outdated -g --depth=0"

#~ msgid "npm update -g <package_name>"
#~ msgstr "npm update -g Resources§"

#~ msgid "npm-update npm-outdated"
#~ msgstr "CLI commands§ npm-update npm-outdated"

#~ msgid "command line audit report vulnerability table"
#~ msgstr "命令行审计报告漏洞表"

#~ msgid "Severity Description Package Patched in Dependency of Path More info"
#~ msgstr "严重性描述包在路径依赖性中修补更多信息"

#~ msgid ""
#~ "Severity        Recommended action Critical"
#~ "        Address immediately High    Address "
#~ "as quickly as possible Moderate        "
#~ "Address as time allows Low     Address"
#~ " at your discretion"
#~ msgstr ""
#~ "Severity        Recommended action Critical"
#~ "        Address immediately High    Address "
#~ "as quickly as possible Moderate        "
#~ "Address as time allows Low     Address"
#~ " at your discretion"

#~ msgid "audit to your continuous integration process."
#~ msgstr "审核您的持续集成过程。"

#~ msgid "npm install example-package-name --no-audit"
#~ msgstr "npm install example-package-name --no-audit"

#~ msgid "npm set audit false"
#~ msgstr "npm set audit false"

#~ msgid "npm uninstall <package_name>"
#~ msgstr "npm uninstall <package_name>"

#~ msgid "npm uninstall lodash"
#~ msgstr "npm install -g jshint"

#~ msgid "npm uninstall --save <package_name>"
#~ msgstr "Unscoped package§ npm uninstall <package_name>"

#~ msgid "npm uninstall --save <@scope/package_name>"
#~ msgstr "Unscoped package§ npm uninstall <package_name>"

#~ msgid "npm uninstall --save lodash"
#~ msgstr "npm install -g jshint"

#~ msgid "npm uninstall -g <package_name>"
#~ msgstr "Unscoped package§ npm uninstall <package_name>"

#~ msgid "npm uninstall -g <@scope/package_name>"
#~ msgstr "Unscoped package§ npm uninstall <package_name>"

#~ msgid "npm uninstall -g jshint"
#~ msgstr "npm install -g jshint"

#~ msgid ""
#~ "package page with deprecation message "
#~ "saying package no longer supported "
#~ "contact support@npmjs.com for more info"
#~ msgstr ""
#~ "package page with deprecation message "
#~ "saying package no longer supported "
#~ "contact support@npmjs.com for more info"

#~ msgid "// index.js var lodash = require('lodash');"
#~ msgstr "// index.js var lodash = require('lodash');"

#~ msgid "\"dependencies\": {"
#~ msgstr "\"dependencies\": {"

#~ msgid "\"@package_name\": \"^1.0.0\""
#~ msgstr "\"@package_name\": \"^1.0.0\""

#~ msgid "var projectName = require(\"@scope/package-name\")"
#~ msgstr "var projectName = require(\"@scope/package-name\")"

#~ msgid "\"@scope/package_name\": \"^1.0.0\""
#~ msgstr "\"@scope/package_name\": \"^1.0.0\""

#~ msgid "module.js:340"
#~ msgstr "module.js:340"

#~ msgid "throw err;"
#~ msgstr "throw err;"

#~ msgid "^"
#~ msgstr "^"

