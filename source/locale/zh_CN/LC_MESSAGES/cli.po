# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the npm-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: npm-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-05 19:36+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/cli/access.rst:2
#, fuzzy
msgid "npm access"
msgstr "npm-access"

#: ../../source/cli/access.rst:5 ../../source/cli/adduser.rst:5
#: ../../source/cli/audit.rst:5 ../../source/cli/bin.rst:5
#: ../../source/cli/bugs.rst:5 ../../source/cli/build.rst:5
#: ../../source/cli/cache.rst:7 ../../source/cli/ci.rst:5
#: ../../source/cli/completion.rst:5 ../../source/cli/config.rst:5
#: ../../source/cli/dedupe.rst:5 ../../source/cli/deprecate.rst:7
#: ../../source/cli/dist-tag.rst:7 ../../source/cli/docs.rst:7
#: ../../source/cli/doctor.rst:7 ../../source/cli/edit.rst:7
#: ../../source/cli/explore.rst:5 ../../source/cli/help-search.rst:5
#: ../../source/cli/help.rst:5 ../../source/cli/hook.rst:5
#: ../../source/cli/init.rst:7 ../../source/cli/install-ci-test.rst:5
#: ../../source/cli/install-test.rst:5 ../../source/cli/install.rst:5
#: ../../source/cli/link.rst:5 ../../source/cli/logout.rst:5
#: ../../source/cli/ls.rst:6 ../../source/cli/npm.rst:5
#: ../../source/cli/org.rst:5 ../../source/cli/outdated.rst:5
#: ../../source/cli/owner.rst:6 ../../source/cli/pack.rst:6
#: ../../source/cli/ping.rst:5 ../../source/cli/prefix.rst:5
#: ../../source/cli/profile.rst:5 ../../source/cli/prune.rst:5
#: ../../source/cli/publish.rst:5 ../../source/cli/rebuild.rst:5
#: ../../source/cli/repo.rst:6 ../../source/cli/restart.rst:6
#: ../../source/cli/root.rst:5 ../../source/cli/run-script.rst:5
#: ../../source/cli/search.rst:5 ../../source/cli/shrinkwrap.rst:6
#: ../../source/cli/star.rst:5 ../../source/cli/stars.rst:5
#: ../../source/cli/start.rst:5 ../../source/cli/stop.rst:5
#: ../../source/cli/team.rst:5 ../../source/cli/test.rst:5
#: ../../source/cli/token.rst:6 ../../source/cli/uninstall.rst:5
#: ../../source/cli/unpublish.rst:6 ../../source/cli/update.rst:6
#: ../../source/cli/version.rst:5 ../../source/cli/view.rst:5
#: ../../source/cli/whoami.rst:6
msgid "SYNOPSIS"
msgstr "概要"

#: ../../source/cli/access.rst:11
#, fuzzy
msgid "Set access level on published packages"
msgstr "access在已发布的包上设置访问级别"

#: ../../source/cli/access.rst:29 ../../source/cli/adduser.rst:30
#: ../../source/cli/audit.rst:76 ../../source/cli/bin.rst:18
#: ../../source/cli/bugs.rst:22 ../../source/cli/build.rst:20
#: ../../source/cli/bundle.rst:11 ../../source/cli/cache.rst:28
#: ../../source/cli/ci.rst:48 ../../source/cli/completion.rst:17
#: ../../source/cli/config.rst:27 ../../source/cli/dedupe.rst:27
#: ../../source/cli/deprecate.rst:18 ../../source/cli/dist-tag.rst:24
#: ../../source/cli/docs.rst:21 ../../source/cli/doctor.rst:18
#: ../../source/cli/edit.rst:18 ../../source/cli/explore.rst:18
#: ../../source/cli/help-search.rst:18 ../../source/cli/help.rst:18
#: ../../source/cli/hook.rst:46 ../../source/cli/init.rst:39
#: ../../source/cli/install-ci-test.rst:22 ../../source/cli/install-test.rst:31
#: ../../source/cli/install.rst:38 ../../source/cli/link.rst:23
#: ../../source/cli/logout.rst:18 ../../source/cli/ls.rst:27
#: ../../source/cli/npm.rst:21 ../../source/cli/org.rst:42
#: ../../source/cli/outdated.rst:18 ../../source/cli/owner.rst:25
#: ../../source/cli/pack.rst:19 ../../source/cli/ping.rst:18
#: ../../source/cli/prefix.rst:18 ../../source/cli/profile.rst:22
#: ../../source/cli/prune.rst:18 ../../source/cli/publish.rst:21
#: ../../source/cli/rebuild.rst:22 ../../source/cli/repo.rst:19
#: ../../source/cli/restart.rst:19 ../../source/cli/root.rst:18
#: ../../source/cli/run-script.rst:22 ../../source/cli/search.rst:30
#: ../../source/cli/shrinkwrap.rst:19 ../../source/cli/star.rst:19
#: ../../source/cli/stars.rst:18 ../../source/cli/start.rst:18
#: ../../source/cli/stop.rst:18 ../../source/cli/team.rst:26
#: ../../source/cli/test.rst:26 ../../source/cli/token.rst:21
#: ../../source/cli/uninstall.rst:38 ../../source/cli/unpublish.rst:28
#: ../../source/cli/update.rst:27 ../../source/cli/version.rst:22
#: ../../source/cli/view.rst:30 ../../source/cli/whoami.rst:19
msgid "DESCRIPTION"
msgstr "描述"

#: ../../source/cli/access.rst:31
msgid "Used to set access controls on private packages."
msgstr "用于在私有包上设置访问控制。"

#: ../../source/cli/access.rst:33
msgid ""
"For all of the subcommands, npm access will perform actions on the "
"packages in the current working directory if no package name is passed to"
" the subcommand."
msgstr ""

#: ../../source/cli/access.rst:35
msgid ""
"public / restricted: Set a package to be either publicly accessible or "
"restricted."
msgstr ""

#: ../../source/cli/access.rst:36
msgid ""
"grant / revoke: Add or remove the ability of users and teams to have "
"read-only or read-write access to a package."
msgstr ""

#: ../../source/cli/access.rst:37
msgid ""
"2fa-required / 2fa-not-required: Configure whether a package requires "
"that anyone publishing it have two-factor authentication enabled on their"
" account."
msgstr ""

#: ../../source/cli/access.rst:38
msgid ""
"ls-packages: Show all of the packages a user or a team is able to access,"
" along with the access level, except for read-only public packages (it "
"won’t print the whole registry listing)"
msgstr ""

#: ../../source/cli/access.rst:39
msgid ""
"ls-collaborators: Show all of the access privileges for a package. Will "
"only show permissions for packages to which you have at least read "
"access. If <user> is passed in, the list is filtered only to teams that "
"user happens to belong to."
msgstr ""

#: ../../source/cli/access.rst:40
msgid "edit: Set the access privileges for a package at once using $EDITOR."
msgstr "编辑:使用$ EDITOR一次设置包的访问权限。"

#: ../../source/cli/access.rst:43 ../../source/cli/cache.rst:37
#: ../../source/cli/profile.rst:58 ../../source/cli/team.rst:41
msgid "DETAILS"
msgstr "细节"

#: ../../source/cli/access.rst:45
msgid ""
"npm access always operates directly on the current registry, configurable"
" from the command line using --registry=<registry url>."
msgstr ""

#: ../../source/cli/access.rst:47
msgid "Unscoped packages are always public."
msgstr "未开发的包总是公开的。"

#: ../../source/cli/access.rst:49
msgid ""
"Scoped packages default to restricted, but you can either publish them as"
" public using npm publish --access=public, or set their access as public "
"using npm access public after the initial publish."
msgstr ""

#: ../../source/cli/access.rst:51
msgid "You must have privileges to set the access of a package:"
msgstr "您必须具有设置程序包访问权限:"

#: ../../source/cli/access.rst:53
msgid "You are an owner of an unscoped or scoped package."
msgstr "您是无范围或范围包的所有者。"

#: ../../source/cli/access.rst:54
msgid "You are a member of the team that owns a scope."
msgstr "您是拥有范围的团队的成员。"

#: ../../source/cli/access.rst:55
msgid ""
"You have been given read-write privileges for a package, either as a "
"member of a team or directly as an owner."
msgstr ""

#: ../../source/cli/access.rst:57
msgid ""
"If you have two-factor authentication enabled then you’ll have to pass in"
" an otp with --otp when making access changes."
msgstr ""

#: ../../source/cli/access.rst:59
msgid ""
"If your account is not paid, then attempts to publish scoped packages "
"will fail with an HTTP 402 status code (logically enough), unless you use"
" --access=public."
msgstr ""

#: ../../source/cli/access.rst:61
msgid ""
"Management of teams and team memberships is done with the npm team "
"command."
msgstr ""

#: ../../source/cli/access.rst:64 ../../source/cli/adduser.rst:86
#: ../../source/cli/audit.rst:111 ../../source/cli/bin.rst:23
#: ../../source/cli/bugs.rst:46 ../../source/cli/build.rst:31
#: ../../source/cli/bundle.rst:18 ../../source/cli/cache.rst:65
#: ../../source/cli/ci.rst:61 ../../source/cli/completion.rst:33
#: ../../source/cli/config.rst:87 ../../source/cli/dedupe.rst:59
#: ../../source/cli/deprecate.rst:29 ../../source/cli/dist-tag.rst:72
#: ../../source/cli/docs.rst:39 ../../source/cli/doctor.rst:57
#: ../../source/cli/edit.rst:35 ../../source/cli/explore.rst:38
#: ../../source/cli/help-search.rst:37 ../../source/cli/help.rst:35
#: ../../source/cli/hook.rst:63 ../../source/cli/init.rst:55
#: ../../source/cli/install-ci-test.rst:27 ../../source/cli/install-test.rst:36
#: ../../source/cli/install.rst:460 ../../source/cli/link.rst:64
#: ../../source/cli/logout.rst:46 ../../source/cli/ls.rst:119
#: ../../source/cli/npm.rst:98 ../../source/cli/org.rst:47
#: ../../source/cli/outdated.rst:80 ../../source/cli/owner.rst:37
#: ../../source/cli/pack.rst:30 ../../source/cli/ping.rst:28
#: ../../source/cli/prefix.rst:25 ../../source/cli/profile.rst:63
#: ../../source/cli/prune.rst:35 ../../source/cli/publish.rst:46
#: ../../source/cli/rebuild.rst:27 ../../source/cli/repo.rst:32
#: ../../source/cli/restart.rst:43 ../../source/cli/root.rst:23
#: ../../source/cli/run-script.rst:63 ../../source/cli/scripts.rst:174
#: ../../source/cli/search.rst:86 ../../source/cli/shrinkwrap.rst:28
#: ../../source/cli/star.rst:28 ../../source/cli/stars.rst:25
#: ../../source/cli/start.rst:25 ../../source/cli/stop.rst:23
#: ../../source/cli/team.rst:52 ../../source/cli/test.rst:31
#: ../../source/cli/uninstall.rst:70 ../../source/cli/unpublish.rst:41
#: ../../source/cli/update.rst:108 ../../source/cli/version.rst:88
#: ../../source/cli/view.rst:79 ../../source/cli/whoami.rst:24
msgid "SEE ALSO"
msgstr "参阅"

#: ../../source/cli/access.rst:66
#, fuzzy
msgid ":ref:`libnpmaccess`"
msgstr "npm-config"

#: ../../source/cli/access.rst:67
#, fuzzy
msgid ":option:`npm team`"
msgstr "npm-config"

#: ../../source/cli/access.rst:68 ../../source/cli/bugs.rst:50
#: ../../source/cli/cache.rst:72 ../../source/cli/deprecate.rst:31
#: ../../source/cli/dist-tag.rst:74 ../../source/cli/docs.rst:42
#: ../../source/cli/owner.rst:39 ../../source/cli/pack.rst:33
#: ../../source/cli/unpublish.rst:44
#, fuzzy
msgid ":option:`npm publish`"
msgstr "npm-publish"

#: ../../source/cli/access.rst:69 ../../source/cli/adduser.rst:89
#: ../../source/cli/adduser.rst:90 ../../source/cli/bin.rst:28
#: ../../source/cli/bin.rst:29 ../../source/cli/bugs.rst:52
#: ../../source/cli/bugs.rst:53 ../../source/cli/cache.rst:69
#: ../../source/cli/config.rst:90 ../../source/cli/dist-tag.rst:78
#: ../../source/cli/dist-tag.rst:79 ../../source/cli/docs.rst:44
#: ../../source/cli/docs.rst:45 ../../source/cli/edit.rst:40
#: ../../source/cli/edit.rst:41 ../../source/cli/help.rst:40
#: ../../source/cli/help.rst:41 ../../source/cli/install.rst:469
#: ../../source/cli/install.rst:470 ../../source/cli/link.rst:70
#: ../../source/cli/link.rst:71 ../../source/cli/logout.rst:50
#: ../../source/cli/logout.rst:51 ../../source/cli/ls.rst:121
#: ../../source/cli/ls.rst:122 ../../source/cli/npm.rst:104
#: ../../source/cli/npm.rst:105 ../../source/cli/pack.rst:34
#: ../../source/cli/pack.rst:35 ../../source/cli/ping.rst:30
#: ../../source/cli/ping.rst:31 ../../source/cli/prefix.rst:30
#: ../../source/cli/prefix.rst:31 ../../source/cli/profile.rst:65
#: ../../source/cli/repo.rst:35 ../../source/cli/root.rst:28
#: ../../source/cli/root.rst:29 ../../source/cli/run-script.rst:70
#: ../../source/cli/search.rst:89 ../../source/cli/search.rst:90
#: ../../source/cli/uninstall.rst:75 ../../source/cli/uninstall.rst:76
#: ../../source/cli/view.rst:83 ../../source/cli/view.rst:84
#: ../../source/cli/whoami.rst:26 ../../source/cli/whoami.rst:27
#, fuzzy
msgid ":option:`npm config`"
msgstr "npm-config"

#: ../../source/cli/access.rst:70 ../../source/cli/adduser.rst:88
#: ../../source/cli/bugs.rst:51 ../../source/cli/deprecate.rst:32
#: ../../source/cli/dist-tag.rst:77 ../../source/cli/docs.rst:43
#: ../../source/cli/install.rst:472 ../../source/cli/logout.rst:49
#: ../../source/cli/outdated.rst:84 ../../source/cli/owner.rst:40
#: ../../source/cli/publish.rst:48 ../../source/cli/search.rst:88
#: ../../source/cli/team.rst:55 ../../source/cli/unpublish.rst:45
#: ../../source/cli/update.rst:113 ../../source/cli/view.rst:82
#, fuzzy
msgid ":ref:`registry`"
msgstr "注册"

#: ../../source/cli/adduser.rst:2
#, fuzzy
msgid "npm adduser"
msgstr "npm-adduser"

#: ../../source/cli/adduser.rst:11
#, fuzzy
msgid "Add a registry user account"
msgstr "adduser添加注册表用户帐户"

#: ../../source/cli/adduser.rst:19 ../../source/cli/adduser.rst:23
msgid "adduser alias"
msgstr ""

#: ../../source/cli/adduser.rst:27
msgid "adduser param"
msgstr ""

#: ../../source/cli/adduser.rst:32
msgid ""
"Create or verify a user named <username> in the specified registry, and "
"save the credentials to the .npmrc file. If no registry is specified, the"
" default registry will be used (see npm-config)."
msgstr ""

#: ../../source/cli/adduser.rst:34
msgid "The username, password, and email are read in from prompts."
msgstr "用户名，密码和电子邮件将从提示中读入。"

#: ../../source/cli/adduser.rst:36
msgid "To reset your password, go to https://www.npmjs.com/forgot"
msgstr "要重置密码，请转到https://www.npmjs.com/forgot"

#: ../../source/cli/adduser.rst:38
msgid "To change your email address, go to https://www.npmjs.com/email-edit"
msgstr "要更改您的电子邮件地址，请转到 https://www.npmjs.com/email-edit"

#: ../../source/cli/adduser.rst:40
msgid ""
"You may use this command multiple times with the same user account to "
"authorize on a new machine. When authenticating on a new machine, the "
"username, password and email address must all match with your existing "
"record."
msgstr ""

#: ../../source/cli/adduser.rst:42
msgid "npm login is an alias to adduser and behaves exactly the same way."
msgstr "npm login是adduser的别名，行为方式完全相同。"

#: ../../source/cli/adduser.rst:45 ../../source/cli/bugs.rst:27
#: ../../source/cli/cache.rst:55 ../../source/cli/docs.rst:26
#: ../../source/cli/edit.rst:27 ../../source/cli/explore.rst:30
#: ../../source/cli/help-search.rst:27 ../../source/cli/help.rst:25
#: ../../source/cli/logout.rst:27 ../../source/cli/ls.rst:49
#: ../../source/cli/repo.rst:24 ../../source/cli/search.rst:43
#: ../../source/cli/version.rst:63
msgid "CONFIGURATION"
msgstr "配置"

#: ../../source/cli/adduser.rst:48 ../../source/cli/bugs.rst:38
#: ../../source/cli/logout.rst:30
msgid "registry"
msgstr "注册"

#: ../../source/cli/adduser.rst:50 ../../source/cli/bugs.rst:40
#: ../../source/cli/logout.rst:33
msgid "Default: https://registry.npmjs.org/"
msgstr "默认: https://registry.npmjs.org/"

#: ../../source/cli/adduser.rst:52
msgid ""
"The base URL of the npm package registry. If scope is also specified, "
"this registry will only be used for packages with that scope. scope "
"defaults to the scope of the project directory you’re currently in, if "
"any. See npm-scope."
msgstr ""

#: ../../source/cli/adduser.rst:55 ../../source/cli/logout.rst:37
msgid "scope"
msgstr "范围"

#: ../../source/cli/adduser.rst:57
msgid "Default: none"
msgstr "默认: none"

#: ../../source/cli/adduser.rst:59
msgid ""
"If specified, the user and login credentials given will be associated "
"with the specified scope. See npm-scope. You can use both at the same "
"time, e.g."
msgstr ""

#: ../../source/cli/adduser.rst:61
msgid ""
"npm adduser --registry=http://myregistry.example.com --scope=@myco This "
"will set a registry for the given scope and login or create a user for "
"that registry at the same time."
msgstr ""

#: ../../source/cli/adduser.rst:65
msgid "always-auth"
msgstr "always-auth"

#: ../../source/cli/adduser.rst:67
msgid "Default: false"
msgstr "默认: false"

#: ../../source/cli/adduser.rst:69
msgid ""
"If specified, save configuration indicating that all requests to the "
"given registry should include authorization information. Useful for "
"private registries. Can be used with --registry and / or --scope, e.g."
msgstr "如果已指定，请保存配置，指示对给定注册表的所有请求都应包含授权信息。对私人注册表有用。可以与--registry和/或--scope一起使用，例如"

#: ../../source/cli/adduser.rst:75
msgid ""
"This will ensure that all requests to that registry (including for "
"tarballs) include an authorization header. This setting may be necessary "
"for use with private registries where metadata and package tarballs are "
"stored on hosts with different hostnames. See always-auth in npm-config "
"for more details on always-auth. Registry-specific configuration of "
"always-auth takes precedence over any global configuration."
msgstr ""
"这将确保对该注册表(包括tarball)的所有请求都包含授权标头。与私有注册表一起使用时，此设置可能是必需的，其中元数据和包tar包存储在具有不同主机名的主机上"
"。有关always-auth的更多详细信息，请参阅 npm-config 中的 always-auth 。特定于注册表的always-"
"auth配置优先于任何全局配置。"

#: ../../source/cli/adduser.rst:78
msgid "auth-type"
msgstr "auth-type"

#: ../../source/cli/adduser.rst:80
msgid "Default: 'legacy'"
msgstr "Default: 'legacy'"

#: ../../source/cli/adduser.rst:81
msgid "Type: 'legacy', 'sso', 'saml', 'oauth'"
msgstr "Type: 'legacy', 'sso', 'saml', 'oauth'"

#: ../../source/cli/adduser.rst:83
msgid ""
"What authentication strategy to use with adduser/login. Some npm "
"registries (for example, npmE) might support alternative auth strategies "
"besides classic username/password entry in legacy npm."
msgstr ""
"adduser/login 使用什么身份验证策略。除了传统的 npm "
"中的经典用户名/密码输入之外，一些npm注册表(例如，npmE)可能支持替代身份验证策略。"

#: ../../source/cli/adduser.rst:91 ../../source/cli/bin.rst:30
#: ../../source/cli/config.rst:92 ../../source/cli/dist-tag.rst:80
#: ../../source/cli/docs.rst:46 ../../source/cli/edit.rst:42
#: ../../source/cli/help.rst:42 ../../source/cli/install.rst:471
#: ../../source/cli/link.rst:72 ../../source/cli/logout.rst:52
#: ../../source/cli/ls.rst:123 ../../source/cli/npm.rst:106
#: ../../source/cli/pack.rst:36 ../../source/cli/ping.rst:32
#: ../../source/cli/prefix.rst:32 ../../source/cli/root.rst:30
#: ../../source/cli/search.rst:91 ../../source/cli/uninstall.rst:77
#: ../../source/cli/view.rst:85 ../../source/cli/whoami.rst:28
msgid ":ref:`npmrc`"
msgstr ""

#: ../../source/cli/adduser.rst:92 ../../source/cli/publish.rst:51
#: ../../source/cli/unpublish.rst:47
#, fuzzy
msgid ":option:`npm owner`"
msgstr "npm-publish"

#: ../../source/cli/adduser.rst:93 ../../source/cli/logout.rst:53
#: ../../source/cli/star.rst:31 ../../source/cli/stars.rst:29
#, fuzzy
msgid ":option:`npm whoami`"
msgstr "npm-config"

#: ../../source/cli/audit.rst:2
#, fuzzy
msgid "npm audit"
msgstr "npm-audit"

#: ../../source/cli/audit.rst:11
msgid "Run a security audit"
msgstr "运行安全审核"

#: ../../source/cli/audit.rst:19 ../../source/cli/init.rst:20
#: ../../source/cli/scripts.rst:125 ../../source/cli/update.rst:42
msgid "EXAMPLES"
msgstr "例子"

#: ../../source/cli/audit.rst:21
msgid ""
"Scan your project for vulnerabilities and automatically install any "
"compatible updates to vulnerable dependencies:"
msgstr "扫描项目中的漏洞并自动将任何兼容的更新安装到易受攻击的依赖项:"

#: ../../source/cli/audit.rst:27
msgid ""
"Run audit fix without modifying node_modules, but still updating the "
"pkglock:"
msgstr "在不修改node_modules的情况下运行审计修复，但仍然更新pkglock:"

#: ../../source/cli/audit.rst:33
msgid "Skip updating devDependencies:"
msgstr "跳过更新 devDependencies:"

#: ../../source/cli/audit.rst:39
msgid ""
"Have audit fix install semver-major updates to toplevel dependencies, not"
" just semver-compatible ones:"
msgstr "让审计修复程序安装 semver-major 更新以扩展依赖关系，而不仅仅是与 semver 兼容的更新:"

#: ../../source/cli/audit.rst:45
msgid ""
"Do a dry run to get an idea of what audit fix will do, and also output "
"install information in JSON format:"
msgstr "进行干运行以了解审计修复将执行的操作，并以JSON格式输出安装信息:"

#: ../../source/cli/audit.rst:51
msgid ""
"Scan your project for vulnerabilities and just show the details, without "
"fixing anything:"
msgstr "扫描项目中的漏洞，只显示详细信息，无需修复任何内容:"

#: ../../source/cli/audit.rst:57
msgid "Get the detailed audit report in JSON format:"
msgstr "以JSON格式获取详细的审计报告:"

#: ../../source/cli/audit.rst:63
msgid ""
"Get the detailed audit report in plain text result, separated by tab "
"characters, allowing for future reuse in scripting or command line post "
"processing, like for example, selecting some of the columns printed:"
msgstr "以明文结果获取详细的审计报告，以制表符分隔，以便将来在脚本或命令行后处理中重复使用，例如，选择打印的一些列:"

#: ../../source/cli/audit.rst:69
msgid ""
"To parse columns, you can use for example awk, and just print some of "
"them:"
msgstr "要解析列，您可以使用例如awk，并只打印其中一些:"

#: ../../source/cli/audit.rst:78
msgid ""
"The audit command submits a description of the dependencies configured in"
" your project to your default registry and asks for a report of known "
"vulnerabilities. The report returned includes instructions on how to act "
"on this information. The command will exit with a 0 exit code if no "
"vulnerabilities were found."
msgstr ""
"审计命令将项目中配置的依赖项的描述提交到默认注册表，并要求提供已知漏洞的报告。返回的报告包括有关如何处理此信息的说明。如果未找到漏洞，该命令将以 "
"0 退出代码退出。"

#: ../../source/cli/audit.rst:80
msgid ""
"You can also have npm automatically fix the vulnerabilities by running "
"``npm audit fix``. Note that some vulnerabilities cannot be fixed "
"automatically and will require manual intervention or review. Also note "
"that since ``npm audit fix`` runs a full-fledged :option:`npm install` "
"under the hood, all configs that apply to the installer will also apply "
"to :option:`npm install` – so things like ``npm audit fix --package-lock-"
"only`` will work as expected."
msgstr ""
"你也可以让npm通过运行 ``npm audit fix`` 自动修复漏洞。请注意，某些漏洞无法自动修复，需要手动干预或审核。还要注意，因为 "
"``npm audit fix`` 运行了一个完整的 :option:`npm install` ，所有适用于安装程序的配置也适用于 "
":option:`npm install`  - 所以像 ``npm audit fix --package-lock-only`` "
"将按预期工作。"

#: ../../source/cli/audit.rst:83
msgid "CONTENT SUBMITTED"
msgstr "提交的内容"

#: ../../source/cli/audit.rst:85
#, fuzzy
msgid "npm_version"
msgstr "npm-version"

#: ../../source/cli/audit.rst:86
#, fuzzy
msgid "node_version"
msgstr "npm-version"

#: ../../source/cli/audit.rst:87
msgid "platform"
msgstr ""

#: ../../source/cli/audit.rst:88
msgid "node_env"
msgstr ""

#: ../../source/cli/audit.rst:89
msgid "A scrubbed version of your package-lock.json or npm-shrinkwrap.json"
msgstr "package-lock.json 或 npm-shrinkwrap.json 的擦洗版本"

#: ../../source/cli/audit.rst:92
msgid "SCRUBBING"
msgstr "擦洗"

#: ../../source/cli/audit.rst:94
msgid ""
"In order to ensure that potentially sensitive information is not included"
" in the audit data bundle, some dependencies may have their names (and "
"sometimes versions) replaced with opaque non-reversible identifiers. It "
"is done for the following dependency types:"
msgstr "为了确保审计数据包中不包含潜在的敏感信息，某些依赖项可能会将其名称(有时是版本)替换为不透明的不可逆标识符。它适用于以下依赖类型:"

#: ../../source/cli/audit.rst:96
msgid ""
"Any module referencing a scope that is configured for a non-default "
"registry has its name scrubbed. (That is, a scope you did a ``npm login "
"--scope=@ourscope`` for.)"
msgstr ""
"引用为非默认注册配置的作用域的任何模块都会清除其名称。 (也就是说，你做了一个范围 ``npm login --scope=@ourscope``"
" 。)"

#: ../../source/cli/audit.rst:97
msgid "All git dependencies have their names and specifiers scrubbed."
msgstr "所有 git 依赖项都清除了它们的名称和说明符。"

#: ../../source/cli/audit.rst:98
msgid "All remote tarball dependencies have their names and specifiers scrubbed."
msgstr "所有远程 tarball 依赖项都清除了它们的名称和说明符。"

#: ../../source/cli/audit.rst:99
msgid ""
"All local directory and tarball dependencies have their names and "
"specifiers scrubbed."
msgstr "所有本地目录和tarball依赖项都会清除其名称和说明符。"

#: ../../source/cli/audit.rst:101
msgid ""
"The non-reversible identifiers are a sha256 of a session-specific UUID "
"and the value being replaced, ensuring a consistent value within the "
"payload that is different between runs."
msgstr "不可逆标识符是特定于会话的UUID的sha256，并且被替换的值，确保有效负载内的一致值在运行之间不同。"

#: ../../source/cli/audit.rst:104
msgid "EXIT CODE"
msgstr "退出代码"

#: ../../source/cli/audit.rst:106
msgid ""
"The :option:`npm audit` command will exit with a 0 exit code if no "
"vulnerabilities were found."
msgstr "如果没有发现漏洞，则 :option:`npm audit` 命令将以0退出代码退出。"

#: ../../source/cli/audit.rst:108
msgid ""
"If vulnerabilities were found the exit code will depend on the ``audit-"
"level`` configuration setting."
msgstr "如果发现漏洞，退出代码将取决于 ``audit-level`` 配置设置。"

#: ../../source/cli/audit.rst:113 ../../source/cli/build.rst:33
#: ../../source/cli/bundle.rst:20 ../../source/cli/cache.rst:71
#: ../../source/cli/ci.rst:63 ../../source/cli/dedupe.rst:63
#: ../../source/cli/dist-tag.rst:75 ../../source/cli/edit.rst:39
#: ../../source/cli/explore.rst:44 ../../source/cli/link.rst:68
#: ../../source/cli/ls.rst:125 ../../source/cli/npm.rst:103
#: ../../source/cli/rebuild.rst:30 ../../source/cli/scripts.rst:179
#: ../../source/cli/shrinkwrap.rst:30 ../../source/cli/uninstall.rst:73
#: ../../source/cli/update.rst:110
#, fuzzy
msgid ":option:`npm install`"
msgstr "ping Ping npm registry"

#: ../../source/cli/audit.rst:114
#, fuzzy
msgid ":option:`package-locks`"
msgstr "npm-publish"

#: ../../source/cli/audit.rst:115 ../../source/cli/version.rst:95
#, fuzzy
msgid ":option:`config`"
msgstr "npm-config"

#: ../../source/cli/bin.rst:2
#, fuzzy
msgid "npm bin"
msgstr "npm-bin"

#: ../../source/cli/bin.rst:11
msgid "Display npm bin folder"
msgstr "显示npm bin文件夹"

#: ../../source/cli/bin.rst:20
msgid "Print the folder where npm will install executables."
msgstr "打印npm将安装可执行文件的文件夹。"

#: ../../source/cli/bin.rst:25 ../../source/cli/root.rst:25
#, fuzzy
msgid ":option:`npm prefix`"
msgstr "ping Ping npm registry"

#: ../../source/cli/bin.rst:26 ../../source/cli/prefix.rst:27
#, fuzzy
msgid ":option:`npm root`"
msgstr "ping Ping npm registry"

#: ../../source/cli/bin.rst:27 ../../source/cli/cache.rst:67
#: ../../source/cli/config.rst:89 ../../source/cli/edit.rst:37
#: ../../source/cli/explore.rst:40 ../../source/cli/help.rst:39
#: ../../source/cli/install.rst:462 ../../source/cli/link.rst:69
#: ../../source/cli/ls.rst:124 ../../source/cli/outdated.rst:85
#: ../../source/cli/prefix.rst:29 ../../source/cli/prune.rst:38
#: ../../source/cli/root.rst:27 ../../source/cli/uninstall.rst:74
#: ../../source/cli/update.rst:114
#, fuzzy
msgid ":ref:`folders`"
msgstr "npm-publish"

#: ../../source/cli/bugs.rst:2
#, fuzzy
msgid "npm bugs"
msgstr "npm-bugs"

#: ../../source/cli/bugs.rst:11
msgid "Bugs for a package in a web browser maybe"
msgstr "可能是Web浏览器中包的错误"

#: ../../source/cli/bugs.rst:19
msgid "bugs aliases"
msgstr ""

#: ../../source/cli/bugs.rst:24
#, fuzzy
msgid ""
"This command tries to guess at the likely location of a package’s bug "
"tracker URL, and then tries to open it using the ``--browser`` config "
"param. If no package name is provided, it will search for a "
":doc:`../files/package.json` in the current folder and use the **name** "
"property."
msgstr ""
"此命令尝试猜测包的错误跟踪器URL的可能位置，然后尝试使用 --browser config param "
"打开它。如果未提供程序包名称，它将在当前文件夹中搜索package.json并使用name属性。"

#: ../../source/cli/bugs.rst:30
msgid "browser"
msgstr "browser"

#: ../../source/cli/bugs.rst:32
msgid ""
"Default: OS X: **\"open\"**, Windows: **\"start\"**, Others: **\"xdg-"
"open\"**"
msgstr ""

#: ../../source/cli/bugs.rst:33
msgid "Type: String"
msgstr ""

#: ../../source/cli/bugs.rst:35
#, fuzzy
msgid ""
"The browser that is called by the :option:`npm bugs` command to open "
"websites."
msgstr ""
"Default: OS X: \"open\", Windows: \"start\", Others: \"xdg-open\" Type: "
"String npm bugs 命令用于打开网站的浏览器。"

#: ../../source/cli/bugs.rst:41
msgid "Type: url"
msgstr ""

#: ../../source/cli/bugs.rst:43
msgid "The base URL of the npm package registry."
msgstr ""

#: ../../source/cli/bugs.rst:48 ../../source/cli/repo.rst:34
#: ../../source/cli/view.rst:86
msgid ":option:`npm docs`"
msgstr ""

#: ../../source/cli/bugs.rst:49 ../../source/cli/docs.rst:41
#: ../../source/cli/search.rst:92 ../../source/cli/star.rst:30
#: ../../source/cli/stars.rst:28
msgid ":option:`npm view`"
msgstr ""

#: ../../source/cli/bugs.rst:54 ../../source/cli/cache.rst:70
#, fuzzy
msgid ":doc:`../files/npmrc`"
msgstr ":doc:`../files/npmrc` npm 配置文件"

#: ../../source/cli/bugs.rst:55 ../../source/cli/scripts.rst:177
#, fuzzy
msgid ":doc:`../files/package.json`"
msgstr ":doc:`../misc/scope` Scoped 包"

#: ../../source/cli/build.rst:2
#, fuzzy
msgid "npm build"
msgstr "npm-build"

#: ../../source/cli/build.rst:11
msgid "Build a package"
msgstr "构建一个包"

#: ../../source/cli/build.rst:17
#, fuzzy
msgid "<package-folder>: A folder containing a package.json file in its root."
msgstr "<folder>: A folder containing a package.json file"

#: ../../source/cli/build.rst:22
msgid "This is the plumbing command called by npm link and npm install."
msgstr "这是由npm link和npm install调用的管道命令。"

#: ../../source/cli/build.rst:24
msgid ""
"It should generally be called during installation, but if you need to run"
" it directly, run:"
msgstr ""

#: ../../source/cli/build.rst:34 ../../source/cli/install.rst:465
#: ../../source/cli/ls.rst:126
#, fuzzy
msgid ":option:`npm link`"
msgstr "npm-config"

#: ../../source/cli/build.rst:35 ../../source/cli/restart.rst:46
#: ../../source/cli/start.rst:28 ../../source/cli/stop.rst:26
#: ../../source/cli/version.rst:92
#, fuzzy
msgid ":option:`npm scripts`"
msgstr "ping Ping npm registry"

#: ../../source/cli/build.rst:36 ../../source/cli/config.rst:91
#: ../../source/cli/docs.rst:47 ../../source/cli/help.rst:43
#: ../../source/cli/init.rst:58 ../../source/cli/install.rst:476
#: ../../source/cli/link.rst:67 ../../source/cli/npm.rst:102
#: ../../source/cli/shrinkwrap.rst:33 ../../source/cli/version.rst:93
#, fuzzy
msgid ":ref:`package.json`"
msgstr "uninstall 删除包"

#: ../../source/cli/bundle.rst:2
#, fuzzy
msgid "npm bundle"
msgstr "npm-bundle"

#: ../../source/cli/bundle.rst:8
msgid "REMOVED"
msgstr "移除"

#: ../../source/cli/bundle.rst:13
msgid ""
"The npm bundle command has been removed in 1.0, for the simple reason "
"that it is no longer necessary, as the default behavior is now to install"
" packages into the local space."
msgstr ""

#: ../../source/cli/bundle.rst:15
msgid "Just use npm install now to do what npm bundle used to do."
msgstr "现在只需使用npm install来执行npm bundle以前的操作。"

#: ../../source/cli/cache.rst:2
#, fuzzy
msgid "npm cache"
msgstr "npm-cache"

#: ../../source/cli/cache.rst:4
#, fuzzy
msgid "Manipulates packages cache"
msgstr "cache Manipulates packages cache"

#: ../../source/cli/cache.rst:21
#, fuzzy
msgid "aliases: npm cache clear, npm cache rm"
msgstr "npm cache clean [<path>] aliases: npm cache clear, npm cache rm"

#: ../../source/cli/cache.rst:30
msgid "Used to add, list, or clean the npm cache folder."
msgstr "用于添加，列出或清除npm缓存文件夹。"

#: ../../source/cli/cache.rst:32
msgid ""
"**add:** Add the specified package to the local cache. This command is "
"primarily intended to be used internally by npm, but it can provide a way"
" to add data to the local installation cache explicitly."
msgstr ""

#: ../../source/cli/cache.rst:33
#, fuzzy
msgid "**clean:** Delete all data out of the cache folder."
msgstr "clean: Delete all data out of the cache folder."

#: ../../source/cli/cache.rst:34
msgid ""
"**verify:** Verify the contents of the cache folder, garbage collecting "
"any unneeded data, and verifying the integrity of the cache index and all"
" cached data."
msgstr ""

#: ../../source/cli/cache.rst:39
msgid ""
"npm stores cache data in an opaque directory within the configured cache,"
" named _cacache. This directory is a cacache-based content-addressable "
"cache that stores all http request data as well as other package-related "
"data. This directory is primarily accessed through pacote, the library "
"responsible for all package fetching as of npm@5."
msgstr ""

#: ../../source/cli/cache.rst:41
msgid ""
"All data that passes through the cache is fully verified for integrity on"
" both insertion and extraction. Cache corruption will either trigger an "
"error, or signal to pacote that the data must be refetched, which it will"
" do automatically. For this reason, it should never be necessary to clear"
" the cache for any reason other than reclaiming disk space, thus why "
"clean now requires --force to run."
msgstr ""

#: ../../source/cli/cache.rst:43
msgid ""
"There is currently no method exposed through npm to inspect or directly "
"manage the contents of this cache. In order to access it, cacache must be"
" used directly."
msgstr ""

#: ../../source/cli/cache.rst:45
msgid ""
"npm will not remove data by itself: the cache will grow as new packages "
"are installed."
msgstr ""

#: ../../source/cli/cache.rst:48
msgid "A NOTE ABOUT THE CACHE’S DESIGN"
msgstr ""

#: ../../source/cli/cache.rst:50
msgid ""
"The npm cache is strictly a cache: it should not be relied upon as a "
"persistent and reliable data store for package data. npm makes no "
"guarantee that a previously-cached piece of data will be available later,"
" and will automatically delete corrupted contents. The primary guarantee "
"that the cache makes is that, if it does return data, that data will be "
"exactly the data that was inserted."
msgstr ""

#: ../../source/cli/cache.rst:52
msgid ""
"To run an offline verification of existing cache contents, use npm cache "
"verify."
msgstr ""

#: ../../source/cli/cache.rst:58
msgid "cache"
msgstr "cache"

#: ../../source/cli/cache.rst:60
#, fuzzy
msgid "Default: **~/.npm** on Posix, or **%AppData%/npm-cache** on Windows."
msgstr "Default: ~/.npm on Posix, or %AppData%/npm-cache on Windows."

#: ../../source/cli/cache.rst:62
msgid "The root cache folder."
msgstr "根缓存文件夹。"

#: ../../source/cli/cache.rst:68
#, fuzzy
msgid ":config:`npm config`"
msgstr "npm-config"

#: ../../source/cli/cache.rst:73 ../../source/cli/publish.rst:54
#, fuzzy
msgid ":option:`npm pack`"
msgstr "npm-config"

#: ../../source/cli/cache.rst:74
msgid "https://npm.im/cacache"
msgstr ""

#: ../../source/cli/cache.rst:75
msgid "https://npm.im/pacote"
msgstr ""

#: ../../source/cli/ci.rst:2
#, fuzzy
msgid "npm ci"
msgstr "npm-ci"

#: ../../source/cli/ci.rst:10
msgid "Install a project with a clean slate"
msgstr "使用干净的平板安装项目"

#: ../../source/cli/ci.rst:17 ../../source/cli/hook.rst:21
#: ../../source/cli/org.rst:20
msgid "EXAMPLE"
msgstr "例"

#: ../../source/cli/ci.rst:19
msgid "Make sure you have a package-lock and an up-to-date install:"
msgstr "确保您拥有包锁和最新安装:"

#: ../../source/cli/ci.rst:28
msgid "Run npm ci in that project"
msgstr ""

#: ../../source/cli/ci.rst:35
msgid ""
"Configure Travis to build using :option:`npm ci` instead of :option:`npm "
"install`:"
msgstr ""

#: ../../source/cli/ci.rst:50
msgid ""
"This command is similar to :option:`npm install`, except it’s meant to be"
" used in automated environments such as test platforms, continuous "
"integration, and deployment – or any situation where you want to make "
"sure you’re doing a clean install of your dependencies. It can be "
"significantly faster than a regular npm install by skipping certain user-"
"oriented features. It is also more strict than a regular install, which "
"can help catch errors or inconsistencies caused by the incrementally-"
"installed local environments of most npm users."
msgstr ""

#: ../../source/cli/ci.rst:52
#, fuzzy
msgid ""
"In short, the main differences between using `npm install` and `npm ci` "
"are:"
msgstr "In short, the main differences between using npm install and npm ci are:"

#: ../../source/cli/ci.rst:54
#, fuzzy
msgid ""
"The project **must** have an existing `package-lock.json` or `npm-"
"shrinkwrap.json`."
msgstr "package-lock.json 或 npm-shrinkwrap.json 的擦洗版本"

#: ../../source/cli/ci.rst:55
msgid ""
"If dependencies in the package lock do not match those in `package.json`,"
" `npm ci` will exit with an error, instead of updating the package lock."
msgstr ""

#: ../../source/cli/ci.rst:56
msgid ""
"`npm ci` can only install entire projects at a time: individual "
"dependencies cannot be added with this command."
msgstr ""

#: ../../source/cli/ci.rst:57
msgid ""
"If a **node_modules** is already present, it will be automatically "
"removed before `npm ci` begins its install."
msgstr ""

#: ../../source/cli/ci.rst:58
msgid ""
"It will never write to `package.json` or any of the package-locks: "
"installs are essentially frozen."
msgstr ""

#: ../../source/cli/ci.rst:64
#, fuzzy
msgid ":option:`npm package locks`"
msgstr "npm-publish"

#: ../../source/cli/completion.rst:2
#, fuzzy
msgid "npm completion"
msgstr "npm-completion"

#: ../../source/cli/completion.rst:10
msgid "Tab Completion for npm"
msgstr "标签完成为npm"

#: ../../source/cli/completion.rst:19
msgid "Enables tab-completion in all npm commands."
msgstr "Enables tab-completion in all npm commands."

#: ../../source/cli/completion.rst:21
msgid ""
"The synopsis above loads the completions into your current shell. Adding "
"it to your **~/.bashrc** or **~/.zshrc** will make the completions "
"available everywhere:"
msgstr ""

#: ../../source/cli/completion.rst:28
msgid ""
"You may of course also pipe the output of :option:`npm completion` to a "
"file such as **/usr/local/etc/bash_completion.d/npm** or "
"**/etc/bash_completion.d/npm** if you have a system that will read that "
"file for you."
msgstr ""

#: ../../source/cli/completion.rst:30
msgid ""
"When **COMP_CWORD**, **COMP_LINE**, and **COMP_POINT** are defined in the"
" environment, :option:`npm completion` acts in “plumbing mode”, and "
"outputs completions based on the arguments."
msgstr ""

#: ../../source/cli/completion.rst:35 ../../source/cli/link.rst:66
#, fuzzy
msgid ":option:`npm developers`"
msgstr "npm-publish"

#: ../../source/cli/completion.rst:36
msgid ":program:`npm`"
msgstr ""

#: ../../source/cli/config.rst:2
#, fuzzy
msgid "npm config"
msgstr "npm-config"

#: ../../source/cli/config.rst:10
#, fuzzy
msgid "Manage the npm configuration files"
msgstr "config Manage the npm configuration files"

#: ../../source/cli/config.rst:24
#, fuzzy
msgid "config alias"
msgstr "配置 npm"

#: ../../source/cli/config.rst:29
msgid ""
"npm gets its config settings from the command line, environment "
"variables, :doc:`../files/npmrc` files, and in some cases, the "
":doc:`../files/package.json` file."
msgstr ""

#: ../../source/cli/config.rst:31
#, fuzzy
msgid "See :doc:`../files/npmrc` for more information about the npmrc files."
msgstr "See npmrc for more information about the npmrc files."

#: ../../source/cli/config.rst:33
#, fuzzy
msgid ""
"See :option:`npm config` for a more thorough discussion of the mechanisms"
" involved."
msgstr "See npm-config for a more thorough discussion of the mechanisms involved."

#: ../../source/cli/config.rst:35
msgid ""
"The :option:`npm config` command can be used to update and edit the "
"contents of the user and global npmrc files."
msgstr ""

#: ../../source/cli/config.rst:38
#, fuzzy
msgid "Sub-commands"
msgstr "CLI命令"

#: ../../source/cli/config.rst:40
msgid "Config supports the following sub-commands:"
msgstr "Config supports the following sub-commands:"

#: ../../source/cli/config.rst:43
msgid "set"
msgstr ""

#: ../../source/cli/config.rst:45
#, fuzzy
msgid "npm config set key value Sets the config key to the value."
msgstr "set npm config set key value Sets the config key to the value."

#: ../../source/cli/config.rst:48
msgid "If value is omitted, then it sets it to “true”."
msgstr "If value is omitted, then it sets it to “true”."

#: ../../source/cli/config.rst:51
msgid "get"
msgstr ""

#: ../../source/cli/config.rst:57
#, fuzzy
msgid "Echo the config value to stdout."
msgstr "get npm config get key Echo the config value to stdout."

#: ../../source/cli/config.rst:60
msgid "list"
msgstr ""

#: ../../source/cli/config.rst:66
msgid ""
"Show all the config settings. Use -l to also show defaults. Use --json to"
" show the settings in json format."
msgstr ""

#: ../../source/cli/config.rst:69
msgid "delete"
msgstr ""

#: ../../source/cli/config.rst:75
#, fuzzy
msgid "Deletes the key from all configuration files."
msgstr "delete npm config delete key Deletes the key from all configuration files."

#: ../../source/cli/config.rst:78
#, fuzzy
msgid "edit"
msgstr "npm-edit"

#: ../../source/cli/config.rst:84
msgid ""
"Opens the config file in an editor. Use the --global flag to edit the "
"global config."
msgstr ""

#: ../../source/cli/config.rst:93 ../../source/cli/help-search.rst:39
#: ../../source/cli/help.rst:37
#, fuzzy
msgid ":option:`npm`"
msgstr "npm-config"

#: ../../source/cli/dedupe.rst:2
#, fuzzy
msgid "npm dedupe"
msgstr "npm-dedupe"

#: ../../source/cli/dedupe.rst:11
#, fuzzy
msgid "Reduce duplication"
msgstr "dedupe Reduce duplication"

#: ../../source/cli/dedupe.rst:20 ../../source/cli/dedupe.rst:24
msgid "dedupe alias"
msgstr ""

#: ../../source/cli/dedupe.rst:29
msgid ""
"Searches the local package tree and attempts to simplify the overall "
"structure by moving dependencies further up the tree, where they can be "
"more effectively shared by multiple dependent packages."
msgstr ""

#: ../../source/cli/dedupe.rst:31
msgid "For example, consider this dependency graph::"
msgstr "For example, consider this dependency graph::"

#: ../../source/cli/dedupe.rst:39
msgid "In this case, npm-dedupe will transform the tree to::"
msgstr "In this case, npm-dedupe will transform the tree to::"

#: ../../source/cli/dedupe.rst:46
msgid ""
"Because of the hierarchical nature of node’s module lookup, b and d will "
"both get their dependency met by the single c package at the root level "
"of the tree."
msgstr ""

#: ../../source/cli/dedupe.rst:48
msgid ""
"The deduplication algorithm walks the tree, moving each dependency as far"
" up in the tree as possible, even if duplicates are not found. This will "
"result in both a flat and deduplicated tree."
msgstr ""

#: ../../source/cli/dedupe.rst:50
msgid ""
"If a suitable version exists at the target location in the tree already, "
"then it will be left untouched, but the other duplicates will be deleted."
msgstr ""

#: ../../source/cli/dedupe.rst:52
msgid "Arguments are ignored. Dedupe always acts on the entire tree."
msgstr "Arguments are ignored. Dedupe always acts on the entire tree."

#: ../../source/cli/dedupe.rst:54
msgid "Modules"
msgstr "Modules"

#: ../../source/cli/dedupe.rst:56
msgid ""
"Note that this operation transforms the dependency tree, but will never "
"result in new modules being installed."
msgstr ""

#: ../../source/cli/dedupe.rst:61 ../../source/cli/prune.rst:39
#: ../../source/cli/shrinkwrap.rst:37 ../../source/cli/update.rst:115
#, fuzzy
msgid ":option:`npm ls`"
msgstr "npm-publish"

#: ../../source/cli/dedupe.rst:62 ../../source/cli/install.rst:463
#: ../../source/cli/ls.rst:129 ../../source/cli/outdated.rst:82
#, fuzzy
msgid ":option:`npm update`"
msgstr "npm-config"

#: ../../source/cli/deprecate.rst:2
#, fuzzy
msgid "npm deprecate"
msgstr "npm-deprecate"

#: ../../source/cli/deprecate.rst:4
#, fuzzy
msgid "Deprecate a version of a package"
msgstr "deprecate Deprecate a version of a package"

#: ../../source/cli/deprecate.rst:19
msgid ""
"This command will update the npm registry entry for a package, providing "
"a deprecation warning to all who attempt to install it."
msgstr ""

#: ../../source/cli/deprecate.rst:21
msgid ""
"It works on version ranges as well as specific versions, so you can do "
"something like this:"
msgstr ""

#: ../../source/cli/deprecate.rst:23
msgid ""
"npm deprecate my-thing@\"< 0.2.3\" \"critical bug fixed in v0.2.3\" Note "
"that you must be the package owner to deprecate something. See the owner "
"and adduser help topics."
msgstr ""

#: ../../source/cli/deprecate.rst:26
msgid ""
"To un-deprecate a package, specify an empty string (\"\") for the message"
" argument. Note that you must use double quotes with no space between "
"them to format an empty string."
msgstr ""

#: ../../source/cli/dist-tag.rst:2
#, fuzzy
msgid "npm dist-tag"
msgstr "npm-dist-tag"

#: ../../source/cli/dist-tag.rst:4
#, fuzzy
msgid "Modify package distribution tags"
msgstr "dist-tag Modify package distribution tags"

#: ../../source/cli/dist-tag.rst:21
#, fuzzy
msgid "dist-tag aliases"
msgstr "npm install sax"

#: ../../source/cli/dist-tag.rst:25
msgid "Add, remove, and enumerate distribution tags on a package:"
msgstr "Add, remove, and enumerate distribution tags on a package:"

#: ../../source/cli/dist-tag.rst:27
msgid ""
"add: Tags the specified version of the package with the specified tag, or"
" the --tag config if not specified. If you have two-factor authentication"
" on auth-and-writes then you’ll need to include a one-time password on "
"the command line with --otp <one-time password>."
msgstr ""

#: ../../source/cli/dist-tag.rst:29
msgid "rm: Clear a tag that is no longer in use from the package."
msgstr "rm: Clear a tag that is no longer in use from the package."

#: ../../source/cli/dist-tag.rst:31
msgid ""
"ls: Show all of the dist-tags for a package, defaulting to the package in"
" the current prefix."
msgstr ""

#: ../../source/cli/dist-tag.rst:33
msgid "This is the default action if none is specified."
msgstr "This is the default action if none is specified."

#: ../../source/cli/dist-tag.rst:35
msgid ""
"A tag can be used when installing packages as a reference to a version "
"instead of using a specific version number:"
msgstr ""

#: ../../source/cli/dist-tag.rst:37
msgid ""
"npm install <name>@<tag> When installing dependencies, a preferred tagged"
" version may be specified:"
msgstr ""

#: ../../source/cli/dist-tag.rst:40
msgid "npm install --tag <tag> This also applies to npm dedupe."
msgstr "npm install --tag <tag> This also applies to npm dedupe."

#: ../../source/cli/dist-tag.rst:43
msgid ""
"Publishing a package sets the latest tag to the published version unless "
"the --tag option is used. For example, npm publish --tag=beta."
msgstr ""

#: ../../source/cli/dist-tag.rst:45
msgid ""
"By default, npm install <pkg> (without any @<version> or @<tag> "
"specifier) installs the latest tag."
msgstr ""

#: ../../source/cli/dist-tag.rst:48
msgid "PURPOSE"
msgstr "PURPOSE"

#: ../../source/cli/dist-tag.rst:50
msgid "Tags can be used to provide an alias instead of version numbers."
msgstr "Tags can be used to provide an alias instead of version numbers."

#: ../../source/cli/dist-tag.rst:52
msgid ""
"For example, a project might choose to have multiple streams of "
"development and use a different tag for each stream, e.g., stable, beta, "
"dev, canary."
msgstr ""

#: ../../source/cli/dist-tag.rst:54
msgid ""
"By default, the latest tag is used by npm to identify the current version"
" of a package, and npm install <pkg> (without any @<version> or @<tag> "
"specifier) installs the latest tag. Typically, projects only use the "
"latest tag for stable release versions, and use other tags for unstable "
"versions such as prereleases."
msgstr ""

#: ../../source/cli/dist-tag.rst:56
msgid "The next tag is used by some projects to identify the upcoming version."
msgstr "The next tag is used by some projects to identify the upcoming version."

#: ../../source/cli/dist-tag.rst:58
msgid ""
"By default, other than latest, no tag has any special significance to npm"
" itself."
msgstr ""

#: ../../source/cli/dist-tag.rst:61
msgid "CAVEATS"
msgstr "CAVEATS"

#: ../../source/cli/dist-tag.rst:63
msgid ""
"This command used to be known as npm tag, which only created new tags, "
"and so had a different syntax."
msgstr ""

#: ../../source/cli/dist-tag.rst:65
msgid ""
"Tags must share a namespace with version numbers, because they are "
"specified in the same slot: npm install <pkg>@<version> vs npm install "
"<pkg>@<tag>."
msgstr ""

#: ../../source/cli/dist-tag.rst:67
msgid ""
"Tags that can be interpreted as valid semver ranges will be rejected. For"
" example, v1.4 cannot be used as a tag, because it is interpreted by "
"semver as >=1.4.0 <1.5.0. See https://github.com/npm/npm/issues/6082."
msgstr ""

#: ../../source/cli/dist-tag.rst:69
msgid ""
"The simplest way to avoid semver problems with tags is to use tags that "
"do not begin with a number or the letter v."
msgstr ""

#: ../../source/cli/dist-tag.rst:76
#, fuzzy
msgid ":option:`npm dedupe`"
msgstr "npm-publish"

#: ../../source/cli/docs.rst:2
#, fuzzy
msgid "npm docs"
msgstr "npm-docs"

#: ../../source/cli/docs.rst:4
#, fuzzy
msgid "Docs for a package in a web browser maybe"
msgstr "docs Docs for a package in a web browser maybe"

#: ../../source/cli/docs.rst:23
msgid ""
"This command tries to guess at the likely location of a package’s "
"documentation URL, and then tries to open it using the --browser config "
"param. You can pass multiple package names at once. If no package name is"
" provided, it will search for a package.json in the current folder and "
"use the name property."
msgstr ""

#: ../../source/cli/docs.rst:28
msgid ""
"browser Default: OS X: \"open\", Windows: \"start\", Others: \"xdg-open\""
" Type: String The browser that is called by the npm docs command to open "
"websites."
msgstr ""

#: ../../source/cli/docs.rst:33
msgid ""
"registry Default: https://registry.npmjs.org/ Type: url The base URL of "
"the npm package registry."
msgstr ""

#: ../../source/cli/doctor.rst:2
#, fuzzy
msgid "npm doctor"
msgstr "npm-doctor"

#: ../../source/cli/doctor.rst:4
#, fuzzy
msgid "Check your environments"
msgstr "doctor Check your environments"

#: ../../source/cli/doctor.rst:20
msgid ""
"npm doctor runs a set of checks to ensure that your npm installation has "
"what it needs to manage your JavaScript packages. npm is mostly a "
"standalone tool, but it does have some basic requirements that must be "
"met:"
msgstr ""

#: ../../source/cli/doctor.rst:22
msgid ""
"Node.js and git must be executable by npm. The primary npm registry, "
"registry.npmjs.com, or another service that uses the registry API, is "
"available. The directories that npm uses, node_modules (both locally and "
"globally), exist and can be written by the current user. The npm cache "
"exists, and the package tarballs within it aren’t corrupt. Without all of"
" these working properly, npm may not work properly. Many issues are often"
" attributable to things that are outside npm’s code base, so npm doctor "
"confirms that the npm installation is in a good state."
msgstr ""

#: ../../source/cli/doctor.rst:28
msgid ""
"Also, in addition to this, there are also very many issue reports due to "
"using old versions of npm. Since npm is constantly improving, running "
"npm@latest is better than an old version."
msgstr ""

#: ../../source/cli/doctor.rst:30
msgid ""
"npm doctor verifies the following items in your environment, and if there"
" are any recommended changes, it will display them."
msgstr ""

#: ../../source/cli/doctor.rst:32
msgid ""
"npm ping By default, npm installs from the primary npm registry, "
"registry.npmjs.org. npm doctor hits a special ping endpoint within the "
"registry. This can also be checked with npm ping. If this check fails, "
"you may be using a proxy that needs to be configured, or may need to talk"
" to your IT staff to get access over HTTPS to registry.npmjs.org."
msgstr ""

#: ../../source/cli/doctor.rst:35
msgid ""
"This check is done against whichever registry you’ve configured (you can "
"see what that is by running npm config get registry), and if you’re using"
" a private registry that doesn’t support the /whoami endpoint supported "
"by the primary registry, this check may fail."
msgstr ""

#: ../../source/cli/doctor.rst:37
msgid ""
"npm -v While Node.js may come bundled with a particular version of npm, "
"it’s the policy of the CLI team that we recommend all users run "
"npm@latest if they can. As the CLI is maintained by a small team of "
"contributors, there are only resources for a single line of development, "
"so npm’s own long-term support releases typically only receive critical "
"security and regression fixes. The team believes that the latest tested "
"version of npm is almost always likely to be the most functional and "
"defect-free version of npm."
msgstr ""

#: ../../source/cli/doctor.rst:40
msgid ""
"node -v For most users, in most circumstances, the best version of Node "
"will be the latest long-term support (LTS) release. Those of you who want"
" access to new ECMAscript features or bleeding-edge changes to Node’s "
"standard library may be running a newer version, and some of you may be "
"required to run an older version of Node because of enterprise change "
"control policies. That’s OK! But in general, the npm team recommends that"
" most users run Node.js LTS."
msgstr ""

#: ../../source/cli/doctor.rst:43
msgid ""
"npm config get registry Some of you may be installing from private "
"package registries for your project or company. That’s great! Others of "
"you may be following tutorials or StackOverflow questions in an effort to"
" troubleshoot problems you may be having. Sometimes, this may entail "
"changing the registry you’re pointing at. This part of npm doctor just "
"lets you, and maybe whoever’s helping you with support, know that you’re "
"not using the default registry."
msgstr ""

#: ../../source/cli/doctor.rst:46
msgid ""
"which git While it’s documented in the README, it may not be obvious that"
" npm needs Git installed to do many of the things that it does. Also, in "
"some cases – especially on Windows – you may have Git set up in such a "
"way that it’s not accessible via your PATH so that npm can find it. This "
"check ensures that Git is available."
msgstr ""

#: ../../source/cli/doctor.rst:49
msgid ""
"Permissions checks Your cache must be readable and writable by the user "
"running npm. Global package binaries must be writable by the user running"
" npm. Your local node_modules path, if you’re running npm doctor with a "
"project directory, must be readable and writable by the user running npm."
" Validate the checksums of cached packages When an npm package is "
"published, the publishing process generates a checksum that npm uses at "
"install time to verify that the package didn’t get corrupted in transit. "
"npm doctor uses these checksums to validate the package tarballs in your "
"local cache (you can see where that cache is located with npm config get "
"cache, and see what’s in that cache with npm cache ls – probably more "
"than you were expecting!). In the event that there are corrupt packages "
"in your cache, you should probably run npm cache clean and reset the "
"cache."
msgstr ""

#: ../../source/cli/doctor.rst:59
#, fuzzy
msgid ":option:`npm bugs`"
msgstr "npm-publish"

#: ../../source/cli/doctor.rst:60 ../../source/cli/help-search.rst:40
#: ../../source/cli/npm.rst:100
#, fuzzy
msgid ":option:`npm help`"
msgstr "npm-config"

#: ../../source/cli/doctor.rst:61
#, fuzzy
msgid ":option:`npm ping`"
msgstr "npm-config"

#: ../../source/cli/edit.rst:2
#, fuzzy
msgid "npm edit"
msgstr "npm-edit"

#: ../../source/cli/edit.rst:4
#, fuzzy
msgid "Edit an installed package"
msgstr "edit Edit an installed package"

#: ../../source/cli/edit.rst:20
msgid ""
"Selects a (sub)dependency in the current working directory and opens the "
"package folder in the default editor (or whatever you’ve configured as "
"the npm editor config – see npm-config.)"
msgstr ""

#: ../../source/cli/edit.rst:22
msgid ""
"After it has been edited, the package is rebuilt so as to pick up any "
"changes in compiled packages."
msgstr ""

#: ../../source/cli/edit.rst:24
msgid ""
"For instance, you can do npm install connect to install connect into your"
" package, and then npm edit connect to make a few changes to your locally"
" installed copy."
msgstr ""

#: ../../source/cli/edit.rst:29
msgid ""
"editor Default: EDITOR environment variable if set, or \"vi\" on Posix, "
"or \"notepad\" on Windows. Type: path The command to run for npm edit or "
"npm config edit."
msgstr ""

#: ../../source/cli/edit.rst:38
#, fuzzy
msgid ":option:`npm explore`"
msgstr "npm-publish"

#: ../../source/cli/explore.rst:2
#, fuzzy
msgid "npm explore"
msgstr "npm-explore"

#: ../../source/cli/explore.rst:11
#, fuzzy
msgid "Browse an installed package"
msgstr "explore Browse an installed package"

#: ../../source/cli/explore.rst:20
msgid "Spawn a subshell in the directory of the installed package specified."
msgstr "Spawn a subshell in the directory of the installed package specified."

#: ../../source/cli/explore.rst:22
msgid ""
"If a command is specified, then it is run in the subshell, which then "
"immediately terminates."
msgstr ""

#: ../../source/cli/explore.rst:24
msgid ""
"This is particularly handy in the case of git submodules in the "
"node_modules folder:"
msgstr ""

#: ../../source/cli/explore.rst:26
msgid ""
"npm explore some-dependency -- git pull origin master Note that the "
"package is not automatically rebuilt afterwards, so be sure to use npm "
"rebuild <pkg> if you make any changes."
msgstr ""

#: ../../source/cli/explore.rst:32
msgid ""
"shell Default: SHELL environment variable, or “bash” on Posix, or “cmd” "
"on Windows Type: path The shell to run for the npm explore command."
msgstr ""

#: ../../source/cli/explore.rst:41
#, fuzzy
msgid ":option:`npm edit`"
msgstr "ping Ping npm registry"

#: ../../source/cli/explore.rst:42 ../../source/cli/install.rst:466
#, fuzzy
msgid ":option:`npm rebuild`"
msgstr "ping Ping npm registry"

#: ../../source/cli/explore.rst:43 ../../source/cli/install.rst:468
#: ../../source/cli/rebuild.rst:29
#, fuzzy
msgid ":option:`npm build`"
msgstr "npm-publish"

#: ../../source/cli/help.rst:2
#, fuzzy
msgid "npm help"
msgstr "npm-help"

#: ../../source/cli/help.rst:11
#, fuzzy
msgid "Get help on npm"
msgstr "help Get help on npm"

#: ../../source/cli/help.rst:20
msgid "If supplied a topic, then show the appropriate documentation page."
msgstr "If supplied a topic, then show the appropriate documentation page."

#: ../../source/cli/help.rst:22
msgid ""
"If the topic does not exist, or if multiple terms are provided, then run "
"the help-search command to find a match. Note that, if help-search finds "
"a single subject, then it will run help on that topic, so unique matches "
"are equivalent to specifying a topic name."
msgstr ""

#: ../../source/cli/help.rst:27
msgid ""
"viewer Default: “man” on Posix, “browser” on Windows Type: path The "
"program to use to view help content."
msgstr ""

#: ../../source/cli/help.rst:32
msgid "Set to \"browser\" to view html help content in the default web browser."
msgstr "Set to \"browser\" to view html help content in the default web browser."

#: ../../source/cli/help.rst:38 ../../source/cli/npm.rst:101
#, fuzzy
msgid ":option:`README`"
msgstr "npm-publish"

#: ../../source/cli/help.rst:44
#, fuzzy
msgid ":option:`npm help-search`"
msgstr "npm-config"

#: ../../source/cli/help.rst:45 ../../source/cli/npm.rst:107
#, fuzzy
msgid ":option:`npm index`"
msgstr "ping Ping npm registry"

#: ../../source/cli/help-search.rst:2
#, fuzzy
msgid "npm help-search"
msgstr "npm-help-search"

#: ../../source/cli/help-search.rst:11
#, fuzzy
msgid "Search npm help documentation"
msgstr "help-search Search npm help documentation"

#: ../../source/cli/help-search.rst:20
msgid ""
"This command will search the npm markdown documentation files for the "
"terms provided, and then list the results, sorted by relevance."
msgstr ""

#: ../../source/cli/help-search.rst:22
msgid "If only one result is found, then it will show that help topic."
msgstr "If only one result is found, then it will show that help topic."

#: ../../source/cli/help-search.rst:24
msgid ""
"If the argument to npm help is not a known help topic, then it will call "
"help-search. It is rarely if ever necessary to call this command "
"directly."
msgstr ""

#: ../../source/cli/help-search.rst:29
msgid ""
"long Type: Boolean Default: false If true, the “long” flag will cause "
"help-search to output context around where the terms were found in the "
"documentation."
msgstr ""

#: ../../source/cli/help-search.rst:34
msgid "If false, then help-search will just list out the help topics found."
msgstr "If false, then help-search will just list out the help topics found."

#: ../../source/cli/hook.rst:2
#, fuzzy
msgid "npm hook"
msgstr "npm-hook"

#: ../../source/cli/hook.rst:11
#, fuzzy
msgid "Manage registry hooks"
msgstr "hook Manage registry hooks"

#: ../../source/cli/hook.rst:23
msgid "Add a hook to watch a package for changes:"
msgstr "Add a hook to watch a package for changes:"

#: ../../source/cli/hook.rst:25
msgid ""
"$ npm hook add lodash https://example.com/ my-shared-secret Add a hook to"
" watch packages belonging to the user substack:"
msgstr ""

#: ../../source/cli/hook.rst:28
msgid ""
"$ npm hook add ~substack https://example.com/ my-shared-secret Add a hook"
" to watch packages in the scope @npm"
msgstr ""

#: ../../source/cli/hook.rst:31
msgid ""
"$ npm hook add @npm https://example.com/ my-shared-secret List all your "
"active hooks:"
msgstr ""

#: ../../source/cli/hook.rst:34
msgid "$ npm hook ls List your active hooks for the lodash package:"
msgstr "$ npm hook ls List your active hooks for the lodash package:"

#: ../../source/cli/hook.rst:37
msgid "$ npm hook ls lodash Update an existing hook’s url:"
msgstr "$ npm hook ls lodash Update an existing hook’s url:"

#: ../../source/cli/hook.rst:40
msgid "$ npm hook update id-deadbeef https://my-new-website.here/ Remove a hook:"
msgstr "$ npm hook update id-deadbeef https://my-new-website.here/ Remove a hook:"

#: ../../source/cli/hook.rst:43
msgid "$ npm hook rm id-deadbeef"
msgstr "$ npm hook rm id-deadbeef"

#: ../../source/cli/hook.rst:48
msgid ""
"Allows you to manage npm hooks, including adding, removing, listing, and "
"updating."
msgstr ""

#: ../../source/cli/hook.rst:50
msgid ""
"Hooks allow you to configure URL endpoints that will be notified whenever"
" a change happens to any of the supported entity types. Three different "
"types of entities can be watched by hooks: packages, owners, and scopes."
msgstr ""

#: ../../source/cli/hook.rst:52
msgid "To create a package hook, simply reference the package name."
msgstr "To create a package hook, simply reference the package name."

#: ../../source/cli/hook.rst:54
msgid "To create an owner hook, prefix the owner name with ~ (as in, ~youruser)."
msgstr "To create an owner hook, prefix the owner name with ~ (as in, ~youruser)."

#: ../../source/cli/hook.rst:56
msgid "To create a scope hook, prefix the scope name with @ (as in, @yourscope)."
msgstr "To create a scope hook, prefix the scope name with @ (as in, @yourscope)."

#: ../../source/cli/hook.rst:58
msgid ""
"The hook id used by update and rm are the IDs listed in npm hook ls for "
"that particular hook."
msgstr ""

#: ../../source/cli/hook.rst:60
msgid ""
"The shared secret will be sent along to the URL endpoint so you can "
"verify the request came from your own configured hook."
msgstr ""

#: ../../source/cli/hook.rst:65
#, fuzzy
msgid "“Introducing Hooks” blog post"
msgstr "SEE ALSO “Introducing Hooks” blog post"

#: ../../source/cli/index.rst:2
msgid "CLI documentation"
msgstr "CLI文档"

#: ../../source/cli/index.rst:5
msgid "CLI commands"
msgstr "CLI命令"

#: ../../source/cli/index.rst:7
msgid ":option:`access <npm access>` Set access level on published packages"
msgstr ":option:`access <npm access>` 在已发布的包上设置访问级别"

#: ../../source/cli/index.rst:8
msgid ":option:`adduser <npm adduser>` Add a registry user account"
msgstr ":option:`adduser <npm adduser>` 添加注册用户帐户"

#: ../../source/cli/index.rst:9
msgid ":option:`audit <npm audit>` Run a security audit"
msgstr ":option:`audit <npm audit>` 运行安全审核"

#: ../../source/cli/index.rst:10
msgid ":option:`bin <npm bin>` Display npm bin folder"
msgstr ":option:`bin <npm bin>` 显示 npm bin 文件夹"

#: ../../source/cli/index.rst:11
msgid ":option:`bugs <npm bugs>` Bugs for a package in a web browser maybe"
msgstr ":option:`bugs <npm bugs>` 可能是Web浏览器中包的错误"

#: ../../source/cli/index.rst:12
msgid ":option:`build <npm build>` Build a package"
msgstr ":option:`build <npm build>` 构建一个包"

#: ../../source/cli/index.rst:13
msgid ":option:`bundle <npm bundle>` REMOVED"
msgstr ":option:`bundle <npm bundle>` 移除"

#: ../../source/cli/index.rst:14
msgid ":option:`cache <npm cache>` Manipulates packages cache"
msgstr ":option:`cache <npm cache>` 处理包缓存"

#: ../../source/cli/index.rst:15
msgid ":option:`ci <npm ci>` Install a project with a clean slate"
msgstr ":option:`ci <npm ci>` 安装一个带有干净石板的项目"

#: ../../source/cli/index.rst:16
msgid ":option:`completion <npm completion>` Tab Completion for npm"
msgstr ":option:`completion <npm completion>` 标签完成为npm"

#: ../../source/cli/index.rst:17
msgid ":option:`config <npm config>` Manage the npm configuration files"
msgstr ":option:`config <npm config>` 管理npm配置文件"

#: ../../source/cli/index.rst:18
msgid ":option:`dedupe <npm dedupe>` Reduce duplication"
msgstr ":option:`dedupe <npm dedupe>` 减少重复"

#: ../../source/cli/index.rst:19
msgid ":option:`deprecate <npm deprecate>` Deprecate a version of a package"
msgstr ":option:`deprecate <npm deprecate>` 弃用包的版本"

#: ../../source/cli/index.rst:20
msgid ":option:`dist-tag <npm dist-tag>` Modify package distribution tags"
msgstr ":option:`dist-tag <npm dist-tag>` 修改包分发标签"

#: ../../source/cli/index.rst:21
msgid ":option:`docs <npm docs>` Docs for a package in a web browser maybe"
msgstr ":option:`docs <npm docs>` 可能是Web浏览器中包的文档"

#: ../../source/cli/index.rst:22
msgid ":option:`doctor <npm doctor>` Check your environments"
msgstr ":option:`doctor <npm doctor>` 检查您的环境"

#: ../../source/cli/index.rst:23
msgid ":option:`edit <npm edit>` Edit an installed package"
msgstr ":option:`edit <npm edit>` 编辑已安装的包"

#: ../../source/cli/index.rst:24
msgid ":option:`explore <npm explore>` Browse an installed package"
msgstr ":option:`explore <npm explore>` 浏览已安装的软件包"

#: ../../source/cli/index.rst:25
msgid ":option:`help-search <npm help-search>` Search npm help documentation"
msgstr ":option:`help-search <npm help-search>` 搜索npm帮助文档"

#: ../../source/cli/index.rst:26
msgid ":option:`help <npm help>` Get help on npm"
msgstr ":option:`help <npm help>` 在npm获得帮助"

#: ../../source/cli/index.rst:27
msgid ":option:`hook <npm hook>` Manage registry hooks"
msgstr ":option:`hook <npm hook>` 管理注册表挂钩"

#: ../../source/cli/index.rst:28
msgid ":option:`init <npm init>` create a package.json file"
msgstr ":option:`init <npm init>` 创建一个 package.json 文件"

#: ../../source/cli/index.rst:29
msgid ""
":option:`install-ci-test <npm install-ci-test>` Install a project with a "
"clean slate and run tests"
msgstr ":option:`install-ci-test <npm install-ci-test>` 使用干净的平板安装项目并运行测试"

#: ../../source/cli/index.rst:30
msgid ":option:`install-test <npm install-test>` Install package(s) and run tests"
msgstr ":option:`install-test <npm install-test>` 安装软件包并运行测试"

#: ../../source/cli/index.rst:31
msgid ":option:`install <npm install>` Install a package"
msgstr ":option:`install <npm install>` 安装包"

#: ../../source/cli/index.rst:32
msgid ":option:`link <npm link>` Symlink a package folder"
msgstr ":option:`link <npm link>` 符号链接包文件夹"

#: ../../source/cli/index.rst:33
msgid ":option:`logout <npm logout>` Log out of the registry"
msgstr ":option:`logout <npm logout>` 退出注册"

#: ../../source/cli/index.rst:34
msgid ":option:`ls <npm ls>` List installed packages"
msgstr ":option:`ls <npm ls>` 列出已安装的包"

#: ../../source/cli/index.rst:35
msgid ":option:`npm <npm npm>` javascript package manager"
msgstr ":option:`npm <npm npm>` javascript 包管理器"

#: ../../source/cli/index.rst:36
msgid ":option:`org <npm org>` Manage orgs"
msgstr ":option:`org <npm org>` 管理组织"

#: ../../source/cli/index.rst:37
msgid ":option:`outdated <npm outdated>` Check for outdated packages"
msgstr ":option:`outdated <npm outdated>` 检查过时的包"

#: ../../source/cli/index.rst:38
msgid ":option:`owner <npm owner>` Manage package owners"
msgstr ":option:`owner <npm owner>` 管理包所有者"

#: ../../source/cli/index.rst:39
msgid ":option:`pack <npm pack>` Create a tarball from a package"
msgstr ":option:`pack <npm pack>` 从包中创建 tarball"

#: ../../source/cli/index.rst:40
msgid ":option:`ping <npm ping>` Ping npm registry"
msgstr ":option:`ping <npm ping>` Ping npm 注册"

#: ../../source/cli/index.rst:41
msgid ":option:`prefix <npm prefix>` Display prefix"
msgstr ":option:`prefix <npm prefix>` 显示前缀"

#: ../../source/cli/index.rst:42
msgid ":option:`profile <npm profile>` Change settings on your registry profile"
msgstr ":option:`profile <npm profile>` 更改注册配置文件的设置"

#: ../../source/cli/index.rst:43
msgid ":option:`prune <npm prune>` Remove extraneous packages"
msgstr ":option:`prune <npm prune>` 删除无关的包"

#: ../../source/cli/index.rst:44
msgid ":option:`publish <npm publish>` Publish a package"
msgstr ":option:`publish <npm publish>` 发布包"

#: ../../source/cli/index.rst:45
msgid ":option:`rebuild <npm rebuild>` Rebuild a package"
msgstr ":option:`rebuild <npm rebuild>` 重建包"

#: ../../source/cli/index.rst:46
msgid ":option:`repo <npm repo>` Open package repository page in the browser"
msgstr ":option:`repo <npm repo>` 在浏览器中打开包存储库页面"

#: ../../source/cli/index.rst:47
msgid ":option:`restart <npm restart>` Restart a package"
msgstr ":option:`restart <npm restart>` 重启包"

#: ../../source/cli/index.rst:48
msgid ":option:`root <npm root>` Display npm root"
msgstr ":option:`root <npm root>` 显示 npm root"

#: ../../source/cli/index.rst:49
msgid ":option:`run-script <npm run-script>` Run arbitrary package scripts"
msgstr ":option:`run-script <npm run-script>` 运行任意包脚本"

#: ../../source/cli/index.rst:50
msgid ":option:`search <npm search>` Search for packages"
msgstr ":option:`search <npm search>` 搜索包"

#: ../../source/cli/index.rst:51
msgid ""
":option:`shrinkwrap <npm shrinkwrap>` Lock down dependency versions for "
"publication"
msgstr ":option:`shrinkwrap <npm shrinkwrap>` 锁定发布的依赖版本"

#: ../../source/cli/index.rst:52
msgid ":option:`star <npm star>` Mark your favorite packages"
msgstr ":option:`star <npm star>` 标记您喜欢的包"

#: ../../source/cli/index.rst:53
msgid ":option:`stars <npm stars>` View packages marked as favorites"
msgstr ":option:`stars <npm stars>` 查看标记为收藏的包"

#: ../../source/cli/index.rst:54
msgid ":option:`start <npm start>` Start a package"
msgstr ":option:`start <npm start>` 开始一个包"

#: ../../source/cli/index.rst:55
msgid ":option:`stop <npm stop>` Stop a package"
msgstr ":option:`stop <npm stop>` 停止包"

#: ../../source/cli/index.rst:56
msgid ":option:`team <npm team>` Manage organization teams and team memberships"
msgstr ":option:`team <npm team>` 管理组织团队和团队成员资格"

#: ../../source/cli/index.rst:57
msgid ":option:`test <npm test>` Test a package"
msgstr ":option:`test <npm test>` 测试包"

#: ../../source/cli/index.rst:58
msgid ":option:`token <npm token>` Manage your authentication tokens"
msgstr ":option:`token <npm token>` 管理您的身份验证令牌"

#: ../../source/cli/index.rst:59
msgid ":option:`uninstall <npm uninstall>` Remove a package"
msgstr ":option:`uninstall <npm uninstall>` 删除包"

#: ../../source/cli/index.rst:60
msgid ":option:`unpublish <npm unpublish>` Remove a package from the registry"
msgstr ":option:`unpublish <npm unpublish>` 从注册中删除包"

#: ../../source/cli/index.rst:61
msgid ":option:`update <npm update>` Update a package"
msgstr ":option:`update <npm update>` 更新包"

#: ../../source/cli/index.rst:62
msgid ":option:`version <npm version>` Bump a package version"
msgstr ":option:`version <npm version>` Bump 一个包版本"

#: ../../source/cli/index.rst:63
msgid ":option:`view <npm view>` View registry info"
msgstr ":option:`view <npm view>` 查看注册表信息"

#: ../../source/cli/index.rst:64
msgid ":option:`whoami <npm whoami>` Display npm username"
msgstr ":option:`whoami <npm whoami>` 显示npm用户名"

#: ../../source/cli/index.rst:130
msgid "Configuring npm"
msgstr "配置 npm"

#: ../../source/cli/index.rst:132
msgid ":doc:`../files/folders` Folder Structures Used by npm"
msgstr ":doc:`../files/folders` npm 使用的文件夹结构"

#: ../../source/cli/index.rst:133
msgid ":doc:`../files/npmrc` The npm config files"
msgstr ":doc:`../files/npmrc` npm 配置文件"

#: ../../source/cli/index.rst:134
msgid ":doc:`../files/package-lock.json` A manifestation of the manifest"
msgstr ":doc:`../files/package-lock.json` 清单的表现形式"

#: ../../source/cli/index.rst:135
msgid ":doc:`../files/package-locks` An explanation of npm lockfiles"
msgstr ":doc:`../files/package-locks` npm lockfiles 的解释"

#: ../../source/cli/index.rst:136
msgid ":doc:`../files/package.json` Specifics of npm's package.json handling"
msgstr ":doc:`../files/package.json` npm package.json 处理的细节"

#: ../../source/cli/index.rst:137
msgid ":doc:`../files/shrinkwrap.json` A publishable lockfile"
msgstr ":doc:`../files/shrinkwrap.json` 可发布的锁文件"

#: ../../source/cli/index.rst:141
msgid "Using npm"
msgstr "使用 npm"

#: ../../source/cli/index.rst:143
msgid ":doc:`../misc/coding-style` npm's \"funny\" coding style"
msgstr ":doc:`../misc/coding-style` npm 的“搞笑”编码风格"

#: ../../source/cli/index.rst:144
msgid ""
":doc:`../misc/config` More than you probably want to know about npm "
"configuration"
msgstr ":doc:`../misc/config` config 您可能想了解 npm 配置"

#: ../../source/cli/index.rst:145
msgid ":doc:`../misc/developers` Developer Guide"
msgstr ":doc:`../misc/developers` 开发者指南"

#: ../../source/cli/index.rst:146
msgid ":doc:`../misc/disputes` Handling Module Name Disputes"
msgstr ":doc:`../misc/disputes` 处理模块名称争议"

#: ../../source/cli/index.rst:147
msgid ":doc:`../misc/index` Index of all npm documentation"
msgstr ":doc:`../misc/index` 所有 npm 文档的索引"

#: ../../source/cli/index.rst:148
msgid ":doc:`../misc/orgs` Working with Teams & Orgs"
msgstr ":doc:`../misc/orgs` 与团队和组织合作"

#: ../../source/cli/index.rst:149
msgid ":doc:`../misc/registry` The JavaScript Package Registry"
msgstr ":doc:`../misc/registry` JavaScript 包注册"

#: ../../source/cli/index.rst:150
msgid ":doc:`../misc/scope` Scoped packages"
msgstr ":doc:`../misc/scope` Scoped 包"

#: ../../source/cli/index.rst:151
msgid ":doc:`../misc/scripts` How npm handles the \"scripts\" field"
msgstr ":doc:`../misc/scripts` npm如何处理 \"scripts\" 字段"

#: ../../source/cli/index.rst:152
msgid ":doc:`../misc/removal` Cleaning the Slate"
msgstr ":doc:`../misc/removal` 清洁板岩"

#: ../../source/cli/index.rst:153
msgid ":doc:`../misc/semver` The semantic versioner for npm"
msgstr ":doc:`../misc/semver`  npm 的语义版本"

#: ../../source/cli/init.rst:2
#, fuzzy
msgid "npm init"
msgstr "npm-init"

#: ../../source/cli/init.rst:4
msgid "create a package.json file"
msgstr "创建一个 package.json 文件"

#: ../../source/cli/init.rst:22
msgid "Create a new React-based project using create-react-app:"
msgstr "使用 create-react-app 创建一个新的基于 React 的项目:"

#: ../../source/cli/init.rst:24
msgid ""
"$ npm init react-app ./my-react-app Create a new esm-compatible package "
"using create-esm:"
msgstr ""

#: ../../source/cli/init.rst:27
msgid ""
"$ mkdir my-esm-lib && cd my-esm-lib $ npm init esm --yes Generate a plain"
" old package.json using legacy init:"
msgstr ""

#: ../../source/cli/init.rst:31
msgid ""
"$ mkdir my-npm-pkg && cd my-npm-pkg $ git init $ npm init Generate it "
"without having it ask any questions:"
msgstr ""

#: ../../source/cli/init.rst:36
msgid "$ npm init -y"
msgstr "$ npm init -y"

#: ../../source/cli/init.rst:41
msgid ""
"npm init <initializer> can be used to set up a new or existing npm "
"package."
msgstr ""

#: ../../source/cli/init.rst:43
msgid ""
"initializer in this case is an npm package named create-<initializer>, "
"which will be installed by npx, and then have its main bin executed – "
"presumably creating or updating package.json and running any other "
"initialization-related operations."
msgstr ""

#: ../../source/cli/init.rst:45
msgid ""
"The init command is transformed to a corresponding npx operation as "
"follows:"
msgstr ""

#: ../../source/cli/init.rst:47
msgid ""
"npm init foo -> npx create-foo npm init @usr/foo -> npx @usr/create-foo "
"npm init @usr -> npx @usr/create Any additional options will be passed "
"directly to the command, so npm init foo --hello will map to npx create-"
"foo --hello."
msgstr ""

#: ../../source/cli/init.rst:52
msgid ""
"If the initializer is omitted (by just calling npm init), init will fall "
"back to legacy init behavior. It will ask you a bunch of questions, and "
"then write a package.json for you. It will attempt to make reasonable "
"guesses based on existing fields, dependencies, and options selected. It "
"is strictly additive, so it will keep any fields and values that were "
"already set. You can also use -y/--yes to skip the questionnaire "
"altogether. If you pass --scope, it will create a scoped package."
msgstr ""

#: ../../source/cli/init.rst:57
msgid "https://github.com/isaacs/init-package-json"
msgstr ""

#: ../../source/cli/init.rst:59
#, fuzzy
msgid ":option:`npm version`"
msgstr "npm-publish"

#: ../../source/cli/init.rst:60 ../../source/cli/publish.rst:49
msgid ":ref:`scope`"
msgstr ""

#: ../../source/cli/install.rst:2
#, fuzzy
msgid "npm install"
msgstr "npm-install"

#: ../../source/cli/install.rst:11
msgid "Install a package"
msgstr "安装包"

#: ../../source/cli/install.rst:26
msgid ""
"common options: [-P|--save-prod|-D|--save-dev|-O|--save-optional] [-E"
"|--save-exact] [-B|--save-bundle] [--no-save] [--dry-run]"
msgstr ""

#: ../../source/cli/install.rst:30 ../../source/cli/install.rst:34
msgid "npm install alias"
msgstr "npm install 别号"

#: ../../source/cli/install.rst:40
#, fuzzy
msgid ""
"This command installs a package, and any packages that it depends on. If "
"the package has a :ref:`package-locks` or :ref:`shrinkwrap` file, the "
"installation of dependencies will be driven by that, with an "
":ref:`shrinkwrap.json` taking precedence if both files exist. See :ref"
":`package-lock.json` and :option:`npm shrinkwrap`."
msgstr ""
"此命令将安装程序包及其依赖的任何程序包。如果软件包有一个package-"
"lock或shrinkwrap文件，依赖项的安装将由它驱动，如果两个文件都存在，则 :ref:`shrinkwrap.json` 优先。请参阅 "
":ref:`package-lock.json` 和 :option:`npm shrinkwrap` 。"

#: ../../source/cli/install.rst:44
msgid "A **package** is:"
msgstr "**包** 是:"

#: ../../source/cli/install.rst:46
#, fuzzy
msgid "a folder containing a program described by a :ref:`package.json` file"
msgstr "包含package.json文件描述的程序的文件夹"

#: ../../source/cli/install.rst:47
msgid "a gzipped tarball containing (a)"
msgstr "包含(a)的压缩的tarball"

#: ../../source/cli/install.rst:48
msgid "a url that resolves to (b)"
msgstr "一个解析为(b)的网址"

#: ../../source/cli/install.rst:49
#, fuzzy
msgid ""
"a <name>@<version> that is published on the registry (see "
":ref:`registry`) with (c)"
msgstr "在注册表上发布的 <name>@<version> (参见npm-registry)(c)"

#: ../../source/cli/install.rst:50
#, fuzzy
msgid "a <name>@<tag> (see :ref:`dist-tag`) that points to (d)"
msgstr "<name>@<tag> (参见npm-dist-tag)指向(d)"

#: ../../source/cli/install.rst:51
msgid "a <name> that has a “latest” tag satisfying (e)"
msgstr "满足(e)的 “最新” 标签的 <name>"

#: ../../source/cli/install.rst:52
msgid "a <git remote url> that resolves to (a)"
msgstr "一个 <git remote url> ，解析为(a)"

#: ../../source/cli/install.rst:54
msgid ""
"Even if you never publish your package, you can still get a lot of "
"benefits of using npm if you just want to write a node program (a), and "
"perhaps if you also want to be able to easily install it elsewhere after "
"packing it up into a tarball (b)."
msgstr ""
"即使您从未发布过您的软件包，如果您只想编写一个节点程序(a)，或者如果您还希望能够在打包之后轻松地将其安装在其他地方，那么使用npm仍然可以获得很多好处。进入"
" tarball(b)。"

#: ../../source/cli/install.rst:60
msgid "Install the dependencies in the local node_modules folder."
msgstr "在本地 node_modules 文件夹中安装依赖项。"

#: ../../source/cli/install.rst:62
#, fuzzy
msgid ""
"In global mode (ie, with :option:`-g` or :option:`--global` appended to "
"the command), it installs the current package context (ie, the current "
"working directory) as a global package."
msgstr "在全局模式下(即，在命令后附加 -g 或 --global)，它将当前包上下文(即当前工作目录)安装为全局包。"

#: ../../source/cli/install.rst:65
msgid ""
"By default, npm install will install all modules listed as dependencies "
"in package.json."
msgstr "默认情况下，npm install将在package.json中安装列为依赖项的所有模块。"

#: ../../source/cli/install.rst:67
#, fuzzy
msgid ""
"With the :option:`--production` flag (or when the NODE_ENV environment "
"variable is set to production), npm will not install modules listed in "
"devDependencies."
msgstr ""
"使用--"
"production标志(或当NODE_ENV环境变量设置为production时)，npm将不会安装devDependencies中列出的模块。"

#: ../../source/cli/install.rst:70
#, fuzzy
msgid ""
"The :option:`--production` flag has no particular meaning when adding a "
"dependency to a project."
msgstr "将依赖项添加到项目时， -  production标志没有特别的意义。"

#: ../../source/cli/install.rst:74
msgid "Install the package in the directory as a symlink in the current project."
msgstr "将包作为当前项目中的符号链接安装在目录中。"

#: ../../source/cli/install.rst:75
msgid "Its dependencies will be installed before it’s linked."
msgstr "它的依赖项将在链接之前安装。"

#: ../../source/cli/install.rst:76
msgid "If <folder> sits inside the root of your project,"
msgstr "如果<folder>位于项目的根目录中，"

#: ../../source/cli/install.rst:77
msgid ""
"its dependencies may be hoisted to the toplevel node_modules as they "
"would for other types of dependencies."
msgstr "它的依赖关系可以像其他类型的依赖关系一样被提升到顶层node_modules。"

#: ../../source/cli/install.rst:81
msgid "Install a package that is sitting on the filesystem."
msgstr "安装位于文件系统上的软件包。"

#: ../../source/cli/install.rst:83
msgid ""
"if you just want to link a dev directory into your npm root, you can do "
"this more easily by using npm link."
msgstr "如果您只想将dev目录链接到npm根目录，则可以使用npm链接更轻松地完成此操作。"

#: ../../source/cli/install.rst:85
msgid "Tarball requirements:"
msgstr "Tarball要求:"

#: ../../source/cli/install.rst:87
msgid "The filename must use .tar, .tar.gz, or .tgz as the extension."
msgstr "文件名必须使用.tar，.tar.gz或.tgz作为扩展名。"

#: ../../source/cli/install.rst:88
msgid ""
"The package contents should reside in a subfolder inside the tarball "
"(usually it is called package/). npm strips one directory layer when "
"installing the package (an equivalent of ``tar x --strip-components=1`` "
"is run)."
msgstr ""

#: ../../source/cli/install.rst:89
msgid ""
"The package must contain a package.json file with name and version "
"properties."
msgstr ""

#: ../../source/cli/install.rst
#, fuzzy
msgid "Example"
msgstr "Example:"

#: ../../source/cli/install.rst:98
msgid ""
"Fetch the tarball url, and then install it. In order to distinguish "
"between this and other options, the argument must start with *http://* or"
" *https://*"
msgstr ""

#: ../../source/cli/install.rst:107
msgid ""
"Do a <name>@<tag> install, where <tag> is the “tag” config. (See "
":option:`config`. The config’s default value is latest.)"
msgstr ""

#: ../../source/cli/install.rst:109
msgid ""
"In most cases, this will install the version of the modules tagged as "
"latest on the npm registry."
msgstr ""

#: ../../source/cli/install.rst:117
msgid ""
"npm install saves any specified packages into dependencies by default. "
"Additionally, you can control where and how they get saved with some "
"additional flags:"
msgstr ""

#: ../../source/cli/install.rst:123
msgid ""
"Package will appear in your dependencies. This is the default unless "
":option:`-D` or :option:`-O` are present."
msgstr ""

#: ../../source/cli/install.rst:128
#, fuzzy
msgid "Package will appear in your devDependencies."
msgstr "-D, --save-dev: Package will appear in your devDependencies."

#: ../../source/cli/install.rst:133
#, fuzzy
msgid "Package will appear in your optionalDependencies."
msgstr "-O, --save-optional: Package will appear in your optionalDependencies."

#: ../../source/cli/install.rst:137
#, fuzzy
msgid "Prevents saving to dependencies."
msgstr "--no-save: Prevents saving to dependencies."

#: ../../source/cli/install.rst:139
msgid ""
"When using any of the above options to save dependencies to your "
":ref:`package.json`, there are two additional, optional flags:"
msgstr ""

#: ../../source/cli/install.rst:145
msgid ""
"Saved dependencies will be configured with an exact version rather than "
"using npm’s default semver range operator."
msgstr ""

#: ../../source/cli/install.rst:150
msgid "Saved dependencies will also be added to your bundleDependencies list."
msgstr ""

#: ../../source/cli/install.rst:152
msgid ""
"Further, if you have an :ref:`shrinkwrap.json` or :ref:`package-"
"lock.json` then it will be updated as well."
msgstr ""

#: ../../source/cli/install.rst:154
msgid ""
"`<scope>` is optional. The package will be downloaded from the registry "
"associated with the specified scope."
msgstr ""

#: ../../source/cli/install.rst:156
msgid ""
"If no registry is associated with the given scope the default registry is"
" assumed. See :ref:`scope`."
msgstr ""

#: ../../source/cli/install.rst:159
msgid ""
"if you do not include the ``@-symbol`` on your scope name, npm will "
"interpret this as a GitHub repository instead, see below. Scopes names "
"must also be followed by a slash."
msgstr ""

#: ../../source/cli/install.rst
#, fuzzy
msgid "Examples"
msgstr "Examples:"

#: ../../source/cli/install.rst:176
msgid ""
"If there is a file or folder named ``<name>`` in the current working "
"directory, then it will try to install that, and only try to fetch the "
"package by name if it is not valid."
msgstr ""

#: ../../source/cli/install.rst:181
msgid ""
"Install the version of the package that is referenced by the specified "
"tag."
msgstr ""

#: ../../source/cli/install.rst:182
msgid ""
"If the tag does not exist in the registry data for that package, then "
"this will fail."
msgstr ""

#: ../../source/cli/install.rst:193
#, fuzzy
msgid "Install the specified version of the package."
msgstr "deprecate Deprecate a version of a package"

#: ../../source/cli/install.rst:194
msgid "This will fail if the version has not been published to the registry."
msgstr ""

#: ../../source/cli/install.rst:205
msgid "Install a version of the package matching the specified version range."
msgstr ""

#: ../../source/cli/install.rst:206
msgid ""
"This will follow the same rules for resolving dependencies described in "
"package.json."
msgstr ""

#: ../../source/cli/install.rst:208
msgid ""
"Note that most version ranges must be put in quotes so that your shell "
"will treat it as a single argument."
msgstr ""

#: ../../source/cli/install.rst:219
msgid ""
"Installs the package from the hosted git provider, cloning it with git. "
"For a full git remote url, only that URL will be attempted."
msgstr ""

#: ../../source/cli/install.rst:227
#, fuzzy
msgid ""
"``<protocol>`` is one of *git*, *git+ssh*, *git+http*, *git+https*, or "
"*git+file*."
msgstr "<protocol> is one of git, git+ssh, git+http, git+https, or git+file."

#: ../../source/cli/install.rst:229
msgid ""
"If ``#<commit-ish>`` is provided, it will be used to clone exactly that "
"commit."
msgstr ""

#: ../../source/cli/install.rst:231
msgid ""
"If the commit-ish has the format ``#semver:<semver>``, ``<semver>`` can "
"be any valid semver range or exact version, and npm will look for any "
"tags or refs matching that range in the remote repository, much as it "
"would for a registry dependency."
msgstr ""

#: ../../source/cli/install.rst:233
msgid ""
"If neither ``#<commit-ish>`` or ``#semver:<semver>`` is specified, then "
"the default branch of the repository is used."
msgstr ""

#: ../../source/cli/install.rst:235
msgid ""
"If the repository makes use of submodules, those submodules will be "
"cloned as well."
msgstr ""

#: ../../source/cli/install.rst:237
msgid ""
"If the package being installed contains a prepare script, its "
"dependencies and devDependencies will be installed, and the prepare "
"script will be run, before the package is packaged and installed."
msgstr ""

#: ../../source/cli/install.rst:239
msgid ""
"The following git environment variables are recognized by npm and will be"
" added to the environment when running git:"
msgstr ""

#: ../../source/cli/install.rst:241
msgid "GIT_ASKPASS"
msgstr ""

#: ../../source/cli/install.rst:242
msgid "GIT_EXEC_PATH"
msgstr ""

#: ../../source/cli/install.rst:243
msgid "GIT_PROXY_COMMAND"
msgstr ""

#: ../../source/cli/install.rst:244
msgid "GIT_SSH"
msgstr ""

#: ../../source/cli/install.rst:245
msgid "GIT_SSH_COMMAND"
msgstr ""

#: ../../source/cli/install.rst:246
msgid "GIT_SSL_CAINFO"
msgstr ""

#: ../../source/cli/install.rst:247
msgid "GIT_SSL_NO_VERIFY"
msgstr ""

#: ../../source/cli/install.rst:249
msgid "See the git man page for details."
msgstr ""

#: ../../source/cli/install.rst:265
msgid ""
"Install the package at https://github.com/githubname/githubrepo by "
"attempting to clone it using git."
msgstr ""

#: ../../source/cli/install.rst:267
msgid ""
"If ``#<commit-ish>`` is provided, it will be used to clone exactly that "
"commit. If the commit-ish has the format #semver:<semver>, ``<semver>`` "
"can be any valid semver range or exact version, and npm will look for any"
" tags or refs matching that range in the remote repository, much as it "
"would for a registry dependency. If neither ``#<commit-ish>`` or "
"``#semver:<semver>`` is specified, then master is used."
msgstr ""

#: ../../source/cli/install.rst:269 ../../source/cli/install.rst:282
#: ../../source/cli/install.rst:296 ../../source/cli/install.rst:310
msgid ""
"As with regular git dependencies, dependencies and devDependencies will "
"be installed if the package has a prepare script, before the package is "
"done installing."
msgstr ""

#: ../../source/cli/install.rst:280
msgid ""
"Install the package at https://gist.github.com/gistID by attempting to "
"clone it using git. The GitHub username associated with the gist is "
"optional and will not be saved in package.json."
msgstr ""

#: ../../source/cli/install.rst:292
msgid ""
"Install the package at https://bitbucket.org/bitbucketname/bitbucketrepo "
"by attempting to clone it using git."
msgstr ""

#: ../../source/cli/install.rst:294 ../../source/cli/install.rst:308
msgid ""
"If ``#<commit-ish>`` is provided, it will be used to clone exactly that "
"commit. If the commit-ish has the format ``#semver:<semver>``, "
"``<semver>`` can be any valid semver range or exact version, and npm will"
" look for any tags or refs matching that range in the remote repository, "
"much as it would for a registry dependency. If neither ``#<commit-ish>`` "
"or ``#semver:<semver>`` is specified, then master is used."
msgstr ""

#: ../../source/cli/install.rst:306
msgid ""
"Install the package at https://gitlab.com/gitlabname/gitlabrepo by "
"attempting to clone it using git."
msgstr ""

#: ../../source/cli/install.rst:319
msgid "You may combine multiple arguments, and even multiple types of arguments."
msgstr ""

#: ../../source/cli/install.rst:321 ../../source/cli/link.rst:39
msgid "For example:"
msgstr "For example:"

#: ../../source/cli/install.rst:329
msgid ""
"The argument will apply to all of the specified install targets. If a tag"
" with the given name exists, the tagged version is preferred over newer "
"versions."
msgstr ""

#: ../../source/cli/install.rst:334
msgid ""
"The argument will report in the usual way what the install would have "
"done without actually installing anything."
msgstr ""

#: ../../source/cli/install.rst:338
msgid ""
"The argument will only update the :ref:`package-lock.json`, instead of "
"checking node_modules and downloading dependencies."
msgstr ""

#: ../../source/cli/install.rst:343
msgid ""
"The argument will force npm to fetch remote resources even if a local "
"copy exists on disk."
msgstr ""

#: ../../source/cli/install.rst:352
msgid ""
"The -g or --global argument will cause npm to install the package "
"globally rather than locally. See :ref:`folders`."
msgstr ""

#: ../../source/cli/install.rst:356
msgid ""
"The argument will cause npm to install the package into your local "
"node_modules folder with the same layout it uses with the global "
"node_modules folder. Only your direct dependencies will show in "
"node_modules and everything they depend on will be flattened in their "
"node_modules folders. This obviously will eliminate some deduping."
msgstr ""

#: ../../source/cli/install.rst:362
msgid ""
"The argument will cause npm to not execute any scripts defined in the "
"package.json. See :ref:`scripts`."
msgstr ""

#: ../../source/cli/install.rst:366
msgid ""
"The argument will cause npm to install the package such that versions of "
"npm prior to 1.4, such as the one included with node 0.8, can install the"
" package. This eliminates all automatic deduping."
msgstr ""

#: ../../source/cli/install.rst:370
msgid ""
"The argument will cause npm to link global installs into the local space "
"in some cases."
msgstr ""

#: ../../source/cli/install.rst:374
msgid ""
"The argument will prevent npm from creating symlinks for any binaries the"
" package might contain."
msgstr ""

#: ../../source/cli/install.rst:378
msgid "The argument will prevent optional dependencies from being installed."
msgstr ""

#: ../../source/cli/install.rst:382
msgid ""
"The argument, which will ignore an available package lock or shrinkwrap "
"file and use the package.json instead."
msgstr ""

#: ../../source/cli/install.rst:386
msgid ""
"The argument will prevent npm from creating a :ref:`package-lock.json` "
"file. When running with package-lock’s disabled npm will not "
"automatically prune your node modules when installing."
msgstr ""

#: ../../source/cli/install.rst:390
msgid ""
"The argument will allow npm to find the node source code so that npm can "
"compile native modules."
msgstr ""

#: ../../source/cli/install.rst:394
msgid ""
"The argument will cause either only devDependencies or only *non-"
"devDependencies* to be installed regardless of the NODE_ENV."
msgstr ""

#: ../../source/cli/install.rst:398
msgid ""
"The --no-audit argument can be used to disable sending of audit reports "
"to the configured registries. See :ref:`audit` for details on what is "
"sent."
msgstr ""

#: ../../source/cli/install.rst:400
msgid ""
"See :ref:`config`. Many of the configuration params have some effect on "
"installation, since that’s most of what npm does."
msgstr ""

#: ../../source/cli/install.rst:403
msgid "ALGORITHM"
msgstr "算法"

#: ../../source/cli/install.rst:405
msgid "To install a package, npm uses the following algorithm::"
msgstr "要安装软件包，npm使用以下算法::"

#: ../../source/cli/install.rst:418
msgid ""
"For this package{dep} structure: A{B,C}, B{C}, C{D}, this algorithm "
"produces::"
msgstr "对于此包{dep}结构:A {B，C}，B {C}，C {D}，此算法生成::"

#: ../../source/cli/install.rst:425
msgid ""
"That is, the dependency from B to C is satisfied by the fact that A "
"already caused C to be installed at a higher level. D is still installed "
"at the top level because nothing conflicts with it."
msgstr "也就是说，A已经导致C安装在更高级别的事实满足了从B到C的依赖性。 D仍然安装在顶层，因为没有任何冲突。"

#: ../../source/cli/install.rst:427
msgid "For A{B,C}, B{C,D@1}, C{D@2}, this algorithm produces::"
msgstr "对于A {B，C}，B {C，D @ 1}，C {D @ 2}，该算法产生::"

#: ../../source/cli/install.rst:435
#, fuzzy
msgid ""
"Because B’s D@1 will be installed in the top level, C now has to install "
"``D@2`` privately for itself. This algorithm is deterministic, but "
"different trees may be produced if two dependencies are requested for "
"installation in a different order."
msgstr "因为B的D @ 1将安装在顶层，所以C现在必须私下安装D @ 2。该算法是确定性的，但是如果请求以不同顺序安装两个依赖性，则可以产生不同的树。"

#: ../../source/cli/install.rst:437
#, fuzzy
msgid ""
"See :ref:`folders` for a more detailed description of the specific folder"
" structures that npm creates."
msgstr "有关npm创建的特定文件夹结构的更详细说明，请参阅npm-folders。"

#: ../../source/cli/install.rst:440
msgid "Limitations of npm’s Install Algorithm"
msgstr "npm安装算法的局限性"

#: ../../source/cli/install.rst:442
#, fuzzy
msgid ""
"npm will refuse to install any package with an identical name to the "
"current package. This can be overridden with the :option:`--force` flag, "
"but in most cases can simply be addressed by changing the local package "
"name."
msgstr "npm将拒绝安装任何与当前包名称相同的包。这可以使用--force标志覆盖，但在大多数情况下可以通过更改本地包名称来解决。"

#: ../../source/cli/install.rst:444
msgid ""
"There are some very rare and pathological edge-cases where a cycle can "
"cause npm to try to install a never-ending tree of packages. Here is the "
"simplest case::"
msgstr ""

#: ../../source/cli/install.rst:449
msgid ""
"where A is some version of a package, and A' is a different version of "
"the same package. Because B depends on a different version of A than the "
"one that is already in the tree, it must install a separate copy. The "
"same is true of A', which must install B'. Because B' depends on the "
"original version of A, which has been overridden, the cycle falls into "
"infinite regress."
msgstr ""

#: ../../source/cli/install.rst:455
msgid ""
"To avoid this situation, ``npm flat-out`` refuses to install any "
"``name@version`` that is already present anywhere in the tree of package "
"folder ancestors. A more correct, but more complex, solution would be to "
"symlink the existing version into the new location. If this ever affects "
"a real use-case, it will be investigated."
msgstr ""

#: ../../source/cli/install.rst:464
#, fuzzy
msgid ":option:`npm audit`"
msgstr "npm-config"

#: ../../source/cli/install.rst:467 ../../source/cli/shrinkwrap.rst:32
#, fuzzy
msgid ":ref:`scripts`"
msgstr "npm-run-script"

#: ../../source/cli/install.rst:473 ../../source/cli/outdated.rst:83
#: ../../source/cli/publish.rst:53
#, fuzzy
msgid ":option:`npm dist-tag`"
msgstr "ping Ping npm registry"

#: ../../source/cli/install.rst:474 ../../source/cli/prune.rst:37
#, fuzzy
msgid ":option:`npm uninstall`"
msgstr "ping Ping npm registry"

#: ../../source/cli/install.rst:475 ../../source/cli/update.rst:112
#, fuzzy
msgid ":option:`npm shrinkwrap`"
msgstr "ping Ping npm registry"

#: ../../source/cli/install-ci-test.rst:2
#, fuzzy
msgid "npm install-ci-test"
msgstr "npm-install-ci-test"

#: ../../source/cli/install-ci-test.rst:11
#, fuzzy
msgid "Install a project with a clean slate and run tests"
msgstr "使用干净的平板安装项目并运行测试"

#: ../../source/cli/install-ci-test.rst:19
#, fuzzy
msgid "install-ci-test alias"
msgstr "npm-install-ci-test"

#: ../../source/cli/install-ci-test.rst:24
msgid "This command runs an npm ci followed immediately by an npm test."
msgstr "This command runs an npm ci followed immediately by an npm test."

#: ../../source/cli/install-ci-test.rst:29
#, fuzzy
msgid ":option:`npm ci`"
msgstr "npm-config"

#: ../../source/cli/install-ci-test.rst:30 ../../source/cli/restart.rst:47
#: ../../source/cli/run-script.rst:66 ../../source/cli/start.rst:29
#: ../../source/cli/stop.rst:27
#, fuzzy
msgid ":option:`npm test`"
msgstr "ping Ping npm registry"

#: ../../source/cli/install-test.rst:2
#, fuzzy
msgid "npm install-test"
msgstr "npm-install-test"

#: ../../source/cli/install-test.rst:11
#, fuzzy
msgid "Install package(s) and run tests"
msgstr "install-test Install package(s) and run tests"

#: ../../source/cli/install-test.rst:26
#, fuzzy
msgid "install-test alias"
msgstr "npm install sax"

#: ../../source/cli/install-test.rst:28
msgid ""
"common options: [--save|--save-dev|--save-optional] [--save-exact] "
"[--dry-run]"
msgstr ""

#: ../../source/cli/install-test.rst:33
msgid ""
"This command runs an npm install followed immediately by an npm test. It "
"takes exactly the same arguments as npm install."
msgstr ""

#: ../../source/cli/install-test.rst:38
#, fuzzy
msgid "`npm-install`"
msgstr "npm-install"

#: ../../source/cli/install-test.rst:39
#, fuzzy
msgid "`npm-test`"
msgstr "npm-test"

#: ../../source/cli/link.rst:2
#, fuzzy
msgid "npm link"
msgstr "npm-link"

#: ../../source/cli/link.rst:11
#, fuzzy
msgid "Symlink a package folder"
msgstr "link Symlink a package folder"

#: ../../source/cli/link.rst:20
msgid "link alias"
msgstr ""

#: ../../source/cli/link.rst:25
msgid "Package linking is a two-step process."
msgstr "Package linking is a two-step process."

#: ../../source/cli/link.rst:27
msgid ""
"First, npm link in a package folder will create a symlink in the global "
"folder {prefix}/lib/node_modules/<package> that links to the package "
"where the npm link command was executed. (see npm-config for the value of"
" prefix). It will also link any bins in the package to "
"{prefix}/bin/{name}."
msgstr ""

#: ../../source/cli/link.rst:29
msgid ""
"Next, in some other location, npm link package-name will create a "
"symbolic link from globally-installed package-name to node_modules/ of "
"the current folder."
msgstr ""

#: ../../source/cli/link.rst:31
msgid ""
"Note that package-name is taken from package.json, not from directory "
"name."
msgstr ""

#: ../../source/cli/link.rst:33
msgid ""
"The package name can be optionally prefixed with a scope. See npm-scope. "
"The scope must be preceded by an @-symbol and followed by a slash."
msgstr ""

#: ../../source/cli/link.rst:35
msgid ""
"When creating tarballs for npm publish, the linked packages are "
"“snapshotted” to their current state by resolving the symbolic links."
msgstr ""

#: ../../source/cli/link.rst:37
msgid ""
"This is handy for installing your own stuff, so that you can work on it "
"and test it iteratively without having to continually rebuild."
msgstr ""

#: ../../source/cli/link.rst:41
msgid ""
"cd ~/projects/node-redis    # go into the package directory npm link"
"                    # creates global link cd ~/projects/node-bloggy   # "
"go into some other package directory. npm link redis              # link-"
"install the package Now, any changes to ~/projects/node-redis will be "
"reflected in ~/projects/node-bloggy/node_modules/node-redis/. Note that "
"the link should be to the package name, not the directory name for that "
"package."
msgstr ""

#: ../../source/cli/link.rst:47
msgid ""
"You may also shortcut the two steps in one. For example, to do the above "
"use-case in a shorter way:"
msgstr ""

#: ../../source/cli/link.rst:49
msgid ""
"cd ~/projects/node-bloggy  # go into the dir of your main project npm "
"link ../node-redis     # link the dir of your dependency The second line "
"is the equivalent of doing:"
msgstr ""

#: ../../source/cli/link.rst:53
msgid ""
"(cd ../node-redis; npm link) npm link redis That is, it first creates a "
"global link, and then links the global installation target into your "
"project’s node_modules folder."
msgstr ""

#: ../../source/cli/link.rst:57
msgid ""
"Note that in this case, you are referring to the directory name, node-"
"redis, rather than the package name redis."
msgstr ""

#: ../../source/cli/link.rst:59
msgid ""
"If your linked package is scoped (see npm-scope) your link command must "
"include that scope, e.g."
msgstr ""

#: ../../source/cli/link.rst:61
msgid "npm link @myorg/privatepackage"
msgstr "npm link @myorg/privatepackage"

#: ../../source/cli/logout.rst:2
#, fuzzy
msgid "npm logout"
msgstr "npm-logout"

#: ../../source/cli/logout.rst:11
#, fuzzy
msgid "Log out of the registry"
msgstr "logout Log out of the registry"

#: ../../source/cli/logout.rst:20
msgid ""
"When logged into a registry that supports token-based authentication, "
"tell the server to end this token’s session. This will invalidate the "
"token everywhere you’re using it, not just for the current environment."
msgstr ""

#: ../../source/cli/logout.rst:22
msgid ""
"When logged into a legacy registry that uses username and password "
"authentication, this will clear the credentials in your user "
"configuration. In this case, it will only affect the current environment."
msgstr ""

#: ../../source/cli/logout.rst:24
msgid ""
"If --scope is provided, this will find the credentials for the registry "
"connected to that scope, if set."
msgstr ""

#: ../../source/cli/logout.rst:35
msgid ""
"The base URL of the npm package registry. If scope is also specified, it "
"takes precedence."
msgstr ""

#: ../../source/cli/logout.rst:39
msgid "Default: The scope of your current project, if any, otherwise none."
msgstr "Default: The scope of your current project, if any, otherwise none."

#: ../../source/cli/logout.rst:41
msgid ""
"If specified, you will be logged out of the specified scope. See npm-"
"scope."
msgstr ""

#: ../../source/cli/logout.rst:43
msgid "npm logout --scope=@myco"
msgstr "npm logout --scope=@myco"

#: ../../source/cli/logout.rst:48 ../../source/cli/owner.rst:41
#: ../../source/cli/publish.rst:50 ../../source/cli/star.rst:32
#: ../../source/cli/stars.rst:30 ../../source/cli/unpublish.rst:46
#: ../../source/cli/whoami.rst:29
#, fuzzy
msgid ":option:`npm adduser`"
msgstr "npm-publish"

#: ../../source/cli/ls.rst:2
#, fuzzy
msgid "npm ls"
msgstr "npm-ls"

#: ../../source/cli/ls.rst:12
#, fuzzy
msgid "List installed packages"
msgstr "ls List installed packages"

#: ../../source/cli/ls.rst:16 ../../source/cli/ls.rst:20
#: ../../source/cli/ls.rst:24
msgid "ls alias"
msgstr ""

#: ../../source/cli/ls.rst:29
msgid ""
"This command will print to stdout all the versions of packages that are "
"installed, as well as their dependencies, in a tree-structure."
msgstr ""

#: ../../source/cli/ls.rst:31
msgid ""
"Positional arguments are name@version-range identifiers, which will limit"
" the results to only the paths to the packages named. Note that nested "
"packages will also show the paths to the specified packages. For example,"
" running npm ls promzard in npm’s source tree will show::"
msgstr ""

#: ../../source/cli/ls.rst:40
msgid "It will print out extraneous, missing, and invalid packages."
msgstr "It will print out extraneous, missing, and invalid packages."

#: ../../source/cli/ls.rst:42
msgid ""
"If a project specifies git urls for dependencies these are shown in "
"parentheses after the name@version to make it easier for users to "
"recognize potential forks of a project."
msgstr ""

#: ../../source/cli/ls.rst:44
msgid ""
"The tree shown is the logical dependency tree, based on package "
"dependencies, not the physical layout of your node_modules folder."
msgstr ""

#: ../../source/cli/ls.rst:46
msgid "When run as ll or la, it shows extended information by default."
msgstr "When run as ll or la, it shows extended information by default."

#: ../../source/cli/ls.rst:53
msgid "Show information in JSON format."
msgstr ""

#: ../../source/cli/ls.rst
#, fuzzy
msgid "Default"
msgstr "默认: none"

#: ../../source/cli/ls.rst:55 ../../source/cli/ls.rst:63
#: ../../source/cli/ls.rst:71 ../../source/cli/ls.rst:79
#: ../../source/cli/ls.rst:93 ../../source/cli/ls.rst:100
#: ../../source/cli/ls.rst:116 ../../source/cli/token.rst:52
msgid "false"
msgstr ""

#: ../../source/cli/ls.rst
#, fuzzy
msgid "Type"
msgstr "auth-type"

#: ../../source/cli/ls.rst:56 ../../source/cli/ls.rst:64
#: ../../source/cli/ls.rst:72 ../../source/cli/ls.rst:80
#: ../../source/cli/ls.rst:92 ../../source/cli/ls.rst:99
#: ../../source/cli/ls.rst:115
msgid "Boolean"
msgstr ""

#: ../../source/cli/ls.rst:61
#, fuzzy
msgid "Show extended information."
msgstr "long Default: false Type: Boolean Show extended information."

#: ../../source/cli/ls.rst:69
msgid "Show parseable output instead of tree view."
msgstr ""

#: ../../source/cli/ls.rst:77
msgid ""
"List packages in the global install prefix instead of in the current "
"project."
msgstr ""

#: ../../source/cli/ls.rst:84
#, fuzzy
msgid "Max display depth of the dependency tree."
msgstr "depth Type: Int Max display depth of the dependency tree."

#: ../../source/cli/ls.rst:86
msgid "Int"
msgstr ""

#: ../../source/cli/ls.rst:90
msgid "Display only the dependency tree for packages in dependencies."
msgstr ""

#: ../../source/cli/ls.rst:97
msgid "Display only the dependency tree for packages in devDependencies."
msgstr ""

#: ../../source/cli/ls.rst:104
#, fuzzy
msgid "When “dev” or “development”, is an alias to dev."
msgstr "only Type: String When “dev” or “development”, is an alias to dev."

#: ../../source/cli/ls.rst:106
msgid "When “prod” or “production”, is an alias to production."
msgstr "When “prod” or “production”, is an alias to production."

#: ../../source/cli/ls.rst:108
msgid "String"
msgstr ""

#: ../../source/cli/ls.rst:113
msgid "Display only dependencies which are linked"
msgstr ""

#: ../../source/cli/ls.rst:127 ../../source/cli/uninstall.rst:72
#, fuzzy
msgid ":option:`npm prune`"
msgstr "npm-config"

#: ../../source/cli/ls.rst:128 ../../source/cli/update.rst:111
#, fuzzy
msgid ":option:`npm outdated`"
msgstr "npm-publish"

#: ../../source/cli/npm.rst:2
msgid "npm"
msgstr "npm"

#: ../../source/cli/npm.rst:16
msgid "VERSION"
msgstr "VERSION"

#: ../../source/cli/npm.rst:18
msgid "@VERSION@"
msgstr "@VERSION@"

#: ../../source/cli/npm.rst:23
msgid ""
"npm is the package manager for the Node JavaScript platform. It puts "
"modules in place so that node can find them, and manages dependency "
"conflicts intelligently."
msgstr ""

#: ../../source/cli/npm.rst:25
msgid ""
"It is extremely configurable to support a wide variety of use cases. Most"
" commonly, it is used to publish, discover, install, and develop node "
"programs."
msgstr ""

#: ../../source/cli/npm.rst:27
msgid "Run npm help to get a list of available commands."
msgstr "Run npm help to get a list of available commands."

#: ../../source/cli/npm.rst:29
msgid ""
"IMPORTANT npm is configured to use npm, Inc.’s public registry at "
"https://registry.npmjs.org by default. Use of the npm public registry is "
"subject to terms of use available at "
"https://www.npmjs.com/policies/terms."
msgstr ""

#: ../../source/cli/npm.rst:32
msgid ""
"You can configure npm to use any compatible registry you like, and even "
"run your own registry. Use of someone else’s registry may be governed by "
"their terms of use."
msgstr ""

#: ../../source/cli/npm.rst:34
msgid "INTRODUCTION You probably got npm because you want to install stuff."
msgstr "INTRODUCTION You probably got npm because you want to install stuff."

#: ../../source/cli/npm.rst:37
msgid ""
"Use npm install blerg to install the latest version of “blerg”. Check out"
" npm-install for more info. It can do a lot of stuff."
msgstr ""

#: ../../source/cli/npm.rst:39
msgid ""
"Use the npm search command to show everything that’s available. Use npm "
"ls to show everything you’ve installed."
msgstr ""

#: ../../source/cli/npm.rst:41
msgid ""
"DEPENDENCIES If a package references to another package with a git URL, "
"npm depends on a preinstalled git."
msgstr ""

#: ../../source/cli/npm.rst:44
msgid ""
"If one of the packages npm tries to install is a native node module and "
"requires compiling of C++ Code, npm will use node-gyp for that task. For "
"a Unix system, node-gyp needs Python, make and a buildchain like GCC. On "
"Windows, Python and Microsoft Visual Studio C++ are needed. Python 3 is "
"not supported by node-gyp. For more information visit the node-gyp "
"repository and the node-gyp Wiki."
msgstr ""

#: ../../source/cli/npm.rst:46
msgid "DIRECTORIES See npm-folders to learn about where npm puts stuff."
msgstr "DIRECTORIES See npm-folders to learn about where npm puts stuff."

#: ../../source/cli/npm.rst:49
msgid "In particular, npm has two modes of operation:"
msgstr "In particular, npm has two modes of operation:"

#: ../../source/cli/npm.rst:51
msgid ""
"global mode: npm installs packages into the install prefix at "
"prefix/lib/node_modules and bins are installed in prefix/bin. local mode:"
" npm installs packages into the current project directory, which defaults"
" to the current working directory. Packages are installed to "
"./node_modules, and bins are installed to ./node_modules/.bin. Local mode"
" is the default. Use -g or --global on any command to operate in global "
"mode instead."
msgstr ""

#: ../../source/cli/npm.rst:55
msgid ""
"DEVELOPER USAGE If you’re using npm to develop and publish your code, "
"check out the following help topics:"
msgstr ""

#: ../../source/cli/npm.rst:58
msgid ""
"json: Make a package.json file. See package.json. link: For linking your "
"current working code into Node’s path, so that you don’t have to "
"reinstall every time you make a change. Use npm link to do this. install:"
" It’s a good idea to install things if you don’t need the symbolic link. "
"Especially, installing other peoples code from the registry is done via "
"npm install adduser: Create an account or log in. Credentials are stored "
"in the user config file. publish: Use the npm publish command to upload "
"your code to the registry. CONFIGURATION npm is extremely configurable. "
"It reads its configuration options from 5 places."
msgstr ""

#: ../../source/cli/npm.rst:66
msgid ""
"Command line switches: Set a config with --key val. All keys take a "
"value, even if they are booleans (the config parser doesn’t know what the"
" options are at the time of parsing). If no value is provided, then the "
"option is set to boolean true. Environment Variables: Set any config by "
"prefixing the name in an environment variable with npm_config_. For "
"example, export npm_config_key=val. User Configs: The file at "
"$HOME/.npmrc is an ini-formatted list of configs. If present, it is "
"parsed. If the userconfig option is set in the cli or env, then that will"
" be used instead. Global Configs: The file found at ../etc/npmrc (from "
"the node executable, by default this resolves to /usr/local/etc/npmrc) "
"will be parsed if it is found. If the globalconfig option is set in the "
"cli, env, or user config, then that file is parsed instead. Defaults: "
"npm’s default configuration options are defined in lib/utils/config-"
"defs.js. These must not be changed. See npm-config for much much more "
"information."
msgstr ""

#: ../../source/cli/npm.rst:74
msgid "CONTRIBUTIONS"
msgstr "CONTRIBUTIONS"

#: ../../source/cli/npm.rst:76
msgid "Patches welcome!"
msgstr "Patches welcome!"

#: ../../source/cli/npm.rst:78
msgid ""
"If you would like to contribute, but don’t know what to work on, read the"
" contributing guidelines and check the issues list."
msgstr ""

#: ../../source/cli/npm.rst:80
msgid "CONTRIBUTING.md Bug tracker Support tracker"
msgstr "CONTRIBUTING.md Bug tracker Support tracker"

#: ../../source/cli/npm.rst:85
msgid "BUGS"
msgstr "BUGS"

#: ../../source/cli/npm.rst:87
msgid "When you find issues, please report them:"
msgstr "When you find issues, please report them:"

#: ../../source/cli/npm.rst:89
msgid ""
"web: https://npm.community/c/bugs Be sure to follow the template and bug "
"reporting guidelines. You can also ask for help in the support forum if "
"you’re unsure if it’s actually a bug or are having trouble coming up with"
" a detailed reproduction to report."
msgstr ""

#: ../../source/cli/npm.rst:93
msgid "AUTHOR"
msgstr "AUTHOR"

#: ../../source/cli/npm.rst:95
msgid "Isaac Z. Schlueter :: isaacs :: @izs :: i@izs.me"
msgstr "Isaac Z. Schlueter :: isaacs :: @izs :: i@izs.me"

#: ../../source/cli/org.rst:2
#, fuzzy
msgid "npm org"
msgstr "npm-org"

#: ../../source/cli/org.rst:11
#, fuzzy
msgid "Manage orgs"
msgstr "org Manage orgs"

#: ../../source/cli/org.rst:22
msgid "Add a new developer to an org:"
msgstr "Add a new developer to an org:"

#: ../../source/cli/org.rst:24
msgid ""
"$ npm org set my-org @mx-smith Add a new admin to an org (or change a "
"developer to an admin):"
msgstr ""

#: ../../source/cli/org.rst:27
msgid "$ npm org set my-org @mx-santos admin Remove a user from an org:"
msgstr "$ npm org set my-org @mx-santos admin Remove a user from an org:"

#: ../../source/cli/org.rst:30
msgid "$ npm org rm my-org mx-santos List all users in an org:"
msgstr "$ npm org rm my-org mx-santos List all users in an org:"

#: ../../source/cli/org.rst:33
msgid "$ npm org ls my-org List all users in JSON format:"
msgstr "$ npm org ls my-org List all users in JSON format:"

#: ../../source/cli/org.rst:36
msgid "$ npm org ls my-org --json See what role a user has in an org:"
msgstr "$ npm org ls my-org --json See what role a user has in an org:"

#: ../../source/cli/org.rst:39
msgid "$ npm org ls my-org @mx-santos"
msgstr "$ npm org ls my-org @mx-santos"

#: ../../source/cli/org.rst:44
msgid ""
"You can use the npm org commands to manage and view users of an "
"organization. It supports adding and removing users, changing their "
"roles, listing them, and finding specific ones and their roles."
msgstr ""

#: ../../source/cli/org.rst:49
#, fuzzy
msgid "Documentation on npm Orgs"
msgstr "CLI文档"

#: ../../source/cli/outdated.rst:2
#, fuzzy
msgid "npm outdated"
msgstr "npm-outdated"

#: ../../source/cli/outdated.rst:11
#, fuzzy
msgid "Check for outdated packages"
msgstr "outdated Check for outdated packages"

#: ../../source/cli/outdated.rst:20
msgid ""
"This command will check the registry to see if any (or, specific) "
"installed packages are currently outdated."
msgstr ""

#: ../../source/cli/outdated.rst:22
msgid "In the output:"
msgstr "In the output:"

#: ../../source/cli/outdated.rst:24
msgid ""
"wanted is the maximum version of the package that satisfies the semver "
"range specified in package.json. If there’s no available semver range "
"(i.e. you’re running npm outdated --global, or the package isn’t included"
" in package.json), then wanted shows the currently-installed version. "
"latest is the version of the package tagged as latest in the registry. "
"Running npm publish with no special configuration will publish the "
"package with a dist-tag of latest. This may or may not be the maximum "
"version of the package, or the most-recently published version of the "
"package, depending on how the package’s developer manages the latest "
"dist-tag. location is where in the dependency tree the package is "
"located. Note that npm outdated defaults to a depth of 0, so unless you "
"override that, you’ll always be seeing only top-level dependencies that "
"are outdated. package type (when using --long / -l) tells you whether "
"this package is a dependency or a devDependency. Packages not included in"
" package.json are always marked dependencies. homepage (when using --long"
" / -l) is the homepage value contained in the package’s package.json Red "
"means there’s a newer version matching your semver requirements, so you "
"should update now. Yellow indicates that there’s a newer version above "
"your semver requirements (usually new major, or new 0.x minor) so proceed"
" with caution. An example $ npm outdated Package      Current   Wanted   "
"Latest  Location glob          5.0.15   5.0.15    6.0.1  test-outdated-"
"output nothingness    0.0.3      git      git  test-outdated-output npm"
"            3.5.1    3.5.2    3.5.1  test-outdated-output local-dev      "
"0.0.3   linked   linked  test-outdated-output once           1.3.2    "
"1.3.3    1.3.3  test-outdated-output With these dependencies:"
msgstr ""

#: ../../source/cli/outdated.rst:44
msgid "{"
msgstr "{"

#: ../../source/cli/outdated.rst:42
msgid ""
"\"glob\": \"^5.0.15\", \"nothingness\": "
"\"github:othiym23/nothingness#master\", \"npm\": \"^3.5.1\", \"once\": "
"\"^1.3.1\""
msgstr ""

#: ../../source/cli/outdated.rst:46
msgid "} A few things to note:"
msgstr "} A few things to note:"

#: ../../source/cli/outdated.rst:49
msgid ""
"glob requires ^5, which prevents npm from installing glob@6, which is "
"outside the semver range. Git dependencies will always be reinstalled, "
"because of how they’re specified. The installed committish might satisfy "
"the dependency specifier (if it’s something immutable, like a commit "
"SHA), or it might not, so npm outdated and npm update have to fetch Git "
"repos to check. This is why currently doing a reinstall of a Git "
"dependency always forces a new clone and install. npm@3.5.2 is marked as "
"“wanted”, but “latest” is npm@3.5.1 because npm uses dist-tags to manage "
"its latest and next release channels. npm update will install the newest "
"version, but npm install npm (with no semver range) will install "
"whatever’s tagged as latest. once is just plain out of date. Reinstalling"
" node_modules from scratch or running npm update will bring it up to "
"spec. CONFIGURATION json Default: false Type: Boolean Show information in"
" JSON format."
msgstr ""

#: ../../source/cli/outdated.rst:59
msgid "long Default: false Type: Boolean Show extended information."
msgstr "long Default: false Type: Boolean Show extended information."

#: ../../source/cli/outdated.rst:64
msgid ""
"parseable Default: false Type: Boolean Show parseable output instead of "
"tree view."
msgstr ""

#: ../../source/cli/outdated.rst:69
msgid ""
"global Default: false Type: Boolean Check packages in the global install "
"prefix instead of in the current project."
msgstr ""

#: ../../source/cli/outdated.rst:74
msgid "depth Default: 0 Type: Int Max depth for checking dependency tree."
msgstr "depth Default: 0 Type: Int Max depth for checking dependency tree."

#: ../../source/cli/owner.rst:2
#, fuzzy
msgid "npm owner"
msgstr "npm-owner"

#: ../../source/cli/owner.rst:12
#, fuzzy
msgid "Manage package owners"
msgstr "owner Manage package owners"

#: ../../source/cli/owner.rst:22
msgid "owner alias"
msgstr ""

#: ../../source/cli/owner.rst:27
msgid "Manage ownership of published packages."
msgstr "Manage ownership of published packages."

#: ../../source/cli/owner.rst:29
msgid ""
"ls: List all the users who have access to modify a package and push new "
"versions. Handy when you need to know who to bug for help. add: Add a new"
" user as a maintainer of a package. This user is enabled to modify "
"metadata, publish new versions, and add other owners. rm: Remove a user "
"from the package owner list. This immediately revokes their privileges. "
"Note that there is only one level of access. Either you can modify a "
"package, or you can’t. Future versions may contain more fine-grained "
"access levels, but that is not implemented at this time."
msgstr ""

#: ../../source/cli/owner.rst:34
msgid ""
"If you have two-factor authentication enabled with auth-and-writes then "
"you’ll need to include an otp on the command line when changing ownership"
" with --otp."
msgstr ""

#: ../../source/cli/owner.rst:42
#, fuzzy
msgid ":option:`npm disputes`"
msgstr "npm-publish"

#: ../../source/cli/pack.rst:2
#, fuzzy
msgid "npm pack"
msgstr "npm-pack"

#: ../../source/cli/pack.rst:12
#, fuzzy
msgid "Create a tarball from a package"
msgstr "pack Create a tarball from a package"

#: ../../source/cli/pack.rst:21
msgid ""
"For anything that’s installable (that is, a package folder, tarball, "
"tarball url, name@tag, name@version, name, or scoped name), this command "
"will fetch it to the cache, and then copy the tarball to the current "
"working directory as <name>-<version>.tgz, and then write the filenames "
"out to stdout."
msgstr ""

#: ../../source/cli/pack.rst:23
msgid ""
"If the same package is specified multiple times, then the file will be "
"overwritten the second time."
msgstr ""

#: ../../source/cli/pack.rst:25
msgid "If no arguments are supplied, then npm packs the current package folder."
msgstr "If no arguments are supplied, then npm packs the current package folder."

#: ../../source/cli/pack.rst:27
msgid ""
"The --dry-run argument will do everything that pack usually does without "
"actually packing anything. Reports on what would have gone into the "
"tarball."
msgstr ""

#: ../../source/cli/pack.rst:32
#, fuzzy
msgid ":option:`npm cache`"
msgstr "npm-config"

#: ../../source/cli/ping.rst:2
#, fuzzy
msgid "npm ping"
msgstr "npm-ping"

#: ../../source/cli/ping.rst:11
#, fuzzy
msgid "Ping npm registry"
msgstr "ping Ping npm registry"

#: ../../source/cli/ping.rst:20
msgid ""
"Ping the configured or given npm registry and verify authentication. If "
"it works it will output something like:"
msgstr ""

#: ../../source/cli/ping.rst:22
msgid "Ping success: {*Details about registry*} otherwise you will get:"
msgstr "Ping success: {*Details about registry*} otherwise you will get:"

#: ../../source/cli/ping.rst:25
msgid "Ping error: {*Detail about error}"
msgstr "Ping error: {*Detail about error}"

#: ../../source/cli/prefix.rst:2
#, fuzzy
msgid "npm prefix"
msgstr "npm-prefix"

#: ../../source/cli/prefix.rst:11
#, fuzzy
msgid "Display prefix"
msgstr "prefix Display prefix"

#: ../../source/cli/prefix.rst:20
msgid ""
"Print the local prefix to standard out. This is the closest parent "
"directory to contain a package.json file or node_modules directory, "
"unless -g is also specified."
msgstr ""

#: ../../source/cli/prefix.rst:22
msgid ""
"If -g is specified, this will be the value of the global prefix. See npm-"
"config for more detail."
msgstr ""

#: ../../source/cli/prefix.rst:28 ../../source/cli/root.rst:26
#, fuzzy
msgid ":option:`npm bin`"
msgstr "npm-publish"

#: ../../source/cli/profile.rst:2
#, fuzzy
msgid "npm profile"
msgstr "npm-profile"

#: ../../source/cli/profile.rst:11
#, fuzzy
msgid "Change settings on your registry profile"
msgstr "profile Change settings on your registry profile"

#: ../../source/cli/profile.rst:24
msgid ""
"Change your profile information on the registry. This not be available if"
" you’re using a non-npmjs registry."
msgstr ""

#: ../../source/cli/profile.rst:26
msgid ""
"npm profile get [<property>]: Display all of the properties of your "
"profile, or one or more specific properties. It looks like: "
"+-----------------+---------------------------+ | name            | "
"example                   | "
"+-----------------+---------------------------+ | email           | "
"me@example.com (verified) | "
"+-----------------+---------------------------+ | two factor auth | auth-"
"and-writes           | +-----------------+---------------------------+ | "
"fullname        | Example User              | "
"+-----------------+---------------------------+ | homepage        |"
"                           | "
"+-----------------+---------------------------+ | freenode        |"
"                           | "
"+-----------------+---------------------------+ | twitter         |"
"                           | "
"+-----------------+---------------------------+ | github          |"
"                           | "
"+-----------------+---------------------------+ | created         | "
"2015-02-26T01:38:35.892Z  | "
"+-----------------+---------------------------+ | updated         | "
"2017-10-02T21:29:45.922Z  | "
"+-----------------+---------------------------+ npm profile set "
"<property> <value>: Set the value of a profile property. You can set the "
"following properties this way: email, fullname, homepage, freenode, "
"twitter, github"
msgstr ""

#: ../../source/cli/profile.rst:50
msgid ""
"npm profile set password: Change your password. This is interactive, "
"you’ll be prompted for your current password and a new password. You’ll "
"also be prompted for an OTP if you have two-factor authentication "
"enabled."
msgstr ""

#: ../../source/cli/profile.rst:52
msgid ""
"npm profile enable-2fa [auth-and-writes|auth-only]: Enables two-factor "
"authentication. Defaults to auth-and-writes mode. Modes are: auth-only: "
"Require an OTP when logging in or making changes to your account’s "
"authentication. The OTP will be required on both the website and the "
"command line. auth-and-writes: Requires an OTP at all the times auth-only"
" does, and also requires one when publishing a module, setting the latest"
" dist-tag, or changing access via npm access and npm owner. npm profile "
"disable-2fa: Disables two-factor authentication."
msgstr ""

#: ../../source/cli/profile.rst:60
msgid ""
"All of the npm profile subcommands accept --json and --parseable and will"
" tailor their output based on those. Some of these commands may not be "
"available on non npmjs.com registries."
msgstr ""

#: ../../source/cli/prune.rst:2
#, fuzzy
msgid "npm prune"
msgstr "npm-prune"

#: ../../source/cli/prune.rst:11
#, fuzzy
msgid "Remove extraneous packages"
msgstr "prune Remove extraneous packages"

#: ../../source/cli/prune.rst:20
msgid ""
"This command removes “extraneous” packages. If a package name is "
"provided, then only packages matching one of the supplied names are "
"removed."
msgstr ""

#: ../../source/cli/prune.rst:22
msgid ""
"Extraneous packages are packages that are not listed on the parent "
"package’s dependencies list."
msgstr ""

#: ../../source/cli/prune.rst:24
msgid ""
"If the --production flag is specified or the NODE_ENV environment "
"variable is set to production, this command will remove the packages "
"specified in your devDependencies. Setting --no-production will negate "
"NODE_ENV being set to production."
msgstr ""

#: ../../source/cli/prune.rst:26
msgid "If the --dry-run flag is used then no changes will actually be made."
msgstr "If the --dry-run flag is used then no changes will actually be made."

#: ../../source/cli/prune.rst:28
msgid ""
"If the --json flag is used then the changes npm prune made (or would have"
" made with --dry-run) are printed as a JSON object."
msgstr ""

#: ../../source/cli/prune.rst:30
msgid ""
"In normal operation with package-locks enabled, extraneous modules are "
"pruned automatically when modules are installed and you’ll only need this"
" command with the --production flag."
msgstr ""

#: ../../source/cli/prune.rst:32
msgid ""
"If you’ve disabled package-locks then extraneous modules will not be "
"removed and it’s up to you to run npm prune from time-to-time to remove "
"them."
msgstr ""

#: ../../source/cli/publish.rst:2
#, fuzzy
msgid "npm publish"
msgstr "npm-publish"

#: ../../source/cli/publish.rst:11
#, fuzzy
msgid "Publish a package"
msgstr "publish Publish a package"

#: ../../source/cli/publish.rst:17
msgid "Publishes '.' if no argument supplied"
msgstr ""

#: ../../source/cli/publish.rst:18
msgid "Sets tag 'latest' if no --tag specified"
msgstr ""

#: ../../source/cli/publish.rst:23
msgid ""
"Publishes a package to the registry so that it can be installed by name. "
"All files in the package directory are included if no local .gitignore or"
" .npmignore file exists. If both files exist and a file is ignored by "
".gitignore but not by .npmignore then it will be included. See npm-"
"developers for full details on what’s included in the published package, "
"as well as details on how the package is built."
msgstr ""

#: ../../source/cli/publish.rst:25
msgid ""
"By default npm will publish to the public registry. This can be "
"overridden by specifying a different default registry or using a npm-"
"scope in the name (see package.json)."
msgstr ""

#: ../../source/cli/publish.rst:27
msgid "<folder>: A folder containing a package.json file"
msgstr "<folder>: A folder containing a package.json file"

#: ../../source/cli/publish.rst:29
msgid ""
"<tarball>: A url or file path to a gzipped tar archive containing a "
"single folder with a package.json file inside."
msgstr ""

#: ../../source/cli/publish.rst:31
msgid ""
"[--tag <tag>] Registers the published package with the given tag, such "
"that `npm install @` will install this version. By default, `npm publish`"
" updates and `npm install` installs the `latest` tag. See `npm-dist-tag` "
"for details about tags. [--access <public|restricted>] Tells the registry"
" whether this package should be published as public or restricted. Only "
"applies to scoped packages, which default to restricted. If you don’t "
"have a paid account, you must publish with --access public to publish "
"scoped packages."
msgstr ""

#: ../../source/cli/publish.rst:34
msgid ""
"[--otp <otpcode>] If you have two-factor authentication enabled in auth-"
"and-writes mode then you can provide a code from your authenticator with "
"this. If you don’t include this and you’re running from a TTY then you’ll"
" be prompted."
msgstr ""

#: ../../source/cli/publish.rst:36
msgid ""
"[--dry-run] As of npm@6, does everything publish would do except actually"
" publishing to the registry. Reports the details of what would have been "
"published. Fails if the package name and version combination already "
"exists in the specified registry."
msgstr ""

#: ../../source/cli/publish.rst:39
msgid ""
"Once a package is published with a given name and version, that specific "
"name and version combination can never be used again, even if it is "
"removed with npm-unpublish."
msgstr ""

#: ../../source/cli/publish.rst:41
msgid ""
"As of npm@5, both a sha1sum and an integrity field with a sha512sum of "
"the tarball will be submitted to the registry during publication. "
"Subsequent installs will use the strongest supported algorithm to verify "
"downloads."
msgstr ""

#: ../../source/cli/publish.rst:43
msgid ""
"Similar to --dry-run see npm-pack, which figures out the files to be "
"included and packs them into a tarball to be uploaded to the registry."
msgstr ""

#: ../../source/cli/publish.rst:52 ../../source/cli/unpublish.rst:43
#, fuzzy
msgid ":option:`npm deprecate`"
msgstr "npm-config"

#: ../../source/cli/publish.rst:55
#, fuzzy
msgid ":option:`npm profile`"
msgstr "npm-config"

#: ../../source/cli/rebuild.rst:2
#, fuzzy
msgid "npm rebuild"
msgstr "npm-rebuild"

#: ../../source/cli/rebuild.rst:11
#, fuzzy
msgid "Rebuild a package"
msgstr "rebuild Rebuild a package"

#: ../../source/cli/rebuild.rst:19
#, fuzzy
msgid "rebuild alias"
msgstr "rebuild Rebuild a package"

#: ../../source/cli/rebuild.rst:24
msgid ""
"This command runs the npm build command on the matched folders. This is "
"useful when you install a new version of node, and must recompile all "
"your C++ addons with the new binary."
msgstr ""

#: ../../source/cli/repo.rst:2
#, fuzzy
msgid "npm repo"
msgstr "npm-repo"

#: ../../source/cli/repo.rst:12
#, fuzzy
msgid "Open package repository page in the browser"
msgstr "repo Open package repository page in the browser"

#: ../../source/cli/repo.rst:21
msgid ""
"This command tries to guess at the likely location of a package’s "
"repository URL, and then tries to open it using the --browser config "
"param. If no package name is provided, it will search for a package.json "
"in the current folder and use the name property."
msgstr ""

#: ../../source/cli/repo.rst:26
msgid ""
"browser Default: OS X: \"open\", Windows: \"start\", Others: \"xdg-open\""
" Type: String The browser that is called by the npm repo command to open "
"websites."
msgstr ""

#: ../../source/cli/restart.rst:2
#, fuzzy
msgid "npm restart"
msgstr "npm-restart"

#: ../../source/cli/restart.rst:12
#, fuzzy
msgid "Restart a package"
msgstr "restart Restart a package"

#: ../../source/cli/restart.rst:21
#, fuzzy
msgid "This restarts a package."
msgstr "restart Restart a package"

#: ../../source/cli/restart.rst:23
msgid ""
"This runs a package’s “stop”, “restart”, and “start” scripts, and "
"associated pre- and post- scripts, in the order given below:"
msgstr ""

#: ../../source/cli/restart.rst:25
msgid ""
"prerestart prestop stop poststop restart prestart start poststart "
"postrestart"
msgstr ""

#: ../../source/cli/restart.rst:36
msgid "NOTE"
msgstr "NOTE"

#: ../../source/cli/restart.rst:38
msgid ""
"Note that the “restart” script is run in addition to the “stop” and "
"“start” scripts, not instead of them."
msgstr ""

#: ../../source/cli/restart.rst:40
msgid ""
"This is the behavior as of npm major version 2. A change in this behavior"
" will be accompanied by an increase in major version number"
msgstr ""

#: ../../source/cli/restart.rst:45 ../../source/cli/scripts.rst:176
#: ../../source/cli/shrinkwrap.rst:31 ../../source/cli/start.rst:27
#: ../../source/cli/stop.rst:25 ../../source/cli/test.rst:33
#: ../../source/cli/version.rst:91
#, fuzzy
msgid ":option:`npm run-script`"
msgstr "ping Ping npm registry"

#: ../../source/cli/restart.rst:48 ../../source/cli/run-script.rst:67
#: ../../source/cli/stop.rst:28 ../../source/cli/test.rst:35
#, fuzzy
msgid ":option:`npm start`"
msgstr "ping Ping npm registry"

#: ../../source/cli/restart.rst:49 ../../source/cli/run-script.rst:69
#: ../../source/cli/start.rst:31 ../../source/cli/test.rst:37
#, fuzzy
msgid ":option:`npm stop`"
msgstr "npm-config"

#: ../../source/cli/restart.rst:50 ../../source/cli/run-script.rst:68
#: ../../source/cli/start.rst:30 ../../source/cli/stop.rst:29
#: ../../source/cli/test.rst:36
#, fuzzy
msgid ":option:`npm restart`"
msgstr "ping Ping npm registry"

#: ../../source/cli/root.rst:2
#, fuzzy
msgid "npm root"
msgstr "npm-root"

#: ../../source/cli/root.rst:11
#, fuzzy
msgid "Display npm root"
msgstr "root Display npm root"

#: ../../source/cli/root.rst:20
msgid "Print the effective node_modules folder to standard out."
msgstr "Print the effective node_modules folder to standard out."

#: ../../source/cli/run-script.rst:2
#, fuzzy
msgid "npm run-script"
msgstr "npm-run-script"

#: ../../source/cli/run-script.rst:11
#, fuzzy
msgid "Run arbitrary package scripts"
msgstr "run-script Run arbitrary package scripts"

#: ../../source/cli/run-script.rst:19
#, fuzzy
msgid "npm run-script alias"
msgstr "npm-run-script"

#: ../../source/cli/run-script.rst:24
msgid ""
"This runs an arbitrary command from a package’s \"scripts\" object. If no"
" \"command\" is provided, it will list the available scripts. "
"run[-script] is used by the test, start, restart, and stop commands, but "
"can be called directly, as well. When the scripts in the package are "
"printed out, they’re separated into lifecycle (test, start, restart) and "
"directly-run scripts."
msgstr ""

#: ../../source/cli/run-script.rst:26
msgid ""
"As of npm@2.0.0, you can use custom arguments when executing scripts. The"
" special option -- is used by getopt to delimit the end of the options. "
"npm will pass all the arguments after the -- directly to your script:"
msgstr ""

#: ../../source/cli/run-script.rst:32
msgid ""
"The arguments will only be passed to the script specified after npm run "
"and not to any pre or post script."
msgstr ""

#: ../../source/cli/run-script.rst:34
msgid ""
"The env script is a special built-in command that can be used to list "
"environment variables that will be available to the script at runtime. If"
" an “env” command is defined in your package, it will take precedence "
"over the built-in."
msgstr ""

#: ../../source/cli/run-script.rst:36
msgid ""
"In addition to the shell’s pre-existing PATH, npm run adds "
"node_modules/.bin to the PATH provided to scripts. Any binaries provided "
"by locally-installed dependencies can be used without the "
"node_modules/.bin prefix. For example, if there is a devDependency on tap"
" in your package, you should write:"
msgstr ""

#: ../../source/cli/run-script.rst:42
msgid "instead of"
msgstr ""

#: ../../source/cli/run-script.rst:48
msgid "to run your tests."
msgstr ""

#: ../../source/cli/run-script.rst:50
msgid ""
"The actual shell your script is run within is platform dependent. By "
"default, on Unix-like systems it is the /bin/sh command, on Windows it is"
" the cmd.exe. The actual shell referred to by /bin/sh also depends on the"
" system. As of npm@5.1.0 you can customize the shell with the script-"
"shell configuration."
msgstr ""

#: ../../source/cli/run-script.rst:52
msgid ""
"Scripts are run from the root of the module, regardless of what your "
"current working directory is when you call npm run. If you want your "
"script to use different behavior based on what subdirectory you’re in, "
"you can use the INIT_CWD environment variable, which holds the full path "
"you were in when you ran npm run."
msgstr ""

#: ../../source/cli/run-script.rst:54
msgid ""
"npm run sets the NODE environment variable to the node executable with "
"which npm is executed. Also, if the --scripts-prepend-node-path is "
"passed, the directory within which node resides is added to the PATH. If "
"--scripts-prepend-node-path=auto is passed (which has been the default in"
" npm v3), this is only performed when that node executable is not found "
"in the PATH."
msgstr ""

#: ../../source/cli/run-script.rst:56
msgid ""
"If you try to run a script without having a node_modules directory and it"
" fails, you will be given a warning to run npm install, just in case "
"you’ve forgotten."
msgstr ""

#: ../../source/cli/run-script.rst:58
msgid "You can use the --silent flag to prevent showing npm ERR! output on error."
msgstr "You can use the --silent flag to prevent showing npm ERR! output on error."

#: ../../source/cli/run-script.rst:60
msgid ""
"You can use the --if-present flag to avoid exiting with a non-zero exit "
"code when the script is undefined. This lets you run potentially "
"undefined scripts without breaking the execution chain."
msgstr ""

#: ../../source/cli/run-script.rst:65 ../../source/cli/test.rst:34
#, fuzzy
msgid ":ref:`npm-scripts`"
msgstr "npm-run-script"

#: ../../source/cli/scripts.rst:4
#, fuzzy
msgid "npm scripts"
msgstr "npm-run-script"

#: ../../source/cli/scripts.rst:6
#, fuzzy
msgid "How npm handles the \"scripts\" field"
msgstr ":doc:`../misc/scripts` npm如何处理 \"scripts\" 字段"

#: ../../source/cli/scripts.rst:9
msgid "DESCRIPTION§"
msgstr ""

#: ../../source/cli/scripts.rst:11
msgid ""
"npm supports the “scripts” property of the package.json file, for the "
"following scripts:"
msgstr ""

#: ../../source/cli/scripts.rst:13
msgid ""
"prepublish: Run BEFORE the package is packed and published, as well as on"
" local npm install without any arguments. (See below) prepare: Run both "
"BEFORE the package is packed and published, on local npm install without "
"any arguments, and when installing git dependencies (See below). This is "
"run AFTER prepublish, but BEFORE prepublishOnly. prepublishOnly: Run "
"BEFORE the package is prepared and packed, ONLY on npm publish. (See "
"below.) prepack: run BEFORE a tarball is packed (on npm pack, npm "
"publish, and when installing git dependencies) postpack: Run AFTER the "
"tarball has been generated and moved to its final destination. publish, "
"postpublish: Run AFTER the package is published. preinstall: Run BEFORE "
"the package is installed install, postinstall: Run AFTER the package is "
"installed. preuninstall, uninstall: Run BEFORE the package is "
"uninstalled. postuninstall: Run AFTER the package is uninstalled. "
"preversion: Run BEFORE bumping the package version. version: Run AFTER "
"bumping the package version, but BEFORE commit. postversion: Run AFTER "
"bumping the package version, and AFTER commit. pretest, test, posttest: "
"Run by the npm test command. prestop, stop, poststop: Run by the npm stop"
" command. prestart, start, poststart: Run by the npm start command. "
"prerestart, restart, postrestart: Run by the npm restart command. .. note:: "
"npm restart will run the stop and start scripts if no restart script is "
"provided. preshrinkwrap, shrinkwrap, postshrinkwrap: Run by the npm "
"shrinkwrap command. Additionally, arbitrary scripts can be executed by "
"running npm run-script <stage>. Pre and post commands with matching names"
" will be run for those as well (e.g. premyscript, myscript, "
"postmyscript). Scripts from dependencies can be run with npm explore "
"<pkg> -- npm run <stage>."
msgstr ""

#: ../../source/cli/scripts.rst:34
#, fuzzy
msgid "PREPUBLISH AND PREPARE"
msgstr "publish Publish a package"

#: ../../source/cli/scripts.rst:37
#, fuzzy
msgid "DEPRECATION NOTE"
msgstr "npm-deprecate"

#: ../../source/cli/scripts.rst:39
msgid ""
"Since npm@1.1.71, the npm CLI has run the prepublish script for both npm "
"publish and npm install, because it’s a convenient way to prepare a "
"package for use (some common use cases are described in the section "
"below). It has also turned out to be, in practice, very confusing. As of "
"npm@4.0.0, a new event has been introduced, prepare, that preserves this "
"existing behavior. A new event, prepublishOnly has been added as a "
"transitional strategy to allow users to avoid the confusing behavior of "
"existing npm versions and only run on npm publish (for instance, running "
"the tests one last time to ensure they’re in good shape)."
msgstr ""

#: ../../source/cli/scripts.rst:41
msgid ""
"See https://github.com/npm/npm/issues/10074 for a much lengthier "
"justification, with further reading, for this change."
msgstr ""

#: ../../source/cli/scripts.rst:44
msgid "USE CASES"
msgstr ""

#: ../../source/cli/scripts.rst:46
msgid ""
"If you need to perform operations on your package before it is used, in a"
" way that is not dependent on the operating system or architecture of the"
" target system, use a prepublish script. This includes tasks such as:"
msgstr ""

#: ../../source/cli/scripts.rst:48
msgid ""
"Compiling CoffeeScript source code into JavaScript. Creating minified "
"versions of JavaScript source code. Fetching remote resources that your "
"package will use. The advantage of doing these things at prepublish time "
"is that they can be done once, in a single place, thus reducing "
"complexity and variability. Additionally, this means that:"
msgstr ""

#: ../../source/cli/scripts.rst:53
msgid ""
"You can depend on coffee-script as a devDependency, and thus your users "
"don’t need to have it installed. You don’t need to include minifiers in "
"your package, reducing the size for your users. You don’t need to rely on"
" your users having curl or wget or other system tools on the target "
"machines."
msgstr ""

#: ../../source/cli/scripts.rst:58
#, fuzzy
msgid "DEFAULT VALUES"
msgstr "默认: false"

#: ../../source/cli/scripts.rst:60
msgid "npm will default some script values based on package contents."
msgstr ""

#: ../../source/cli/scripts.rst:62
msgid "\"start\": \"node server.js\":"
msgstr ""

#: ../../source/cli/scripts.rst:64
msgid ""
"If there is a server.js file in the root of your package, then npm will "
"default the start command to node server.js."
msgstr ""

#: ../../source/cli/scripts.rst:66
msgid "\"install\": \"node-gyp rebuild\":"
msgstr ""

#: ../../source/cli/scripts.rst:68
msgid ""
"If there is a binding.gyp file in the root of your package and you "
"haven’t defined your own install or preinstall scripts, npm will default "
"the install command to compile using node-gyp."
msgstr ""

#: ../../source/cli/scripts.rst:71
msgid "USER"
msgstr ""

#: ../../source/cli/scripts.rst:73
msgid ""
"If npm was invoked with root privileges, then it will change the uid to "
"the user account or uid specified by the user config, which defaults to "
"nobody. Set the unsafe-perm flag to run scripts with root privileges."
msgstr ""

#: ../../source/cli/scripts.rst:76
#, fuzzy
msgid "ENVIRONMENT"
msgstr "doctor Check your environments"

#: ../../source/cli/scripts.rst:78
msgid ""
"Package scripts run in an environment where many pieces of information "
"are made available regarding the setup of npm and the current state of "
"the process."
msgstr ""

#: ../../source/cli/scripts.rst:81
msgid "path"
msgstr ""

#: ../../source/cli/scripts.rst:83
msgid ""
"If you depend on modules that define executable scripts, like test "
"suites, then those executables will be added to the PATH for executing "
"the scripts. So, if your package.json has this:"
msgstr ""

#: ../../source/cli/scripts.rst:85
msgid ""
"{ \"name\" : \"foo\" , \"dependencies\" : { \"bar\" : \"0.1.x\" } , "
"\"scripts\": { \"start\" : \"bar ./test\" } } then you could run npm "
"start to execute the bar script, which is exported into the "
"node_modules/.bin directory on npm install."
msgstr ""

#: ../../source/cli/scripts.rst:91
#, fuzzy
msgid "package.json vars"
msgstr "uninstall 删除包"

#: ../../source/cli/scripts.rst:93
msgid ""
"The package.json fields are tacked onto the npm_package_ prefix. So, for "
"instance, if you had {\"name\":\"foo\", \"version\":\"1.2.5\"} in your "
"package.json file, then your package scripts would have the "
"npm_package_name environment variable set to “foo”, and the "
"npm_package_version set to “1.2.5”. You can access these variables in "
"your code with process.env.npm_package_name and "
"process.env.npm_package_version, and so on for other fields."
msgstr ""

#: ../../source/cli/scripts.rst:96
#, fuzzy
msgid "configuration"
msgstr "配置 npm"

#: ../../source/cli/scripts.rst:98
msgid ""
"Configuration parameters are put in the environment with the npm_config_ "
"prefix. For instance, you can view the effective root config by checking "
"the npm_config_root environment variable."
msgstr ""

#: ../../source/cli/scripts.rst:100
msgid ""
"Special: package.json “config” object "
"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`"
msgstr ""

#: ../../source/cli/scripts.rst:103
msgid ""
"The package.json “config” keys are overwritten in the environment if "
"there is a config param of <name>[@<version>]:<key>. For example, if the "
"package.json has this:"
msgstr ""

#: ../../source/cli/scripts.rst:105
msgid ""
"{ \"name\" : \"foo\" , \"config\" : { \"port\" : \"8080\" } , \"scripts\""
" : { \"start\" : \"node server.js\" } } and the server.js is this:"
msgstr ""

#: ../../source/cli/scripts.rst:110
msgid ""
"http.createServer(...).listen(process.env.npm_package_config_port) then "
"the user could change the behavior by doing:"
msgstr ""

#: ../../source/cli/scripts.rst:113
msgid "npm config set foo:port 80"
msgstr ""

#: ../../source/cli/scripts.rst:116
msgid "current lifecycle event"
msgstr ""

#: ../../source/cli/scripts.rst:118
msgid ""
"Lastly, the npm_lifecycle_event environment variable is set to whichever "
"stage of the cycle is being executed. So, you could have a single script "
"used for different parts of the process which switches based on what’s "
"currently happening."
msgstr ""

#: ../../source/cli/scripts.rst:120
msgid ""
"Objects are flattened following this format, so if you had "
"{\"scripts\":{\"install\":\"foo.js\"}} in your package.json, then you’d "
"see this in the script:"
msgstr ""

#: ../../source/cli/scripts.rst:122
msgid "process.env.npm_package_scripts_install === \"foo.js\""
msgstr ""

#: ../../source/cli/scripts.rst:127
#, fuzzy
msgid "For example, if your package.json contains this:"
msgstr "However, if app’s package.json contains:"

#: ../../source/cli/scripts.rst:132 ../../source/cli/scripts.rst:142
#, fuzzy
msgid "{ \"scripts\" :"
msgstr "\"scripts\": {"

#: ../../source/cli/scripts.rst:130
msgid ""
"{ \"install\" : \"scripts/install.js\" , \"postinstall\" : "
"\"scripts/install.js\" , \"uninstall\" : \"scripts/uninstall.js\" }"
msgstr ""

#: ../../source/cli/scripts.rst:134
msgid ""
"} then scripts/install.js will be called for the install and post-install"
" stages of the lifecycle, and scripts/uninstall.js will be called when "
"the package is uninstalled. Since scripts/install.js is running for two "
"different phases, it would be wise in this case to look at the "
"npm_lifecycle_event environment variable."
msgstr ""

#: ../../source/cli/scripts.rst:137
msgid "If you want to run a make command, you can do so. This works just fine:"
msgstr ""

#: ../../source/cli/scripts.rst:140
msgid ""
"{ \"preinstall\" : \"./configure\" , \"install\" : \"make && make "
"install\" , \"test\" : \"make test\" }"
msgstr ""

#: ../../source/cli/scripts.rst:144
msgid "}"
msgstr ""

#: ../../source/cli/scripts.rst:147
msgid "EXITING"
msgstr ""

#: ../../source/cli/scripts.rst:149
msgid "Scripts are run by passing the line as a script argument to sh."
msgstr ""

#: ../../source/cli/scripts.rst:151
msgid ""
"If the script exits with a code other than 0, then this will abort the "
"process."
msgstr ""

#: ../../source/cli/scripts.rst:153
msgid ""
"Note that these script files don’t have to be nodejs or even javascript "
"programs. They just have to be some kind of executable file."
msgstr ""

#: ../../source/cli/scripts.rst:156
#, fuzzy
msgid "HOOK SCRIPTS"
msgstr "npm-run-script"

#: ../../source/cli/scripts.rst:158
msgid ""
"If you want to run a specific script at a specific lifecycle event for "
"ALL packages, then you can use a hook script."
msgstr ""

#: ../../source/cli/scripts.rst:160
msgid ""
"Place an executable file at node_modules/.hooks/{eventname}, and it’ll "
"get run for all packages when they are going through that point in the "
"package lifecycle for any packages installed in that root."
msgstr ""

#: ../../source/cli/scripts.rst:162
msgid ""
"Hook scripts are run exactly the same way as package.json scripts. That "
"is, they are in a separate child process, with the env described above."
msgstr ""

#: ../../source/cli/scripts.rst:165
msgid "BEST PRACTICES"
msgstr ""

#: ../../source/cli/scripts.rst:167
msgid ""
"Don’t exit with a non-zero error code unless you really mean it. Except "
"for uninstall scripts, this will cause the npm action to fail, and "
"potentially be rolled back. If the failure is minor or only will prevent "
"some optional features, then it’s better to just print a warning and exit"
" successfully. Try not to use scripts to do what npm can do for you. Read"
" through package.json to see all the things that you can specify and "
"enable by simply describing your package appropriately. In general, this "
"will lead to a more robust and consistent state. Inspect the env to "
"determine where to put things. For instance, if the npm_config_binroot "
"environment variable is set to /home/user/bin, then don’t try to install "
"executables into /usr/local/bin. The user probably set it up that way for"
" a reason. Don’t prefix your script commands with “sudo”. If root "
"permissions are required for some reason, then it’ll fail with that "
"error, and the user will sudo the npm command in question. Don’t use "
"install. Use a .gyp file for compilation, and prepublish for anything "
"else. You should almost never have to explicitly set a preinstall or "
"install script. If you are doing this, please consider if there is "
"another option. The only valid use of install or preinstall scripts is "
"for compilation which must be done on the target architecture."
msgstr ""

#: ../../source/cli/scripts.rst:178
#, fuzzy
msgid ":doc:`../misc/developers`"
msgstr ":doc:`../misc/developers` 开发者指南"

#: ../../source/cli/search.rst:2
#, fuzzy
msgid "npm search"
msgstr "npm-search"

#: ../../source/cli/search.rst:11
#, fuzzy
msgid "Search for packages"
msgstr "search Search for packages"

#: ../../source/cli/search.rst:19 ../../source/cli/search.rst:23
#: ../../source/cli/search.rst:27
msgid "search alias"
msgstr ""

#: ../../source/cli/search.rst:32
msgid ""
"Search the registry for packages matching the search terms. npm search "
"performs a linear, incremental, lexically-ordered search through package "
"metadata for all files in the registry. If color is enabled, it will "
"further highlight the matches in the results."
msgstr ""

#: ../../source/cli/search.rst:34
msgid ""
"Additionally, using the --searchopts and --searchexclude options paired "
"with more search terms will respectively include and exclude further "
"patterns. The main difference between --searchopts and the standard "
"search terms is that the former does not highlight results in the output "
"and can be used for more fine-grained filtering. Additionally, both of "
"these can be added to .npmrc for default search filtering behavior."
msgstr ""

#: ../../source/cli/search.rst:36
msgid ""
"Search also allows targeting of maintainers in search results, by "
"prefixing their npm username with =."
msgstr ""

#: ../../source/cli/search.rst:38
msgid ""
"If a term starts with /, then it’s interpreted as a regular expression "
"and supports standard JavaScript RegExp syntax. A trailing / will be "
"ignored in this case. (Note that many regular expression characters must "
"be escaped or quoted in most shells.)"
msgstr ""

#: ../../source/cli/search.rst:40
msgid "A Note on caching"
msgstr "A Note on caching"

#: ../../source/cli/search.rst:45
msgid ""
"description Default: true Type: Boolean Used as --no-description, "
"disables search matching in package descriptions and suppresses display "
"of that field in results."
msgstr ""

#: ../../source/cli/search.rst:50
msgid "json Default: false Type: Boolean Output search results as a JSON array."
msgstr "json Default: false Type: Boolean Output search results as a JSON array."

#: ../../source/cli/search.rst:55
msgid ""
"parseable Default: false Type: Boolean Output search results as lines "
"with tab-separated columns."
msgstr ""

#: ../../source/cli/search.rst:60
msgid ""
"long Default: false Type: Boolean Display full package descriptions and "
"other long text across multiple lines. When disabled (default) search "
"results are truncated to fit neatly on a single line. Modules with "
"extremely long names will fall on multiple lines."
msgstr ""

#: ../../source/cli/search.rst:65
msgid ""
"searchopts Default: “” Type: String Space-separated options that are "
"always passed to search."
msgstr ""

#: ../../source/cli/search.rst:70
msgid ""
"searchexclude Default: “” Type: String Space-separated options that limit"
" the results from search."
msgstr ""

#: ../../source/cli/search.rst:75
msgid ""
"searchstaleness Default: 900 (15 minutes) Type: Number The age of the "
"cache, in seconds, before another registry request is made."
msgstr ""

#: ../../source/cli/search.rst:80
msgid ""
"registry Default: https://registry.npmjs.org/ Type: url Search the "
"specified registry for modules. If you have configured npm to point to a "
"different default registry, such as your internal private module "
"repository, npm search will default to that registry when searching. Pass"
" a different registry url such as the default above in order to override "
"this setting."
msgstr ""

#: ../../source/cli/shrinkwrap.rst:2
#, fuzzy
msgid "npm shrinkwrap"
msgstr "npm-shrinkwrap"

#: ../../source/cli/shrinkwrap.rst:12
msgid "Lock down dependency versions for publication"
msgstr "锁定发布的依赖版本"

#: ../../source/cli/shrinkwrap.rst:21
msgid ""
"This command repurposes :ref:`package-lock.json` into a publishable "
":ref:`shrinkwrap.json` or simply creates a new one."
msgstr ""
"这个命令将 :ref:`package-lock.json` 重新用于 publishable :ref:`shrinkwrap.json` "
"或者只是创建一个新的。"

#: ../../source/cli/shrinkwrap.rst:23
msgid ""
"The file created and updated by this command will then take precedence "
"over any other existing or future :ref:`package-lock.json` files."
msgstr "此命令创建和更新的文件将优先于任何其他现有或未来 :ref:`package-lock.json` 文件。"

#: ../../source/cli/shrinkwrap.rst:25
msgid ""
"For a detailed explanation of the design and purpose of package locks in "
"npm, see :ref:`package-locks`."
msgstr "有关npm中包锁的设计和目的的详细说明，请参阅 :ref:`package-locks` 。"

#: ../../source/cli/shrinkwrap.rst:34
msgid ":ref:`package-locks`"
msgstr ""

#: ../../source/cli/shrinkwrap.rst:35
msgid ":ref:`package-lock.json`"
msgstr ""

#: ../../source/cli/shrinkwrap.rst:36
msgid ":ref:`shrinkwrap.json`"
msgstr ""

#: ../../source/cli/star.rst:2
#, fuzzy
msgid "npm star"
msgstr "npm-star"

#: ../../source/cli/star.rst:11
msgid "Mark your favorite packages"
msgstr "标记您喜欢的包"

#: ../../source/cli/star.rst:21
msgid ""
"“Starring” a package means that you have some interest in it. It’s a "
"vaguely positive way to show that you care."
msgstr ""
"“Starring” a package means that you have some interest in it. It’s a "
"vaguely positive way to show that you care."

#: ../../source/cli/star.rst:23
msgid "“Unstarring” is the same thing, but in reverse."
msgstr "“Unstarring” is the same thing, but in reverse."

#: ../../source/cli/star.rst:25
msgid "It’s a boolean thing. Starring repeatedly has no additional effect."
msgstr "It’s a boolean thing. Starring repeatedly has no additional effect."

#: ../../source/cli/stars.rst:2
#, fuzzy
msgid "npm stars"
msgstr "npm-stars"

#: ../../source/cli/stars.rst:11
#, fuzzy
msgid "View packages marked as favorites"
msgstr "stars View packages marked as favorites"

#: ../../source/cli/stars.rst:20
msgid ""
"If you have starred a lot of neat things and want to find them again "
"quickly this command lets you do just that."
msgstr ""

#: ../../source/cli/stars.rst:22
msgid ""
"You may also want to see your friend’s favorite packages, in this case "
"you will most certainly enjoy this command."
msgstr ""

#: ../../source/cli/stars.rst:27
#, fuzzy
msgid ":option:`npm star`"
msgstr "ping Ping npm registry"

#: ../../source/cli/start.rst:2
#, fuzzy
msgid "npm start"
msgstr "npm-start"

#: ../../source/cli/start.rst:11
#, fuzzy
msgid "Start a package"
msgstr "start Start a package"

#: ../../source/cli/start.rst:20
msgid ""
"This runs an arbitrary command specified in the package’s \"start\" "
"property of its \"scripts\" object. If no \"start\" property is specified"
" on the \"scripts\" object, it will run node server.js."
msgstr ""

#: ../../source/cli/start.rst:22
msgid ""
"As of npm@2.0.0, you can use custom arguments when executing scripts. "
"Refer to npm-run-script for more details."
msgstr ""

#: ../../source/cli/stop.rst:2
#, fuzzy
msgid "npm stop"
msgstr "npm-stop"

#: ../../source/cli/stop.rst:11
#, fuzzy
msgid "Stop a package"
msgstr "stop Stop a package"

#: ../../source/cli/stop.rst:20
msgid "This runs a package’s “stop” script, if one was provided."
msgstr "This runs a package’s “stop” script, if one was provided."

#: ../../source/cli/team.rst:2
#, fuzzy
msgid "npm team"
msgstr "npm-team"

#: ../../source/cli/team.rst:11
#, fuzzy
msgid "Manage organization teams and team memberships"
msgstr "team Manage organization teams and team memberships"

#: ../../source/cli/team.rst:28
msgid ""
"Used to manage teams in organizations, and change team memberships. Does "
"not handle permissions for packages."
msgstr ""

#: ../../source/cli/team.rst:30
msgid ""
"Teams must always be fully qualified with the organization/scope they "
"belong to when operating on them, separated by a colon (:). That is, if "
"you have a developers team on a foo organization, you must always refer "
"to that team as foo:developers in these commands."
msgstr ""

#: ../../source/cli/team.rst:32
msgid "create / destroy: Create a new team, or destroy an existing one."
msgstr "create / destroy: Create a new team, or destroy an existing one."

#: ../../source/cli/team.rst:34
msgid ""
"add / rm: Add a user to an existing team, or remove a user from a team "
"they belong to."
msgstr ""

#: ../../source/cli/team.rst:36
msgid ""
"ls: If performed on an organization name, will return a list of existing "
"teams under that organization. If performed on a team, it will instead "
"return a list of all users belonging to that particular team."
msgstr ""

#: ../../source/cli/team.rst:38
msgid "edit: Edit a current team."
msgstr "edit: Edit a current team."

#: ../../source/cli/team.rst:43
msgid ""
"npm team always operates directly on the current registry, configurable "
"from the command line using --registry=<registry url>."
msgstr ""

#: ../../source/cli/team.rst:45
msgid ""
"In order to create teams and manage team membership, you must be a team "
"admin under the given organization. Listing teams and team memberships "
"may be done by any member of the organizations."
msgstr ""

#: ../../source/cli/team.rst:47
msgid ""
"Organization creation and management of team admins and organization "
"members is done through the website, not the npm CLI."
msgstr ""

#: ../../source/cli/team.rst:49
msgid ""
"To use teams to manage permissions on packages belonging to your "
"organization, use the npm access command to grant or revoke the "
"appropriate permissions."
msgstr ""

#: ../../source/cli/team.rst:54
#, fuzzy
msgid ":option:`npm access`"
msgstr "npm-config"

#: ../../source/cli/test.rst:2
#, fuzzy
msgid "npm test"
msgstr "npm-test"

#: ../../source/cli/test.rst:11
#, fuzzy
msgid "Test a package"
msgstr "test Test a package"

#: ../../source/cli/test.rst:19 ../../source/cli/test.rst:23
msgid "test alias"
msgstr ""

#: ../../source/cli/test.rst:28
msgid "This runs a package’s “test” script, if one was provided."
msgstr "This runs a package’s “test” script, if one was provided."

#: ../../source/cli/token.rst:2
#, fuzzy
msgid "npm token"
msgstr "npm-token"

#: ../../source/cli/token.rst:12
#, fuzzy
msgid "Manage your authentication tokens"
msgstr "token Manage your authentication tokens"

#: ../../source/cli/token.rst:23
msgid "This lets you list, create and revoke authentication tokens."
msgstr "This lets you list, create and revoke authentication tokens."

#: ../../source/cli/token.rst:25
msgid ""
"npm token list: Shows a table of all active authentication tokens. You "
"can request this as JSON with --json or tab-separated values with "
"--parseable."
msgstr ""

#: ../../source/cli/token.rst:45
msgid ""
"npm token create [--read-only] [--cidr=<cidr-ranges>]: Create a new "
"authentication token. It can be --read-only or accept a list of CIDR "
"ranges to limit use of this token to. This will prompt you for your "
"password, and, if you have two-factor authentication enabled, an otp."
msgstr ""

#: ../../source/cli/token.rst:48
#, fuzzy
msgid "token"
msgstr "npm-token"

#: ../../source/cli/token.rst:48
msgid "a73c9572-f1b9-8983-983d-ba3ac3cc913d"
msgstr ""

#: ../../source/cli/token.rst:50
msgid "cidr_whitelist"
msgstr ""

#: ../../source/cli/token.rst:52
msgid "readonly"
msgstr ""

#: ../../source/cli/token.rst:54
msgid "created"
msgstr ""

#: ../../source/cli/token.rst:54
msgid "2017-10-02T07:52:24.838Z"
msgstr ""

#: ../../source/cli/token.rst:57
msgid ""
"npm token revoke <token|id>: This removes an authentication token, making"
" it immediately unusable. This can accept both complete tokens (as you "
"get back from npm token create and will find in your .npmrc) and ids as "
"seen in the npm token list output. This will NOT accept the truncated "
"token found in npm token list output."
msgstr ""

#: ../../source/cli/uninstall.rst:2
#, fuzzy
msgid "npm uninstall"
msgstr "npm-uninstall"

#: ../../source/cli/uninstall.rst:11
#, fuzzy
msgid "Remove a package"
msgstr "uninstall Remove a package"

#: ../../source/cli/uninstall.rst:19 ../../source/cli/uninstall.rst:23
#: ../../source/cli/uninstall.rst:27 ../../source/cli/uninstall.rst:31
#: ../../source/cli/uninstall.rst:35
#, fuzzy
msgid "uninstall alias"
msgstr "npm install sax"

#: ../../source/cli/uninstall.rst:40
msgid ""
"This uninstalls a package, completely removing everything npm installed "
"on its behalf."
msgstr ""

#: ../../source/cli/uninstall.rst:42
msgid "Example:"
msgstr "Example:"

#: ../../source/cli/uninstall.rst:44
msgid ""
"npm uninstall sax In global mode (ie, with -g or --global appended to the"
" command), it uninstalls the current package context as a global package."
msgstr ""

#: ../../source/cli/uninstall.rst:47
msgid ""
"npm uninstall takes 3 exclusive, optional flags which save or update the "
"package version in your main package.json:"
msgstr ""

#: ../../source/cli/uninstall.rst:49
msgid "-S, --save: Package will be removed from your dependencies."
msgstr "-S, --save: Package will be removed from your dependencies."

#: ../../source/cli/uninstall.rst:51
msgid "-D, --save-dev: Package will be removed from your devDependencies."
msgstr "-D, --save-dev: Package will be removed from your devDependencies."

#: ../../source/cli/uninstall.rst:53
msgid ""
"-O, --save-optional: Package will be removed from your "
"optionalDependencies."
msgstr ""

#: ../../source/cli/uninstall.rst:55
msgid "--no-save: Package will not be removed from your package.json file."
msgstr "--no-save: Package will not be removed from your package.json file."

#: ../../source/cli/uninstall.rst:57
msgid ""
"Further, if you have an npm-shrinkwrap.json then it will be updated as "
"well."
msgstr ""

#: ../../source/cli/uninstall.rst:59
msgid "Scope is optional and follows the usual rules for npm-scope."
msgstr "Scope is optional and follows the usual rules for npm-scope."

#: ../../source/cli/uninstall.rst:61
msgid "Examples:"
msgstr "Examples:"

#: ../../source/cli/uninstall.rst:63
msgid ""
"npm uninstall sax --save npm uninstall @myorg/privatepackage --save npm "
"uninstall node-tap --save-dev npm uninstall dtrace-provider --save-"
"optional npm uninstall lodash --no-save"
msgstr ""

#: ../../source/cli/unpublish.rst:2
#, fuzzy
msgid "npm unpublish"
msgstr "npm-unpublish"

#: ../../source/cli/unpublish.rst:12
#, fuzzy
msgid "Remove a package from the registry"
msgstr "unpublish Remove a package from the registry"

#: ../../source/cli/unpublish.rst:19
msgid "WARNING"
msgstr "WARNING"

#: ../../source/cli/unpublish.rst:21
msgid ""
"It is generally considered bad behavior to remove versions of a library "
"that others are depending on!"
msgstr ""

#: ../../source/cli/unpublish.rst:23
msgid ""
"Consider using the deprecate command instead, if your intent is to "
"encourage users to upgrade."
msgstr ""

#: ../../source/cli/unpublish.rst:25
msgid "There is plenty of room on the registry."
msgstr "There is plenty of room on the registry."

#: ../../source/cli/unpublish.rst:30
msgid ""
"This removes a package version from the registry, deleting its entry and "
"removing the tarball."
msgstr ""

#: ../../source/cli/unpublish.rst:32
msgid ""
"If no version is specified, or if all versions are removed then the root "
"package entry is removed from the registry entirely."
msgstr ""

#: ../../source/cli/unpublish.rst:34
msgid ""
"Even if a package version is unpublished, that specific name and version "
"combination can never be reused. In order to publish the package again, a"
" new version number must be used. Additionally, new versions of packages "
"with every version unpublished may not be republished until 24 hours have"
" passed."
msgstr ""

#: ../../source/cli/unpublish.rst:36
msgid ""
"With the default registry (registry.npmjs.org), unpublish is only allowed"
" with versions published in the last 72 hours. If you are trying to "
"unpublish a version published longer ago than that, contact "
"support@npmjs.com."
msgstr ""

#: ../../source/cli/unpublish.rst:38
msgid "The scope is optional and follows the usual rules for npm-scope."
msgstr "The scope is optional and follows the usual rules for npm-scope."

#: ../../source/cli/update.rst:2
#, fuzzy
msgid "npm update"
msgstr "npm-update"

#: ../../source/cli/update.rst:12
#, fuzzy
msgid "Update a package"
msgstr "update Update a package"

#: ../../source/cli/update.rst:20 ../../source/cli/update.rst:24
msgid "update alias"
msgstr ""

#: ../../source/cli/update.rst:29
msgid ""
"This command will update all the packages listed to the latest version "
"(specified by the tag config), respecting semver."
msgstr ""

#: ../../source/cli/update.rst:31
msgid ""
"It will also install missing packages. As with all commands that install "
"packages, the --dev flag will cause devDependencies to be processed as "
"well."
msgstr ""

#: ../../source/cli/update.rst:33
msgid ""
"If the -g flag is specified, this command will update globally installed "
"packages."
msgstr ""

#: ../../source/cli/update.rst:35
msgid ""
"If no package name is specified, all packages in the specified location "
"(global or local) will be updated."
msgstr ""

#: ../../source/cli/update.rst:37
msgid ""
"As of npm@2.6.1, the npm update will only inspect top-level packages. "
"Prior versions of npm would also recursively inspect all dependencies. To"
" get the old behavior, use npm --depth 9999 update."
msgstr ""

#: ../../source/cli/update.rst:39
msgid ""
"As of npm@5.0.0, the npm update will change package.json to save the new "
"version as the minimum required dependency. To get the old behavior, use "
"npm update --no-save."
msgstr ""

#: ../../source/cli/update.rst:44
msgid ""
"IMPORTANT VERSION NOTE: these examples assume npm@2.6.1 or later. For "
"older versions of npm, you must specify --depth 0 to get the behavior "
"described below."
msgstr ""

#: ../../source/cli/update.rst:46
msgid ""
"For the examples below, assume that the current package is app and it "
"depends on dependencies, dep1 (dep2, .. etc.). The published versions of "
"dep1 are:"
msgstr ""

#: ../../source/cli/update.rst:66
msgid "Caret Dependencies"
msgstr "Caret Dependencies"

#: ../../source/cli/update.rst:68
msgid "If app’s package.json contains:"
msgstr "If app’s package.json contains:"

#: ../../source/cli/update.rst:70 ../../source/cli/update.rst:80
#: ../../source/cli/update.rst:88 ../../source/cli/update.rst:95
msgid "\"dependencies\": {"
msgstr "\"dependencies\": {"

#: ../../source/cli/update.rst:71
msgid "\"dep1\": \"^1.1.1\""
msgstr "\"dep1\": \"^1.1.1\""

#: ../../source/cli/update.rst:72
msgid ""
"} Then npm update will install dep1@1.2.2, because 1.2.2 is latest and "
"1.2.2 satisfies ^1.1.1."
msgstr ""

#: ../../source/cli/update.rst:76
msgid "Tilde Dependencies"
msgstr "Tilde Dependencies"

#: ../../source/cli/update.rst:78
msgid "However, if app’s package.json contains:"
msgstr "However, if app’s package.json contains:"

#: ../../source/cli/update.rst:81
msgid "\"dep1\": \"~1.1.1\""
msgstr "\"dep1\": \"~1.1.1\""

#: ../../source/cli/update.rst:82
msgid ""
"} In this case, running npm update will install dep1@1.1.2. Even though "
"the latest tag points to 1.2.2, this version does not satisfy ~1.1.1, "
"which is equivalent to >=1.1.1 <1.2.0. So the highest-sorting version "
"that satisfies ~1.1.1 is used, which is 1.1.2."
msgstr ""

#: ../../source/cli/update.rst:85
msgid ""
"Caret Dependencies below 1.0.0 Suppose app has a caret dependency on a "
"version below 1.0.0, for example:"
msgstr ""

#: ../../source/cli/update.rst:89
msgid "\"dep1\": \"^0.2.0\""
msgstr "\"dep1\": \"^0.2.0\""

#: ../../source/cli/update.rst:90
msgid ""
"} npm update will install dep1@0.2.0, because there are no other versions"
" which satisfy ^0.2.0."
msgstr ""

#: ../../source/cli/update.rst:93
msgid "If the dependence were on ^0.4.0:"
msgstr "If the dependence were on ^0.4.0:"

#: ../../source/cli/update.rst:96
msgid "\"dep1\": \"^0.4.0\""
msgstr "\"dep1\": \"^0.4.0\""

#: ../../source/cli/update.rst:97
msgid ""
"} Then npm update will install dep1@0.4.1, because that is the highest-"
"sorting version that satisfies ^0.4.0 (>= 0.4.0 <0.5.0)"
msgstr ""

#: ../../source/cli/update.rst:101
#, fuzzy
msgid "Updating Globally-Installed Packages"
msgstr "edit Edit an installed package"

#: ../../source/cli/update.rst:103
msgid ""
"npm update -g will apply the update action to each globally installed "
"package that is outdated – that is, has a version that is different from "
"latest."
msgstr ""

#: ../../source/cli/update.rst:105
msgid ""
"NOTE: If a package has been upgraded to a version newer than latest, it "
"will be downgraded."
msgstr ""

#: ../../source/cli/version.rst:2
#, fuzzy
msgid "npm version"
msgstr "npm-version"

#: ../../source/cli/version.rst:11
#, fuzzy
msgid "Bump a package version"
msgstr "version Bump a package version"

#: ../../source/cli/version.rst:24
msgid ""
"Run this in a package directory to bump the version and write the new "
"data back to package.json, package-lock.json, and, if present, npm-"
"shrinkwrap.json."
msgstr ""

#: ../../source/cli/version.rst:26
msgid ""
"The newversion argument should be a valid semver string, a valid second "
"argument to semver.inc (one of patch, minor, major, prepatch, preminor, "
"premajor, prerelease), or from-git. In the second case, the existing "
"version will be incremented by 1 in the specified field. from-git will "
"try to read the latest git tag, and use that as the new npm version."
msgstr ""

#: ../../source/cli/version.rst:28
msgid ""
"If run in a git repo, it will also create a version commit and tag. This "
"behavior is controlled by git-tag-version (see below), and can be "
"disabled on the command line by running npm --no-git-tag-version version."
" It will fail if the working directory is not clean, unless the -f or "
"--force flag is set."
msgstr ""

#: ../../source/cli/version.rst:30
#, python-format
msgid ""
"If supplied with -m or --message config option, npm will use it as a "
"commit message when creating a version commit. If the message config "
"contains %s then that will be replaced with the resulting version number."
" For example:"
msgstr ""

#: ../../source/cli/version.rst:32
#, python-format
msgid ""
"npm version patch -m \"Upgrade to %s for reasons\" If the sign-git-tag "
"config is set, then the tag will be signed using the -s flag to git. Note"
" that you must have a default GPG key set up in your git config for this "
"to work properly. For example:"
msgstr ""

#: ../../source/cli/version.rst:35
msgid "$ npm config set sign-git-tag true $ npm version patch"
msgstr "$ npm config set sign-git-tag true $ npm version patch"

#: ../../source/cli/version.rst:38
msgid ""
"You need a passphrase to unlock the secret key for user: \"isaacs "
"(http://blog.izs.me/) <i@izs.me>\" 2048-bit RSA key, ID 6C481CF6, created"
" 2010-08-31"
msgstr ""

#: ../../source/cli/version.rst:42
msgid ""
"Enter passphrase: If preversion, version, or postversion are in the "
"scripts property of the package.json, they will be executed as part of "
"running npm version."
msgstr ""

#: ../../source/cli/version.rst:45
msgid "The exact order of execution is as follows:"
msgstr "The exact order of execution is as follows:"

#: ../../source/cli/version.rst:47
msgid ""
"Check to make sure the git working directory is clean before we get "
"started. Your scripts may add files to the commit in future steps. This "
"step is skipped if the --force flag is set. Run the preversion script. "
"These scripts have access to the old version in package.json. A typical "
"use would be running your full test suite before deploying. Any files you"
" want added to the commit should be explicitly added using git add. Bump "
"version in package.json as requested (patch, minor, major, etc). Run the "
"version script. These scripts have access to the new version in "
"package.json (so they can incorporate it into file headers in generated "
"files for example). Again, scripts should explicitly add generated files "
"to the commit using git add. Commit and tag. Run the postversion script. "
"Use it to clean up the file system or automatically push the commit "
"and/or tag. Take the following example:"
msgstr ""

#: ../../source/cli/version.rst:57
msgid "\"scripts\": {"
msgstr "\"scripts\": {"

#: ../../source/cli/version.rst:56
msgid ""
"\"preversion\": \"npm test\", \"version\": \"npm run build && git add -A "
"dist\", \"postversion\": \"git push && git push --tags && rm -rf "
"build/temp\""
msgstr ""

#: ../../source/cli/version.rst:59
msgid ""
"} This runs all your tests, and proceeds only if they pass. Then runs "
"your build script, and adds everything in the dist directory to the "
"commit. After the commit, it pushes the new commit and tag up to the "
"server, and deletes the build/temp directory."
msgstr ""

#: ../../source/cli/version.rst:65
msgid ""
"allow-same-version Default: false Type: Boolean Prevents throwing an "
"error when npm version is used to set the new version to the same value "
"as the current version."
msgstr ""

#: ../../source/cli/version.rst:70
msgid ""
"git-tag-version Default: true Type: Boolean Commit and tag the version "
"change."
msgstr ""

#: ../../source/cli/version.rst:75
msgid ""
"commit-hooks Default: true Type: Boolean Run git commit hooks when "
"committing the version change."
msgstr ""

#: ../../source/cli/version.rst:80
msgid ""
"sign-git-tag Default: false Type: Boolean Pass the -s flag to git to sign"
" the tag."
msgstr ""

#: ../../source/cli/version.rst:85
msgid ""
"Note that you must have a default GPG key set up in your git config for "
"this to work properly."
msgstr ""

#: ../../source/cli/version.rst:90
#, fuzzy
msgid ":option:`npm init`"
msgstr "ping Ping npm registry"

#: ../../source/cli/version.rst:94
msgid ":ref:`semver`"
msgstr ""

#: ../../source/cli/view.rst:2
#, fuzzy
msgid "npm view"
msgstr "npm-view"

#: ../../source/cli/view.rst:11
#, fuzzy
msgid "View registry info"
msgstr "view View registry info"

#: ../../source/cli/view.rst:19 ../../source/cli/view.rst:23
#: ../../source/cli/view.rst:27
msgid "view alias"
msgstr ""

#: ../../source/cli/view.rst:32
msgid ""
"This command shows data about a package and prints it to the stream "
"referenced by the outfd config, which defaults to stdout."
msgstr ""

#: ../../source/cli/view.rst:34
msgid ""
"To show the package registry entry for the connect package, you can do "
"this:"
msgstr ""

#: ../../source/cli/view.rst:36
msgid "npm view connect The default version is “latest” if unspecified."
msgstr "npm view connect The default version is “latest” if unspecified."

#: ../../source/cli/view.rst:39
msgid ""
"Field names can be specified after the package descriptor. For example, "
"to show the dependencies of the ronn package at version 0.3.5, you could "
"do the following:"
msgstr ""

#: ../../source/cli/view.rst:41
msgid ""
"npm view ronn@0.3.5 dependencies You can view child fields by separating "
"them with a period. To view the git repository URL for the latest version"
" of npm, you could do this:"
msgstr ""

#: ../../source/cli/view.rst:44
msgid ""
"npm view npm repository.url This makes it easy to view information about "
"a dependency with a bit of shell scripting. For example, to view all the "
"data about the version of opts that ronn depends on, you can do this:"
msgstr ""

#: ../../source/cli/view.rst:47
msgid ""
"npm view opts@$(npm view ronn dependencies.opts) For fields that are "
"arrays, requesting a non-numeric field will return all of the values from"
" the objects in the list. For example, to get all the contributor names "
"for the “express” project, you can do this:"
msgstr ""

#: ../../source/cli/view.rst:50
msgid ""
"npm view express contributors.email You may also use numeric indices in "
"square braces to specifically select an item in an array field. To just "
"get the email address of the first contributor in the list, you can do "
"this:"
msgstr ""

#: ../../source/cli/view.rst:53
msgid ""
"npm view express contributors[0].email Multiple fields may be specified, "
"and will be printed one after another. For example, to get all the "
"contributor names and email addresses, you can do this:"
msgstr ""

#: ../../source/cli/view.rst:56
msgid ""
"npm view express contributors.name contributors.email “Person” fields are"
" shown as a string if they would be shown as an object. So, for example, "
"this will show the list of npm contributors in the shortened string "
"format. (See package.json for more on this.)"
msgstr ""

#: ../../source/cli/view.rst:59
msgid ""
"npm view npm contributors If a version range is provided, then data will "
"be printed for every matching version of the package. This will show "
"which version of jsdom was required by each matching version of yui3:"
msgstr ""

#: ../../source/cli/view.rst:62
msgid ""
"npm view yui3@'>0.5.4' dependencies.jsdom To show the connect package "
"version history, you can do this:"
msgstr ""

#: ../../source/cli/view.rst:65
msgid "npm view connect versions"
msgstr "npm view connect versions"

#: ../../source/cli/view.rst:68
msgid "OUTPUT"
msgstr "OUTPUT"

#: ../../source/cli/view.rst:70
msgid ""
"If only a single string field for a single version is output, then it "
"will not be colorized or quoted, so as to enable piping the output to "
"another command. If the field is an object, it will be output as a "
"JavaScript object literal."
msgstr ""

#: ../../source/cli/view.rst:72
msgid "If the –json flag is given, the outputted fields will be JSON."
msgstr "If the –json flag is given, the outputted fields will be JSON."

#: ../../source/cli/view.rst:74
msgid ""
"If the version range matches multiple versions, than each printed value "
"will be prefixed with the version it applies to."
msgstr ""

#: ../../source/cli/view.rst:76
msgid ""
"If multiple fields are requested, than each of them are prefixed with the"
" field name."
msgstr ""

#: ../../source/cli/view.rst:81
#, fuzzy
msgid ":option:`npm search`"
msgstr "npm-config"

#: ../../source/cli/whoami.rst:2
#, fuzzy
msgid "npm whoami"
msgstr "npm-whoami"

#: ../../source/cli/whoami.rst:12
#, fuzzy
msgid "Display npm username"
msgstr "whoami Display npm username"

#: ../../source/cli/whoami.rst:21
msgid "Print the username config to standard output."
msgstr "Print the username config to standard output."

#~ msgid "bundle REMOVED"
#~ msgstr "bundle REMOVED"

#~ msgid ""
#~ "npm audit [--json|--parseable] npm audit "
#~ "fix [--force|--package-lock-only|--dry-"
#~ "run|--production|--only=dev]"
#~ msgstr ""

#~ msgid ""
#~ "$ npm audit fix Run audit fix "
#~ "without modifying node_modules, but still "
#~ "updating the pkglock:"
#~ msgstr ""

#~ msgid "$ npm audit fix --package-lock-only Skip updating devDependencies:"
#~ msgstr "$ npm audit fix --package-lock-only Skip updating devDependencies:"

#~ msgid ""
#~ "$ npm audit fix --only=prod Have "
#~ "audit fix install semver-major updates"
#~ " to toplevel dependencies, not just "
#~ "semver-compatible ones:"
#~ msgstr ""

#~ msgid ""
#~ "$ npm audit fix --force Do a "
#~ "dry run to get an idea of "
#~ "what audit fix will do, and also"
#~ " output install information in JSON "
#~ "format:"
#~ msgstr ""

#~ msgid ""
#~ "$ npm audit fix --dry-run --json"
#~ " Scan your project for vulnerabilities "
#~ "and just show the details, without "
#~ "fixing anything:"
#~ msgstr ""

#~ msgid ""
#~ "$ npm audit --json Get the "
#~ "detailed audit report in plain text "
#~ "result, separated by tab characters, "
#~ "allowing for future reuse in scripting"
#~ " or command line post processing, "
#~ "like for example, selecting some of "
#~ "the columns printed:"
#~ msgstr ""

#~ msgid ""
#~ "$ npm audit --parseable To parse "
#~ "columns, you can use for example "
#~ "awk, and just print some of them:"
#~ msgstr ""

#~ msgid "$ npm audit --parseable | awk -F $'\\t' '{print $1,$4}'"
#~ msgstr "$ npm audit --parseable | awk -F $'\\t' '{print $1,$4}'"

#~ msgid ""
#~ "You can also have npm automatically "
#~ "fix the vulnerabilities by running npm"
#~ " audit fix. Note that some "
#~ "vulnerabilities cannot be fixed automatically"
#~ " and will require manual intervention "
#~ "or review. Also note that since "
#~ "npm audit fix runs a full-fledged"
#~ " npm install under the hood, all "
#~ "configs that apply to the installer "
#~ "will also apply to npm install –"
#~ " so things like npm audit fix "
#~ "--package-lock-only will work as "
#~ "expected."
#~ msgstr ""

#~ msgid ""
#~ "npm_version node_version platform node_env A"
#~ " scrubbed version of your package-"
#~ "lock.json or npm-shrinkwrap.json"
#~ msgstr ""

#~ msgid ""
#~ "Any module referencing a scope that "
#~ "is configured for a non-default "
#~ "registry has its name scrubbed. (That"
#~ " is, a scope you did a npm "
#~ "login --scope=@ourscope for.) All git "
#~ "dependencies have their names and "
#~ "specifiers scrubbed. All remote tarball "
#~ "dependencies have their names and "
#~ "specifiers scrubbed. All local directory "
#~ "and tarball dependencies have their "
#~ "names and specifiers scrubbed. The "
#~ "non-reversible identifiers are a sha256 "
#~ "of a session-specific UUID and the"
#~ " value being replaced, ensuring a "
#~ "consistent value within the payload that"
#~ " is different between runs."
#~ msgstr ""

#~ msgid ""
#~ "The npm audit command will exit "
#~ "with a 0 exit code if no "
#~ "vulnerabilities were found."
#~ msgstr ""

#~ msgid ""
#~ "If vulnerabilities were found the exit"
#~ " code will depend on the audit-"
#~ "level configuration setting."
#~ msgstr ""

#~ msgid "npm-install package-locks config"
#~ msgstr "npm-install package-locks config"

#~ msgid "npm bin [-g|--global]"
#~ msgstr "npm bin [-g|--global]"

#~ msgid "npm-prefix npm-root npm-folders npm-config npm-config npmrc"
#~ msgstr "npm-prefix npm-root npm-folders npm-config npm-config npmrc"

#~ msgid "npm bugs [<pkgname>]"
#~ msgstr "npm bugs [<pkgname>]"

#~ msgid ""
#~ "Default: https://registry.npmjs.org/ Type: url "
#~ "The base URL of the npm package"
#~ " registry."
#~ msgstr ""

#~ msgid ""
#~ "npm-docs npm-view npm-publish "
#~ "npm-registry npm-config npm-config "
#~ "npmrc package.json"
#~ msgstr ""

#~ msgid ""
#~ "npm build [<package-folder>] <package-"
#~ "folder>: A folder containing a "
#~ "package.json file in its root."
#~ msgstr ""

#~ msgid "npm run-script build"
#~ msgstr "npm run-script build"

#~ msgid "npm-install npm-link npm-scripts package.json"
#~ msgstr "npm-install npm-link npm-scripts package.json"

#~ msgid ""
#~ "npm cache add <tarball file> npm "
#~ "cache add <folder> npm cache add "
#~ "<tarball url> npm cache add "
#~ "<name>@<version>"
#~ msgstr ""

#~ msgid "npm cache verify"
#~ msgstr "npm cache verify"

#~ msgid ""
#~ "add: Add the specified package to "
#~ "the local cache. This command is "
#~ "primarily intended to be used internally"
#~ " by npm, but it can provide a"
#~ " way to add data to the local"
#~ " installation cache explicitly."
#~ msgstr ""

#~ msgid ""
#~ "verify: Verify the contents of the "
#~ "cache folder, garbage collecting any "
#~ "unneeded data, and verifying the "
#~ "integrity of the cache index and "
#~ "all cached data."
#~ msgstr ""

#~ msgid ""
#~ "A NOTE ABOUT THE CACHE’S DESIGN "
#~ "The npm cache is strictly a cache:"
#~ " it should not be relied upon "
#~ "as a persistent and reliable data "
#~ "store for package data. npm makes "
#~ "no guarantee that a previously-cached"
#~ " piece of data will be available "
#~ "later, and will automatically delete "
#~ "corrupted contents. The primary guarantee "
#~ "that the cache makes is that, if"
#~ " it does return data, that data "
#~ "will be exactly the data that was"
#~ " inserted."
#~ msgstr ""

#~ msgid ""
#~ "npm-folders npm-config npm-config "
#~ "npmrc npm-install npm-publish npm-"
#~ "pack https://npm.im/cacache https://npm.im/pacote"
#~ msgstr ""

#~ msgid "npm ci"
#~ msgstr "npm ci"

#~ msgid ""
#~ "$ cd ./my/npm/project $ npm install "
#~ "added 154 packages in 10s $ ls "
#~ "| grep package-lock Run npm ci "
#~ "in that project"
#~ msgstr ""

#~ msgid ""
#~ "$ npm ci added 154 packages in "
#~ "5s Configure Travis to build using "
#~ "npm ci instead of npm install:"
#~ msgstr ""

#~ msgid ""
#~ "# .travis.yml install: - npm ci #"
#~ " keep the npm cache around to "
#~ "speed up installs cache:"
#~ msgstr ""

#~ msgid "directories: - \"$HOME/.npm\""
#~ msgstr "directories: - \"$HOME/.npm\""

#~ msgid ""
#~ "This command is similar to npm-"
#~ "install, except it’s meant to be "
#~ "used in automated environments such as"
#~ " test platforms, continuous integration, "
#~ "and deployment – or any situation "
#~ "where you want to make sure you’re"
#~ " doing a clean install of your "
#~ "dependencies. It can be significantly "
#~ "faster than a regular npm install "
#~ "by skipping certain user-oriented "
#~ "features. It is also more strict "
#~ "than a regular install, which can "
#~ "help catch errors or inconsistencies "
#~ "caused by the incrementally-installed "
#~ "local environments of most npm users."
#~ msgstr ""

#~ msgid ""
#~ "The project must have an existing "
#~ "package-lock.json or npm-shrinkwrap.json. "
#~ "If dependencies in the package lock "
#~ "do not match those in package.json, "
#~ "npm ci will exit with an error,"
#~ " instead of updating the package "
#~ "lock. npm ci can only install "
#~ "entire projects at a time: individual"
#~ " dependencies cannot be added with "
#~ "this command. If a node_modules is "
#~ "already present, it will be "
#~ "automatically removed before npm ci "
#~ "begins its install. It will never "
#~ "write to package.json or any of "
#~ "the package-locks: installs are "
#~ "essentially frozen."
#~ msgstr ""

#~ msgid "npm-install npm-package-locks"
#~ msgstr "uninstall删除包"

#~ msgid "source <(npm completion)"
#~ msgstr "source <(npm completion)"

#~ msgid ""
#~ "The synopsis above loads the completions"
#~ " into your current shell. Adding it"
#~ " to your ~/.bashrc or ~/.zshrc will"
#~ " make the completions available everywhere:"
#~ msgstr ""

#~ msgid ""
#~ "npm completion >> ~/.bashrc npm "
#~ "completion >> ~/.zshrc You may of "
#~ "course also pipe the output of npm"
#~ " completion to a file such as "
#~ "/usr/local/etc/bash_completion.d/npm or "
#~ "/etc/bash_completion.d/npm if you have a "
#~ "system that will read that file "
#~ "for you."
#~ msgstr ""

#~ msgid ""
#~ "When COMP_CWORD, COMP_LINE, and COMP_POINT "
#~ "are defined in the environment, npm "
#~ "completion acts in “plumbing mode”, and"
#~ " outputs completions based on the "
#~ "arguments."
#~ msgstr ""

#~ msgid ""
#~ "npm config set <key> <value> "
#~ "[-g|--global] npm config get <key> npm"
#~ " config delete <key> npm config list"
#~ " [-l] [--json] npm config edit npm"
#~ " get <key> npm set <key> <value> "
#~ "[-g|--global]"
#~ msgstr ""

#~ msgid "aliases: c"
#~ msgstr "aliases: c"

#~ msgid ""
#~ "npm gets its config settings from "
#~ "the command line, environment variables, "
#~ "npmrc files, and in some cases, "
#~ "the package.json file."
#~ msgstr ""

#~ msgid ""
#~ "The npm config command can be used"
#~ " to update and edit the contents "
#~ "of the user and global npmrc "
#~ "files."
#~ msgstr ""

#~ msgid ""
#~ "list npm config list Show all the"
#~ " config settings. Use -l to also "
#~ "show defaults. Use --json to show "
#~ "the settings in json format."
#~ msgstr ""

#~ msgid ""
#~ "edit npm config edit Opens the "
#~ "config file in an editor. Use the"
#~ " --global flag to edit the global "
#~ "config."
#~ msgstr ""

#~ msgid "npm-folders npm-config package.json npmrc npm"
#~ msgstr "npm-folders npm-config package.json npmrc npm"

#~ msgid "npm dedupe npm ddp"
#~ msgstr "npm dedupe npm ddp"

#~ msgid "npm-ls npm-update npm-install"
#~ msgstr "npm-ls npm-update npm-install"

#~ msgid "npm deprecate <pkg>[@<version>] <message>"
#~ msgstr "npm deprecate <pkg>[@<version>] <message>"

#~ msgid "npm-publish npm-registry"
#~ msgstr "ping Ping npm registry"

#~ msgid ""
#~ "npm dist-tag add <pkg>@<version> [<tag>]"
#~ " npm dist-tag rm <pkg> <tag> "
#~ "npm dist-tag ls [<pkg>]"
#~ msgstr ""

#~ msgid ""
#~ "npm-publish npm-install npm-dedupe "
#~ "npm-registry npm-config npm-config "
#~ "npmrc"
#~ msgstr ""

#~ msgid ""
#~ "npm docs [<pkgname> [<pkgname> ...]] npm"
#~ " docs . npm home [<pkgname> "
#~ "[<pkgname> ...]] npm home ."
#~ msgstr ""

#~ msgid ""
#~ "npm-view npm-publish npm-registry "
#~ "npm-config npm-config npmrc package.json"
#~ msgstr ""
#~ "npm-view npm-publish npm-registry "
#~ "npm-config npm-config npmrc package.json"

#~ msgid "npm doctor"
#~ msgstr "npm doctor"

#~ msgid "npm-bugs npm-help npm-ping"
#~ msgstr "npm-bugs npm-help npm-ping"

#~ msgid "npm edit <pkg>[/<subpkg>...]"
#~ msgstr "npm edit <pkg>[/<subpkg>...]"

#~ msgid "npm-folders npm-explore npm-install npm-config npm-config npmrc"
#~ msgstr "npm-folders npm-explore npm-install npm-config npm-config npmrc"

#~ msgid "npm explore <pkg> [ -- <command>]"
#~ msgstr "npm explore <pkg> [ -- <command>]"

#~ msgid "npm-folders npm-edit npm-rebuild npm-build npm-install"
#~ msgstr "npm-folders npm-edit npm-rebuild npm-build npm-install"

#~ msgid "npm help <term> [<terms..>]"
#~ msgstr "npm help <term> [<terms..>]"

#~ msgid ""
#~ "npm README npm-folders npm-config "
#~ "npm-config npmrc package.json npm-help-"
#~ "search npm-index"
#~ msgstr ""

#~ msgid "npm help-search <text>"
#~ msgstr "npm help-search <text>"

#~ msgid "npm npm-help"
#~ msgstr "npm npm-help"

#~ msgid ""
#~ "npm hook ls [pkg] npm hook add "
#~ "<entity> <url> <secret> npm hook update"
#~ " <id> <url> [secret] npm hook rm "
#~ "<id>"
#~ msgstr ""

#~ msgid ""
#~ "npm init [--force|-f|--yes|-y|--scope] npm "
#~ "init <@scope> (same as `npx "
#~ "<@scope>/create`) npm init [<@scope>/]<name> "
#~ "(same as `npx [<@scope>/]create-<name>`)"
#~ msgstr ""

#~ msgid ""
#~ "https://github.com/isaacs/init-package-json "
#~ "package.json npm-version npm-scope"
#~ msgstr ""

#~ msgid ""
#~ "npm install (with no args, in "
#~ "package dir) npm install [<@scope>/]<name> "
#~ "npm install [<@scope>/]<name>@<tag> npm "
#~ "install [<@scope>/]<name>@<version> npm install "
#~ "[<@scope>/]<name>@<version range> npm install "
#~ "<git-host>:<git-user>/<repo-name> npm "
#~ "install <git repo url> npm install "
#~ "<tarball file> npm install <tarball url>"
#~ " npm install <folder>"
#~ msgstr ""

#~ msgid ""
#~ "aliases: npm i, npm add common "
#~ "options: [-P|--save-prod|-D|--save-dev|-O|--save-"
#~ "optional] [-E|--save-exact] [-B|--save-bundle]"
#~ " [--no-save] [--dry-run]"
#~ msgstr ""

#~ msgid ""
#~ "npm-folders npm-update npm-audit "
#~ "npm-link npm-rebuild npm-scripts "
#~ "npm-build npm-config npm-config npmrc"
#~ " npm-registry npm-dist-tag npm-"
#~ "uninstall npm-shrinkwrap package.json"
#~ msgstr ""

#~ msgid "npm install-ci-test"
#~ msgstr "npm install-ci-test"

#~ msgid "npm-ci npm-test"
#~ msgstr "npm-ci npm-test"

#~ msgid ""
#~ "npm install-test (with no args, in"
#~ " package dir) npm install-test "
#~ "[<@scope>/]<name> npm install-test "
#~ "[<@scope>/]<name>@<tag> npm install-test "
#~ "[<@scope>/]<name>@<version> npm install-test "
#~ "[<@scope>/]<name>@<version range> npm install-"
#~ "test <tarball file> npm install-test "
#~ "<tarball url> npm install-test <folder>"
#~ msgstr ""

#~ msgid ""
#~ "alias: npm it common options: [--save"
#~ "|--save-dev|--save-optional] [--save-exact] "
#~ "[--dry-run]"
#~ msgstr ""

#~ msgid "npm-install npm-test"
#~ msgstr "npm-install npm-test"

#~ msgid "npm link (in package dir) npm link [<@scope>/]<pkg>[@<version>]"
#~ msgstr "npm link (in package dir) npm link [<@scope>/]<pkg>[@<version>]"

#~ msgid ""
#~ "npm-developers package.json npm-install "
#~ "npm-folders npm-config npm-config "
#~ "npmrc"
#~ msgstr ""

#~ msgid "npm logout [--registry=<url>] [--scope=<@scope>]"
#~ msgstr "npm logout [--registry=<url>] [--scope=<@scope>]"

#~ msgid "npm-adduser npm-registry npm-config npm-config npmrc npm-whoami"
#~ msgstr "npm-adduser npm-registry npm-config npm-config npmrc npm-whoami"

#~ msgid "npm ls [[<@scope>/]<pkg> ...]"
#~ msgstr "npm ls [[<@scope>/]<pkg> ...]"

#~ msgid ""
#~ "npm-config npm-config npmrc npm-"
#~ "folders npm-install npm-link npm-"
#~ "prune npm-outdated npm-update"
#~ msgstr ""

#~ msgid "javascript package manager"
#~ msgstr "npm javascript package manager"

#~ msgid "npm <command> [args]"
#~ msgstr "npm <command> [args]"

#~ msgid ""
#~ "npm-help README package.json npm-install"
#~ " npm-config npm-config npmrc npm-"
#~ "index"
#~ msgstr ""

#~ msgid ""
#~ "npm org set <orgname> <username> "
#~ "[developer | admin | owner] npm "
#~ "org rm <orgname> <username> npm org "
#~ "ls <orgname> [<username>]"
#~ msgstr ""

#~ msgid "npm outdated [[<@scope>/]<pkg> ...]"
#~ msgstr "npm outdated [[<@scope>/]<pkg> ...]"

#~ msgid "npm-update npm-dist-tag npm-registry npm-folders"
#~ msgstr "npm-update npm-dist-tag npm-registry npm-folders"

#~ msgid ""
#~ "npm owner add <user> [<@scope>/]<pkg> "
#~ "npm owner rm <user> [<@scope>/]<pkg> npm"
#~ " owner ls [<@scope>/]<pkg>"
#~ msgstr ""

#~ msgid "npm-publish npm-registry npm-adduser npm-disputes"
#~ msgstr "npm-publish npm-registry npm-adduser npm-disputes"

#~ msgid "npm pack [[<@scope>/]<pkg>...] [--dry-run]"
#~ msgstr "npm pack [[<@scope>/]<pkg>...] [--dry-run]"

#~ msgid "npm-cache npm-publish npm-config npm-config npmrc"
#~ msgstr "npm-cache npm-publish npm-config npm-config npmrc"

#~ msgid "npm ping [--registry <registry>]"
#~ msgstr "npm ping [--registry <registry>]"

#~ msgid "npm-config npm-config npmrc"
#~ msgstr "npm-config npm-config npmrc"

#~ msgid "npm prefix [-g]"
#~ msgstr "npm prefix [-g]"

#~ msgid "npm-root npm-bin npm-folders npm-config npm-config npmrc"
#~ msgstr "npm-root npm-bin npm-folders npm-config npm-config npmrc"

#~ msgid ""
#~ "npm profile get [--json|--parseable] "
#~ "[<property>] npm profile set "
#~ "[--json|--parseable] <property> <value> npm "
#~ "profile set password npm profile "
#~ "enable-2fa [auth-and-writes|auth-only] "
#~ "npm profile disable-2fa"
#~ msgstr ""

#~ msgid "npm prune [[<@scope>/]<pkg>...] [--production] [--dry-run] [--json]"
#~ msgstr "npm prune [[<@scope>/]<pkg>...] [--production] [--dry-run] [--json]"

#~ msgid "SEE ALSO npm-uninstall npm-folders npm-ls"
#~ msgstr "SEE ALSO npm-uninstall npm-folders npm-ls"

#~ msgid ""
#~ "npm publish [<tarball>|<folder>] [--tag <tag>]"
#~ " [--access <public|restricted>] [--otp otpcode]"
#~ " [--dry-run]"
#~ msgstr ""

#~ msgid ""
#~ "npm-registry npm-scope npm-adduser "
#~ "npm-owner npm-deprecate npm-dist-"
#~ "tag npm-pack npm-profile"
#~ msgstr ""

#~ msgid "npm rebuild [[<@scope>/<name>]...]"
#~ msgstr "npm rebuild [[<@scope>/<name>]...]"

#~ msgid "npm-build npm-install"
#~ msgstr "npm-build npm-install"

#~ msgid "npm repo [<pkg>]"
#~ msgstr "npm repo [<pkg>]"

#~ msgid "npm-docs npm-config"
#~ msgstr "npmrc The npm config files"

#~ msgid "npm restart [-- <args>]"
#~ msgstr "npm restart [-- <args>]"

#~ msgid "npm-run-script npm-scripts npm-test npm-start npm-stop npm-restart"
#~ msgstr "npm-run-script npm-scripts npm-test npm-start npm-stop npm-restart"

#~ msgid "npm root [-g]"
#~ msgstr "npm root [-g]"

#~ msgid "npm-prefix npm-bin npm-folders npm-config npm-config npmrc"
#~ msgstr "npm-prefix npm-bin npm-folders npm-config npm-config npmrc"

#~ msgid "npm run-script <command> [--silent] [-- <args>...]"
#~ msgstr "npm run-script <command> [--silent] [-- <args>...]"

#~ msgid "npm-scripts npm-test npm-start npm-restart npm-stop npm-config"
#~ msgstr "npm-scripts npm-test npm-start npm-restart npm-stop npm-config"

#~ msgid ""
#~ "npm search [-l|--long] [--json] [--parseable]"
#~ " [--no-description] [search terms ...]"
#~ msgstr ""

#~ msgid "npm-registry npm-config npm-config npmrc npm-view"
#~ msgstr "npm-registry npm-config npm-config npmrc npm-view"

#~ msgid "npm shrinkwrap"
#~ msgstr "npm shrinkwrap"

#~ msgid ""
#~ "npm-install npm-run-script npm-"
#~ "scripts package.json npm-package-locks "
#~ "package-lock.json npm-shrinkwrap.json npm-"
#~ "ls"
#~ msgstr ""

#~ msgid "npm star [<pkg>...] npm unstar [<pkg>...]"
#~ msgstr "npm star [<pkg>...] npm unstar [<pkg>...]"

#~ msgid "npm-view npm-whoami npm-adduser"
#~ msgstr "npm-view npm-whoami npm-adduser"

#~ msgid "npm stars [<user>]"
#~ msgstr "npm stars [<user>]"

#~ msgid "npm-star npm-view npm-whoami npm-adduser"
#~ msgstr "npm-star npm-view npm-whoami npm-adduser"

#~ msgid "npm start [-- <args>]"
#~ msgstr "npm start [-- <args>]"

#~ msgid "npm-run-script npm-scripts npm-test npm-restart npm-stop"
#~ msgstr "npm-run-script npm-scripts npm-test npm-restart npm-stop"

#~ msgid "npm stop [-- <args>]"
#~ msgstr "npm stop [-- <args>]"

#~ msgid "npm-run-script npm-scripts npm-test npm-start npm-restart"
#~ msgstr "npm-run-script npm-scripts npm-test npm-start npm-restart"

#~ msgid "npm team create <scope:team> npm team destroy <scope:team>"
#~ msgstr "npm team create <scope:team> npm team destroy <scope:team>"

#~ msgid "npm team add <scope:team> <user> npm team rm <scope:team> <user>"
#~ msgstr "npm team add <scope:team> <user> npm team rm <scope:team> <user>"

#~ msgid "npm team ls <scope>|<scope:team>"
#~ msgstr "npm team ls <scope>|<scope:team>"

#~ msgid "npm team edit <scope:team>"
#~ msgstr "npm team edit <scope:team>"

#~ msgid "npm-access npm-registry"
#~ msgstr "npm-access npm-registry"

#~ msgid "npm test [-- <args>]"
#~ msgstr "npm test [-- <args>]"

#~ msgid "aliases: t, tst"
#~ msgstr "aliases: s, se, find"

#~ msgid "npm-run-script npm-scripts npm-start npm-restart npm-stop"
#~ msgstr "npm-run-script npm-scripts npm-start npm-restart npm-stop"

#~ msgid ""
#~ "npm token list [--json|--parseable] npm "
#~ "token create [--read-only] "
#~ "[--cidr=1.1.1.1/24,2.2.2.2/16] npm token revoke "
#~ "<id|token>"
#~ msgstr ""

#~ msgid ""
#~ "npm token list: Shows a table of"
#~ " all active authentication tokens. You "
#~ "can request this as JSON with "
#~ "--json or tab-separated values with "
#~ "--parseable. "
#~ "+--------+---------+------------+----------+----------------+ |"
#~ " id     | token   | created    | "
#~ "read-only | CIDR whitelist | "
#~ "+--------+---------+------------+----------+----------------+ |"
#~ " 7f3134 | 1fa9ba… | 2017-10-02 | "
#~ "yes      |                | "
#~ "+--------+---------+------------+----------+----------------+ |"
#~ " c03241 | af7aef… | 2017-10-02 | "
#~ "no       | 192.168.0.1/24 | "
#~ "+--------+---------+------------+----------+----------------+ |"
#~ " e0cf92 | 3a436a… | 2017-10-02 | "
#~ "no       |                | "
#~ "+--------+---------+------------+----------+----------------+ |"
#~ " 63eb9d | 74ef35… | 2017-09-28 | "
#~ "no       |                | "
#~ "+--------+---------+------------+----------+----------------+ |"
#~ " 2daaa8 | cbad5f… | 2017-09-26 | "
#~ "no       |                | "
#~ "+--------+---------+------------+----------+----------------+ |"
#~ " 68c2fe | 127e51… | 2017-09-23 | "
#~ "no       |                | "
#~ "+--------+---------+------------+----------+----------------+ |"
#~ " 6334e1 | 1dadd1… | 2017-09-23 | "
#~ "no       |                | "
#~ "+--------+---------+------------+----------+----------------+ "
#~ "npm token create [--read-only] [--cidr"
#~ "=<cidr-ranges>]: Create a new "
#~ "authentication token. It can be "
#~ "--read-only or accept a list of "
#~ "CIDR ranges to limit use of this"
#~ " token to. This will prompt you "
#~ "for your password, and, if you "
#~ "have two-factor authentication enabled, "
#~ "an otp. "
#~ "+----------------+--------------------------------------+ | "
#~ "token          | a73c9572-f1b9-8983-983d-"
#~ "ba3ac3cc913d | "
#~ "+----------------+--------------------------------------+ | "
#~ "cidr_whitelist |                                      |"
#~ " +----------------+--------------------------------------+ |"
#~ " readonly       | false"
#~ "                                | "
#~ "+----------------+--------------------------------------+ | "
#~ "created        | 2017-10-02T07:52:24.838Z             "
#~ "| +----------------+--------------------------------------+ "
#~ "npm token revoke <token|id>: This "
#~ "removes an authentication token, making "
#~ "it immediately unusable. This can accept"
#~ " both complete tokens (as you get "
#~ "back from npm token create and "
#~ "will find in your .npmrc) and ids"
#~ " as seen in the npm token list"
#~ " output. This will NOT accept the "
#~ "truncated token found in npm token "
#~ "list output."
#~ msgstr ""

#~ msgid ""
#~ "npm uninstall [<@scope>/]<pkg>[@<version>]... "
#~ "[-S|--save|-D|--save-dev|-O|--save-optional|--no-"
#~ "save]"
#~ msgstr ""

#~ msgid "npm-prune npm-install npm-folders npm-config npm-config npmrc"
#~ msgstr "npm-prune npm-install npm-folders npm-config npm-config npmrc"

#~ msgid "npm unpublish [<@scope>/]<pkg>[@<version>]"
#~ msgstr "npm unpublish [<@scope>/]<pkg>[@<version>]"

#~ msgid "npm-deprecate npm-publish npm-registry npm-adduser npm-owner"
#~ msgstr "npm-deprecate npm-publish npm-registry npm-adduser npm-owner"

#~ msgid "npm update [-g] [<pkg>...]"
#~ msgstr "npm update [-g] [<pkg>...]"

#~ msgid "\"dist-tags\": { \"latest\": \"1.2.2\" }, \"versions\": ["
#~ msgstr "\"dist-tags\": { \"latest\": \"1.2.2\" }, \"versions\": ["

#~ msgid ""
#~ "\"1.2.2\", \"1.2.1\", \"1.2.0\", \"1.1.2\", "
#~ "\"1.1.1\", \"1.0.0\", \"0.4.1\", \"0.4.0\", "
#~ "\"0.2.0\""
#~ msgstr ""

#~ msgid "]"
#~ msgstr "]"

#~ msgid "}"
#~ msgstr "}"

#~ msgid "npm-install npm-outdated npm-shrinkwrap npm-registry npm-folders npm-ls"
#~ msgstr "npm-install npm-outdated npm-shrinkwrap npm-registry npm-folders npm-ls"

#~ msgid ""
#~ "npm version [<newversion> | major | "
#~ "minor | patch | premajor | "
#~ "preminor | prepatch | prerelease "
#~ "[--preid=<prerelease-id>] | from-git]"
#~ msgstr ""

#~ msgid ""
#~ "'npm [-v | --version]' to print "
#~ "npm version 'npm view <pkg> version' "
#~ "to view a package's published version"
#~ " 'npm ls' to inspect current "
#~ "package/dependency versions"
#~ msgstr ""

#~ msgid "npm-init npm-run-script npm-scripts package.json semver config"
#~ msgstr "npm-init npm-run-script npm-scripts package.json semver config"

#~ msgid "npm view [<@scope>/]<name>[@<version>] [<field>[.<subfield>]...]"
#~ msgstr "npm view [<@scope>/]<name>[@<version>] [<field>[.<subfield>]...]"

#~ msgid "npm-search npm-registry npm-config npm-config npmrc npm-docs"
#~ msgstr "npm-search npm-registry npm-config npm-config npmrc npm-docs"

#~ msgid "npm whoami [--registry <registry>]"
#~ msgstr "npm whoami [--registry <registry>]"

#~ msgid "npm-config npm-config npmrc npm-adduser"
#~ msgstr "npm-config npm-config npmrc npm-adduser"

#~ msgid "libnpmaccess"
#~ msgstr "libnpmaccess"

#~ msgid "npm-registry"
#~ msgstr "ping Ping npm registry"

#~ msgid "npmrc"
#~ msgstr "npmrc"

#~ msgid "package-locks"
#~ msgstr "uninstall 删除包"

#~ msgid "config"
#~ msgstr "npm-config"

#~ msgid "npm-folders"
#~ msgstr "npm-ls"

#~ msgid "README"
#~ msgstr ""

#~ msgid "npm-index"
#~ msgstr "npm-bin"

#~ msgid "npm-scope"
#~ msgstr "npm-stop"

#~ msgid "aliases: npm i, npm add"
#~ msgstr "aliases: up, upgrade"

#~ msgid ""
#~ "common options: [-P|--save-prod|-D|--save-"
#~ "dev|-O|--save-optional] [-E|--save-exact] [-B"
#~ "|--save-bundle] [--no-save] [--dry-run]"
#~ msgstr ""

#~ msgid ""
#~ "This command installs a package, and "
#~ "any packages that it depends on. "
#~ "If the package has a package-lock"
#~ " or shrinkwrap file, the installation "
#~ "of dependencies will be driven by "
#~ "that, with an npm-shrinkwrap.json taking"
#~ " precedence if both files exist. See"
#~ " package-lock.json and npm-shrinkwrap."
#~ msgstr ""

#~ msgid ""
#~ "g) a <git remote url> that "
#~ "resolves to (a) Even if you never"
#~ " publish your package, you can still"
#~ " get a lot of benefits of using"
#~ " npm if you just want to write"
#~ " a node program (a), and perhaps "
#~ "if you also want to be able "
#~ "to easily install it elsewhere after "
#~ "packing it up into a tarball (b)."
#~ msgstr ""

#~ msgid "npm install ./package.tgz"
#~ msgstr "npm install ./package.tgz"

#~ msgid "npm install <tarball url>:"
#~ msgstr "npm install <tarball url>:"

#~ msgid "npm install https://github.com/indexzero/forever/tarball/v0.5.6"
#~ msgstr "npm install https://github.com/indexzero/forever/tarball/v0.5.6"

#~ msgid "npm install [<@scope>/]<name>:"
#~ msgstr "npm install [<@scope>/]<name>:"

#~ msgid ""
#~ "-P, --save-prod: Package will appear "
#~ "in your dependencies. This is the "
#~ "default unless -D or -O are "
#~ "present."
#~ msgstr ""

#~ msgid ""
#~ "-E, --save-exact: Saved dependencies "
#~ "will be configured with an exact "
#~ "version rather than using npm’s default"
#~ " semver range operator."
#~ msgstr ""

#~ msgid ""
#~ "-B, --save-bundle: Saved dependencies "
#~ "will also be added to your "
#~ "bundleDependencies list."
#~ msgstr ""

#~ msgid ""
#~ "npm install sax npm install "
#~ "githubname/reponame npm install "
#~ "@myorg/privatepackage npm install node-tap "
#~ "--save-dev npm install dtrace-provider"
#~ " --save-optional npm install readable-"
#~ "stream --save-exact npm install ansi-"
#~ "regex --save-bundle"
#~ msgstr ""

#~ msgid "npm install sax@latest npm install @myorg/mypackage@latest"
#~ msgstr "npm install sax@latest npm install @myorg/mypackage@latest"

#~ msgid "npm install sax@0.1.1 npm install @myorg/privatepackage@1.5.0"
#~ msgstr "npm install sax@0.1.1 npm install @myorg/privatepackage@1.5.0"

#~ msgid ""
#~ "npm install sax@\">=0.1.0 <0.2.0\" npm "
#~ "install @myorg/privatepackage@\">=0.1.0 <0.2.0\""
#~ msgstr ""

#~ msgid ""
#~ "npm install git+ssh://git@github.com:npm/cli.git#v1.0.27"
#~ " npm install "
#~ "git+ssh://git@github.com:npm/cli#semver:^5.0 npm install"
#~ " git+https://isaacs@github.com/npm/cli.git npm install"
#~ " git://github.com/npm/cli.git#v1.0.27 GIT_SSH_COMMAND='ssh"
#~ " -i ~/.ssh/custom_ident' npm install "
#~ "git+ssh://git@github.com:npm/cli.git"
#~ msgstr ""

#~ msgid ""
#~ "npm install <githubname>/<githubrepo>[#<commit-"
#~ "ish>]: npm install github:<githubname>/<githubrepo"
#~ ">[#<commit-ish>]:"
#~ msgstr ""

#~ msgid ""
#~ "npm install mygithubuser/myproject npm install"
#~ " github:mygithubuser/myproject"
#~ msgstr ""

#~ msgid "npm install gist:101a11beef"
#~ msgstr "npm install gist:101a11beef"

#~ msgid "npm install bitbucket:mybitbucketuser/myproject"
#~ msgstr "npm install bitbucket:mybitbucketuser/myproject"

#~ msgid ""
#~ "npm install gitlab:mygitlabuser/myproject npm "
#~ "install gitlab:myusr/myproj#semver:^5.0"
#~ msgstr ""

#~ msgid ""
#~ "npm install sax@\">=0.1.0 <0.2.0\" bench "
#~ "supervisor The --tag argument will apply"
#~ " to all of the specified install "
#~ "targets. If a tag with the given"
#~ " name exists, the tagged version is"
#~ " preferred over newer versions."
#~ msgstr ""

#~ msgid ""
#~ "Limitations of npm’s Install Algorithm "
#~ "npm will refuse to install any "
#~ "package with an identical name to "
#~ "the current package. This can be "
#~ "overridden with the --force flag, but"
#~ " in most cases can simply be "
#~ "addressed by changing the local package"
#~ " name."
#~ msgstr ""

#~ msgid "npm-developers"
#~ msgstr "npm-developers npm"

#~ msgid "npm-disputes"
#~ msgstr "npm-test"

#~ msgid "alias: npm run"
#~ msgstr "alias: npm run"

#~ msgid ""
#~ "npm run test -- --grep=\"pattern\" The"
#~ " arguments will only be passed to "
#~ "the script specified after npm run "
#~ "and not to any pre or post "
#~ "script."
#~ msgstr ""

#~ msgid "\"scripts\": {\"test\": \"tap test/\\*.js\"} instead of"
#~ msgstr "\"scripts\": {\"test\": \"tap test/\\*.js\"} instead of"

#~ msgid ""
#~ "\"scripts\": {\"test\": \"node_modules/.bin/tap "
#~ "test/\\*.js\"} to run your tests."
#~ msgstr ""

#~ msgid "npm-package-locks"
#~ msgstr "uninstall 删除包"

#~ msgid "package-lock.json"
#~ msgstr "uninstall 删除包"

#~ msgid "semver"
#~ msgstr ""

#~ msgid "aliases: issues"
#~ msgstr "别名: issues"

#~ msgid "aliases: find-dupes, ddp"
#~ msgstr "aliases: find-dupes, ddp"

#~ msgid "aliases: dist-tags"
#~ msgstr "aliases: dist-tags"

#~ msgid "npm install (in package directory, no arguments):"
#~ msgstr "npm install (in package directory, no arguments):"

#~ msgid ""
#~ "NOTE: The --production flag has no "
#~ "particular meaning when adding a "
#~ "dependency to a project."
#~ msgstr ""

#~ msgid "npm install <folder>:"
#~ msgstr "npm install <folder>:"

#~ msgid ""
#~ "Install the package in the directory "
#~ "as a symlink in the current "
#~ "project. Its dependencies will be "
#~ "installed before it’s linked. If "
#~ "<folder> sits inside the root of "
#~ "your project, its dependencies may be"
#~ " hoisted to the toplevel node_modules "
#~ "as they would for other types of"
#~ " dependencies."
#~ msgstr ""

#~ msgid "npm install <tarball file>:"
#~ msgstr "npm install <tarball file>:"

#~ msgid ""
#~ "Install a package that is sitting "
#~ "on the filesystem. .. note:: if you "
#~ "just want to link a dev directory"
#~ " into your npm root, you can do"
#~ " this more easily by using npm "
#~ "link."
#~ msgstr ""

#~ msgid ""
#~ "The filename must use .tar, .tar.gz, "
#~ "or .tgz as the extension. The "
#~ "package contents should reside in a "
#~ "subfolder inside the tarball (usually it"
#~ " is called package/). npm strips one"
#~ " directory layer when installing the "
#~ "package (an equivalent of tar x "
#~ "--strip-components=1 is run). The package"
#~ " must contain a package.json file "
#~ "with name and version properties. "
#~ "Example:"
#~ msgstr ""

#~ msgid ""
#~ ".. note:: if you do not include the"
#~ " @-symbol on your scope name, npm "
#~ "will interpret this as a GitHub "
#~ "repository instead, see below. Scopes "
#~ "names must also be followed by a"
#~ " slash."
#~ msgstr ""

#~ msgid ""
#~ ".. note:: If there is a file or "
#~ "folder named <name> in the current "
#~ "working directory, then it will try "
#~ "to install that, and only try to"
#~ " fetch the package by name if "
#~ "it is not valid."
#~ msgstr ""

#~ msgid "npm install [<@scope>/]<name>@<tag>:"
#~ msgstr "npm install [<@scope>/]<name>@<tag>:"

#~ msgid ""
#~ "Install the version of the package "
#~ "that is referenced by the specified "
#~ "tag. If the tag does not exist "
#~ "in the registry data for that "
#~ "package, then this will fail."
#~ msgstr ""

#~ msgid "npm install [<@scope>/]<name>@<version>:"
#~ msgstr "npm install [<@scope>/]<name>@<version>:"

#~ msgid ""
#~ "Install the specified version of the "
#~ "package. This will fail if the "
#~ "version has not been published to "
#~ "the registry."
#~ msgstr ""

#~ msgid "npm install [<@scope>/]<name>@<version range>:"
#~ msgstr "npm install [<@scope>/]<name>@<version range>:"

#~ msgid ""
#~ "Install a version of the package "
#~ "matching the specified version range. "
#~ "This will follow the same rules "
#~ "for resolving dependencies described in "
#~ "package.json."
#~ msgstr ""

#~ msgid "npm install <git remote url>:"
#~ msgstr "npm install <git remote url>:"

#~ msgid ""
#~ "GIT_ASKPASS GIT_EXEC_PATH GIT_PROXY_COMMAND GIT_SSH"
#~ " GIT_SSH_COMMAND GIT_SSL_CAINFO GIT_SSL_NO_VERIFY "
#~ "See the git man page for details."
#~ msgstr ""

#~ msgid "npm install <githubname>/<githubrepo>[#<commit-ish>]:"
#~ msgstr "npm install gitlab:<gitlabname>/<gitlabrepo>[#<commit-ish>]:"

#~ msgid "npm install github:<githubname>/<githubrepo>[#<commit-ish>]:"
#~ msgstr "npm install gitlab:<gitlabname>/<gitlabrepo>[#<commit-ish>]:"

#~ msgid ""
#~ "npm install gist:[<githubname>/]<gistID>[#<commit-"
#~ "ish>|#semver:<semver>]:"
#~ msgstr ""
#~ "npm install gist:[<githubname>/]<gistID>[#<commit-"
#~ "ish>|#semver:<semver>]:"

#~ msgid "npm install bitbucket:<bitbucketname>/<bitbucketrepo>[#<commit-ish>]:"
#~ msgstr "npm install bitbucket:<bitbucketname>/<bitbucketrepo>[#<commit-ish>]:"

#~ msgid "npm install gitlab:<gitlabname>/<gitlabrepo>[#<commit-ish>]:"
#~ msgstr "npm install gitlab:<gitlabname>/<gitlabrepo>[#<commit-ish>]:"

#~ msgid ""
#~ "npm install sax --force The -g or"
#~ " --global argument will cause npm to"
#~ " install the package globally rather "
#~ "than locally. See npm-folders."
#~ msgstr ""

#~ msgid ""
#~ "See npm-config. Many of the "
#~ "configuration params have some effect on"
#~ " installation, since that’s most of "
#~ "what npm does."
#~ msgstr ""

#~ msgid ""
#~ "load the existing node_modules tree from"
#~ " disk clone the tree fetch the "
#~ "package.json and assorted metadata and "
#~ "add it to the clone walk the "
#~ "clone and add any missing dependencies"
#~ msgstr ""

#~ msgid ""
#~ "dependencies will be added as close "
#~ "to the top as is possible without"
#~ " breaking any other modules"
#~ msgstr ""

#~ msgid ""
#~ "compare the original tree with the "
#~ "cloned tree and make a list of "
#~ "actions to take to convert one to"
#~ " the other execute all of the "
#~ "actions, deepest first"
#~ msgstr ""

#~ msgid "kinds of actions are install, update, remove and move"
#~ msgstr "kinds of actions are install, update, remove and move"

#~ msgid ""
#~ "There are some very rare and "
#~ "pathological edge-cases where a cycle"
#~ " can cause npm to try to "
#~ "install a never-ending tree of "
#~ "packages. Here is the simplest case:"
#~ msgstr ""

#~ msgid ""
#~ "A -> B -> A' -> B' -> "
#~ "A -> B -> A' -> B' -> "
#~ "A -> ... where A is some "
#~ "version of a package, and A' is"
#~ " a different version of the same "
#~ "package. Because B depends on a "
#~ "different version of A than the "
#~ "one that is already in the tree,"
#~ " it must install a separate copy. "
#~ "The same is true of A', which "
#~ "must install B'. Because B' depends "
#~ "on the original version of A, "
#~ "which has been overridden, the cycle "
#~ "falls into infinite regress."
#~ msgstr ""

#~ msgid "alias: npm cit"
#~ msgstr "alias: npm cit"

#~ msgid "alias: npm it"
#~ msgstr "alias: npm cit"

#~ msgid "alias: npm ln"
#~ msgstr "alias: npm ln"

#~ msgid "aliases: list, la, ll"
#~ msgstr "aliases: list, la, ll"

#~ msgid ""
#~ "Positional arguments are name@version-range"
#~ " identifiers, which will limit the "
#~ "results to only the paths to the"
#~ " packages named. Note that nested "
#~ "packages will also show the paths "
#~ "to the specified packages. For example,"
#~ " running npm ls promzard in npm’s "
#~ "source tree will show:"
#~ msgstr ""

#~ msgid "npm@@VERSION@ /path/to/npm └─┬ init-package-json@0.0.4"
#~ msgstr "npm@@VERSION@ /path/to/npm └─┬ init-package-json@0.0.4"

#~ msgid "└── promzard@0.1.5"
#~ msgstr "└── promzard@0.1.5"

#~ msgid "json Default: false Type: Boolean Show information in JSON format."
#~ msgstr "json Default: false Type: Boolean Show information in JSON format."

#~ msgid ""
#~ "global Default: false Type: Boolean List"
#~ " packages in the global install "
#~ "prefix instead of in the current "
#~ "project."
#~ msgstr ""

#~ msgid ""
#~ "prod / production Type: Boolean Default:"
#~ " false Display only the dependency "
#~ "tree for packages in dependencies."
#~ msgstr ""

#~ msgid ""
#~ "dev / development Type: Boolean Default:"
#~ " false Display only the dependency "
#~ "tree for packages in devDependencies."
#~ msgstr ""

#~ msgid ""
#~ "link Type: Boolean Default: false "
#~ "Display only dependencies which are "
#~ "linked"
#~ msgstr ""

#~ msgid "aliases: author"
#~ msgstr "aliases: author"

#~ msgid ""
#~ "Publishes '.' if no argument supplied"
#~ " Sets tag 'latest' if no --tag "
#~ "specified"
#~ msgstr ""

#~ msgid "alias: npm rb"
#~ msgstr "alias: npm rb"

#~ msgid "aliases: s, se, find"
#~ msgstr "aliases: s, se, find"

#~ msgid "aliases: remove, rm, r, un, unlink"
#~ msgstr "aliases: remove, rm, r, un, unlink"

#~ msgid "aliases: up, upgrade"
#~ msgstr "aliases: up, upgrade"

#~ msgid "aliases: info, show, v"
#~ msgstr "aliases: info, show, v"

#~ msgid ""
#~ "This command repurposes package-lock.json "
#~ "into a publishable npm-shrinkwrap.json "
#~ "or simply creates a new one. The"
#~ " file created and updated by this "
#~ "command will then take precedence over"
#~ " any other existing or future "
#~ "package-lock.json files. For a detailed "
#~ "explanation of the design and purpose"
#~ " of package locks in npm, see "
#~ "npm-package-locks."
#~ msgstr ""
#~ "此命令将package-lock.json重新发布到可发布的npm-"
#~ "shrinkwrap.json中，或者只是创建一个新的。此命令创建和更新的文件将优先于任何其他现有或未来的package-"
#~ "lock.json文件。有关npm中包锁的设计和目的的详细说明，请参阅npm-package-locks。"

#~ msgid ":option:`npm package-locks`"
#~ msgstr ""

#~ msgid ":option:`package-lock.json`"
#~ msgstr ""

#~ msgid ":option:`npm shrinkwrap.json`"
#~ msgstr ""

#~ msgid ""
#~ "The package contents should reside in"
#~ " a subfolder inside the tarball "
#~ "(usually it is called package/). npm "
#~ "strips one directory layer when "
#~ "installing the package (an equivalent of"
#~ " tar x --strip-components=1 is run)."
#~ msgstr ""

#~ msgid ""
#~ "Fetch the tarball url, and then "
#~ "install it. In order to distinguish "
#~ "between this and other options, the "
#~ "argument must start with “http://” or"
#~ " “https://”"
#~ msgstr ""

#~ msgid ""
#~ "Do a <name>@<tag> install, where <tag>"
#~ " is the “tag” config. (See npm-"
#~ "config. The config’s default value is"
#~ " latest.)"
#~ msgstr ""

#~ msgid ""
#~ "Package will appear in your "
#~ "dependencies. This is the default unless"
#~ " -D or -O are present."
#~ msgstr ""

#~ msgid ""
#~ "When using any of the above "
#~ "options to save dependencies to your "
#~ "package.json, there are two additional, "
#~ "optional flags:"
#~ msgstr ""

#~ msgid ""
#~ "Further, if you have an npm-"
#~ "shrinkwrap.json or package-lock.json then "
#~ "it will be updated as well."
#~ msgstr ""

#~ msgid ""
#~ "<scope> is optional. The package will"
#~ " be downloaded from the registry "
#~ "associated with the specified scope. If"
#~ " no registry is associated with the"
#~ " given scope the default registry is"
#~ " assumed. See npm-scope."
#~ msgstr ""

#~ msgid ""
#~ "if you do not include the @-symbol"
#~ " on your scope name, npm will "
#~ "interpret this as a GitHub repository"
#~ " instead, see below. Scopes names "
#~ "must also be followed by a slash."
#~ msgstr ""

#~ msgid ""
#~ "If there is a file or folder "
#~ "named <name> in the current working "
#~ "directory, then it will try to "
#~ "install that, and only try to "
#~ "fetch the package by name if it"
#~ " is not valid."
#~ msgstr ""

#~ msgid ""
#~ "<protocol>://[<user>[:<password>]@]<hostname>[:<port>][:][/]<path"
#~ ">[#<commit-ish> | #semver:<semver>]"
#~ msgstr ""

#~ msgid ""
#~ "If #<commit-ish> is provided, it "
#~ "will be used to clone exactly that"
#~ " commit. If the commit-ish has "
#~ "the format #semver:<semver>, <semver> can "
#~ "be any valid semver range or exact"
#~ " version, and npm will look for "
#~ "any tags or refs matching that "
#~ "range in the remote repository, much "
#~ "as it would for a registry "
#~ "dependency. If neither #<commit-ish> or"
#~ " #semver:<semver> is specified, then the"
#~ " default branch of the repository is"
#~ " used."
#~ msgstr ""

#~ msgid ""
#~ "If #<commit-ish> is provided, it "
#~ "will be used to clone exactly that"
#~ " commit. If the commit-ish has "
#~ "the format #semver:<semver>, <semver> can "
#~ "be any valid semver range or exact"
#~ " version, and npm will look for "
#~ "any tags or refs matching that "
#~ "range in the remote repository, much "
#~ "as it would for a registry "
#~ "dependency. If neither #<commit-ish> or"
#~ " #semver:<semver> is specified, then master"
#~ " is used."
#~ msgstr ""

#~ msgid ""
#~ "You may combine multiple arguments, and"
#~ " even multiple types of arguments. "
#~ "For example:"
#~ msgstr ""

#~ msgid ""
#~ "The --tag argument will apply to "
#~ "all of the specified install targets."
#~ " If a tag with the given name"
#~ " exists, the tagged version is "
#~ "preferred over newer versions."
#~ msgstr ""

#~ msgid ""
#~ "The --dry-run argument will report "
#~ "in the usual way what the install"
#~ " would have done without actually "
#~ "installing anything."
#~ msgstr ""

#~ msgid ""
#~ "The --package-lock-only argument will"
#~ " only update the package-lock.json, "
#~ "instead of checking node_modules and "
#~ "downloading dependencies."
#~ msgstr ""

#~ msgid ""
#~ "The -f or --force argument will "
#~ "force npm to fetch remote resources "
#~ "even if a local copy exists on "
#~ "disk."
#~ msgstr ""

#~ msgid ""
#~ "The --global-style argument will cause"
#~ " npm to install the package into "
#~ "your local node_modules folder with the"
#~ " same layout it uses with the "
#~ "global node_modules folder. Only your "
#~ "direct dependencies will show in "
#~ "node_modules and everything they depend "
#~ "on will be flattened in their "
#~ "node_modules folders. This obviously will "
#~ "eliminate some deduping."
#~ msgstr ""

#~ msgid ""
#~ "The --ignore-scripts argument will cause"
#~ " npm to not execute any scripts "
#~ "defined in the package.json. See npm-"
#~ "scripts."
#~ msgstr ""

#~ msgid ""
#~ "The --legacy-bundling argument will "
#~ "cause npm to install the package "
#~ "such that versions of npm prior to"
#~ " 1.4, such as the one included "
#~ "with node 0.8, can install the "
#~ "package. This eliminates all automatic "
#~ "deduping."
#~ msgstr ""

#~ msgid ""
#~ "The --link argument will cause npm "
#~ "to link global installs into the "
#~ "local space in some cases."
#~ msgstr ""

#~ msgid ""
#~ "The --no-bin-links argument will "
#~ "prevent npm from creating symlinks for"
#~ " any binaries the package might "
#~ "contain."
#~ msgstr ""

#~ msgid ""
#~ "The --no-optional argument will prevent"
#~ " optional dependencies from being "
#~ "installed."
#~ msgstr ""

#~ msgid ""
#~ "The --no-shrinkwrap argument, which will"
#~ " ignore an available package lock or"
#~ " shrinkwrap file and use the "
#~ "package.json instead."
#~ msgstr ""

#~ msgid ""
#~ "The --no-package-lock argument will "
#~ "prevent npm from creating a package-"
#~ "lock.json file. When running with "
#~ "package-lock’s disabled npm will not "
#~ "automatically prune your node modules "
#~ "when installing."
#~ msgstr ""

#~ msgid ""
#~ "The --nodedir=/path/to/node/source argument will "
#~ "allow npm to find the node source"
#~ " code so that npm can compile "
#~ "native modules."
#~ msgstr ""

#~ msgid ""
#~ "The --only={prod[uction]|dev[elopment]} argument "
#~ "will cause either only devDependencies "
#~ "or only non-devDependencies to be "
#~ "installed regardless of the NODE_ENV."
#~ msgstr ""

#~ msgid ""
#~ "The --no-audit argument can be "
#~ "used to disable sending of audit "
#~ "reports to the configured registries. "
#~ "See npm-audit for details on what"
#~ " is sent."
#~ msgstr ""

#~ msgid ""
#~ "To avoid this situation, npm flat-"
#~ "out refuses to install any name@version"
#~ " that is already present anywhere in"
#~ " the tree of package folder "
#~ "ancestors. A more correct, but more "
#~ "complex, solution would be to symlink"
#~ " the existing version into the new"
#~ " location. If this ever affects a "
#~ "real use-case, it will be "
#~ "investigated."
#~ msgstr ""

#~ msgid "npm-version"
#~ msgstr "npm-version"

