# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the npm-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: npm-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-10 22:02+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/packages-and-modules/about-audit-reports.rst:2
msgid "About audit reports"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:4
msgid "About audit reports Audit reports contain tables of information about security vulnerabilities in your project’s dependencies to help you fix the vulnerability or troubleshoot further."
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:11
msgid "Vulnerability table fields"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:13
#: ../../source/packages-and-modules/about-audit-reports.rst:22
#: ../../source/packages-and-modules/about-audit-reports.rst:27
msgid "Severity"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:14
#: ../../source/packages-and-modules/about-audit-reports.rst:39
msgid "Description"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:15
#: ../../source/packages-and-modules/about-audit-reports.rst:44
msgid "Package"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:16
#: ../../source/packages-and-modules/about-audit-reports.rst:49
msgid "Patched in"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:17
#: ../../source/packages-and-modules/about-audit-reports.rst:54
msgid "Dependency of"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:18
#: ../../source/packages-and-modules/about-audit-reports.rst:59
msgid "Path"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:19
#: ../../source/packages-and-modules/about-audit-reports.rst:64
msgid "More info"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:24
msgid "The severity of the vulnerability, determined by the impact and exploitability of the vulnerability in its most common use case."
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:27
msgid "Recommended action"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:29
msgid "Critical"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:29
msgid "Address immediately"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:31
msgid "High"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:31
msgid "Address as quickly as possible"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:33
msgid "Moderate"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:33
msgid "Address as time allows"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:35
msgid "Low"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:35
msgid "Address at your discretion"
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:41
msgid "The description of the vulnerability. For example, “Denial of service”."
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:46
msgid "The name of the package that contains the vulnerability."
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:51
msgid "The semantic version range that describes which versions contain a fix for the vulnerability."
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:56
msgid "The module that the package with the vulnerability depends on."
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:61
msgid "The path to the code that contains the vulnerability."
msgstr ""

#: ../../source/packages-and-modules/about-audit-reports.rst:66
msgid "A link to the security report."
msgstr ""

#: ../../source/packages-and-modules/about-package-readme-files.rst:2
msgid "About package README files"
msgstr ""

#: ../../source/packages-and-modules/about-package-readme-files.rst:4
msgid "To help others find your packages on npm and have a good experience using your code in their projects, we recommend including a README file in your package directory. Your README file may include directions for installing, configuring, and using the code in your package, as well as any other information a user may find helpful. The README file will be shown on the package page."
msgstr ""

#: ../../source/packages-and-modules/about-package-readme-files.rst:6
msgid "An npm package README file must be in the root-level directory of the package."
msgstr ""

#: ../../source/packages-and-modules/about-package-readme-files.rst:9
msgid "Creating and adding a README.md file to a package"
msgstr ""

#: ../../source/packages-and-modules/about-package-readme-files.rst:11
msgid "In a text editor, in your package root directory, create a file called README.md."
msgstr ""

#: ../../source/packages-and-modules/about-package-readme-files.rst:12
msgid "In the README.md file, add useful information about your package."
msgstr ""

#: ../../source/packages-and-modules/about-package-readme-files.rst:13
#: ../../source/packages-and-modules/about-package-readme-files.rst:22
msgid "Save the README.md file."
msgstr ""

#: ../../source/packages-and-modules/about-package-readme-files.rst:15
msgid "The file extension .md indicates a Markdown file. For more information about Markdown, see the GitHub Guide \"Mastering Markdown\"."
msgstr ""

#: ../../source/packages-and-modules/about-package-readme-files.rst:18
msgid "Updating an existing package README file"
msgstr ""

#: ../../source/packages-and-modules/about-package-readme-files.rst:19
msgid "The README file will only be updated on the package page when you publish a new version of your package. To update your README file:"
msgstr ""

#: ../../source/packages-and-modules/about-package-readme-files.rst:21
msgid "In a text editor, update the contents of the README.md file."
msgstr ""

#: ../../source/packages-and-modules/about-package-readme-files.rst:23
msgid "On the command line, in the package root directory, run the following commands::"
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:2
msgid "About packages and modules"
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:4
msgid "The npm registry contains packages, many of which are also Node modules, or contain Node modules. Read on to understand how they differ and how they interact."
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:8
msgid "About packages"
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:10
msgid "A **package** is a file or directory that is described by a **package.json** file. A package must contain a **package.json** file in order to be published to the npm registry. For more information on creating a **package.json** file, see :doc:`creating-a-package-json-file` ."
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:14
msgid "Packages can be unscoped or scoped to a user or Org, and scoped packages can be private or public. For more information, see"
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:17
msgid ":doc:`about-scopes`"
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:18
msgid ":doc:`about-private-packages`"
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:19
msgid ":doc:`package-scope-access-level-and-visibility`"
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:22
msgid "About package formats"
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:24
msgid "A package is any of the following:"
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:26
msgid "A folder containing a program described by a **package.json** file."
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:27
msgid "A gzipped tarball containing (a)."
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:28
msgid "A URL that resolves to (b)."
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:29
msgid "A **<name>@<version>** that is published on the registry with (c)."
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:30
msgid "A **<name>@<tag>** that points to (d)."
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:31
msgid "A **<name>** that has a **latest** tag satisfying (e)."
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:32
msgid "A **git** url that, when cloned, results in (a)."
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:35
msgid "npm package git URL formats"
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:37
msgid "Git URLs used for npm packages can be formatted in the following ways:"
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:39
msgid "git://github.com/user/project.git#commit-ish"
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:40
msgid "git+ssh://user@hostname:project.git#commit-ish"
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:41
msgid "git+http://user@hostname/project/blah.git#commit-ish"
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:42
msgid "git+https://user@hostname/project/blah.git#commit-ish"
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:44
msgid "The **commit-ish** can be any tag, sha, or branch that can be supplied as an argument to **git checkout**. The default **commit-ish** is **master**."
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:48
msgid "About modules"
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:50
msgid "A **module** is any file or directory in the **node_modules** directory that can be loaded by the Node.js **require()** function."
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:52
msgid "To be loaded by the Node.js **require()** function, a module must be one of the following:"
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:54
msgid "A folder with a **package.json** file containing a \"**main**\" field."
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:55
msgid "A folder with an **index.js** file in it."
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:56
msgid "A JavaScript file."
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:59
msgid "Since modules are not required to have a **package.json** file, not all modules are packages. Only modules that have a **package.json** file are also packages."
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:62
msgid "In the context of a Node program, the **module** is also the thing that was loaded from a file. For example, in the following program:"
msgstr ""

#: ../../source/packages-and-modules/about-packages-and-modules.rst:69
msgid "we might say that “The variable **req** refers to the **request** module”."
msgstr ""

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:2
msgid "About package PGP signatures"
msgstr ""

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:4
msgid "To increase confidence in the npm public registry, we add our PGP signature to package metadata and publicize our public PGP key on Keybase. Our Keybase account is “npmregistry” and our public PGP key can be found at https://keybase.io/npmregistry/pgp_keys.asc"
msgstr ""

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:6
msgid "You can use the package PGP signature and our public PGP key to verify that the same entity who published the key (npm, Inc.) also signed the package you downloaded from the npm public registry. For more information, see “Verifying the PGP signature of a package from the npm public registry”."
msgstr ""

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:9
msgid "Tools we use"
msgstr ""

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:12
msgid "openpgpjs"
msgstr ""

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:14
msgid "To generate PGP signatures, we use openpgpjs, a pure JavaScript implementation of OpenPGP. To learn more about openpgpjs, see https://openpgpjs.org/."
msgstr ""

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:17
msgid "Keybase"
msgstr ""

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:19
msgid "We use Keybase to publicize our PGP key and give you confidence that the npm registry you install from is the same registry that signs packages."
msgstr ""

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:21
msgid "Keybase offers two advantages over the core OpenPGP experience that move us to recommend it to you:"
msgstr ""

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:23
msgid "The Keybase application and CLI provide an excellent user experience for PGP, which can be intimidating for newcomers. Keybase manages and displays social proofs that the entity that controls a specific PGP key also controls accounts on social media and other places. These proofs help you determine whether you can trust an account. We’ve established proofs on Keybase that we control @npmjs on Twitter, the domain npmjs.com, and the domain npmjs.org. Verifying these proofs won’t tell you who owns those domains, but it does establish that the same entity controls them and the PGP key advertised on Keybase."
msgstr ""

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:27
msgid "You can also observe that members of npm’s executive and technical teams are among the people who have chosen to follow “npmregistry” on Keybase—for example, CJ Silverio (ceej), Isaac Schlueter (isaacs), Adam Baldwin (adam_baldwin), and Kat Marchán (zkat)."
msgstr ""

#: ../../source/packages-and-modules/about-pgp-signatures-for-packages-in-the-public-registry.rst:29
msgid "If you install Keybase and create an account, you can follow npmregistry yourself and obtain a local copy of the registry’s public key. For more information, and to verify the PGP signature of a specific package version from the npm public registry, see “Verifying the PGP signature for a package from the npm public registry”."
msgstr ""

#: ../../source/packages-and-modules/about-private-packages.rst:2
msgid "About private packages"
msgstr ""

#: ../../source/packages-and-modules/about-private-packages.rst:4
msgid "To use private packages, you must::"
msgstr ""

#: ../../source/packages-and-modules/about-private-packages.rst:9
msgid "With npm private packages, you can use the npm registry to host code that is only visible to you and chosen collaborators, allowing you to manage and use private code alongside public code in your projects."
msgstr ""

#: ../../source/packages-and-modules/about-private-packages.rst:11
msgid "Private packages always have a scope, and scoped packages are private by default."
msgstr ""

#: ../../source/packages-and-modules/about-private-packages.rst:13
msgid "**User-scoped private packages** can only be accessed by you and collaborators to whom you have granted read or read/write access. For more information, see :doc:`adding-collaborators-to-private-packages-owned-by-a-user-account`."
msgstr ""

#: ../../source/packages-and-modules/about-private-packages.rst:14
msgid "**Org-scoped private packages** can only be accessed by teams that have been granted read or read/write access. For more information, see :doc:`../org/managing-team-access-to-org-packages`."
msgstr ""

#: ../../source/packages-and-modules/about-private-packages.rst:17
#: ../../source/packages-and-modules/about-public-packages.rst:13
msgid "Next steps"
msgstr ""

#: ../../source/packages-and-modules/about-private-packages.rst:19
msgid ":doc:`creating-and-publishing-private-packages`"
msgstr ""

#: ../../source/packages-and-modules/about-private-packages.rst:20
#: ../../source/packages-and-modules/about-public-packages.rst:17
msgid ":doc:`using-npm-packages-in-your-projects`"
msgstr ""

#: ../../source/packages-and-modules/about-private-packages.rst:23
#: ../../source/packages-and-modules/about-semantic-versioning.rst:48
#: ../../source/packages-and-modules/creating-node-js-modules.rst:52
#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:54
#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:106
#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:57
msgid "Resources"
msgstr ""

#: ../../source/packages-and-modules/about-public-packages.rst:2
msgid "About public packages"
msgstr ""

#: ../../source/packages-and-modules/about-public-packages.rst:4
msgid "As an npm user or Org member, you can create and publish public packages that anyone can download and use in their own projects."
msgstr ""

#: ../../source/packages-and-modules/about-public-packages.rst:6
msgid "**Unscoped** public packages exist in the global public registry namespace and can be referenced in a **package.json** file with the package name alone: **package-name**."
msgstr ""

#: ../../source/packages-and-modules/about-public-packages.rst:7
msgid "**Scoped** public packages belong to a user or Org and must be preceded by the user or Org name when included as a dependency in a **package.json** file:"
msgstr ""

#: ../../source/packages-and-modules/about-public-packages.rst:9
msgid "**@username/package-name**"
msgstr ""

#: ../../source/packages-and-modules/about-public-packages.rst:10
msgid "**@org-name/package-name**"
msgstr ""

#: ../../source/packages-and-modules/about-public-packages.rst:15
msgid ":doc:`creating-and-publishing-scoped-public-packages`"
msgstr ""

#: ../../source/packages-and-modules/about-public-packages.rst:16
msgid ":doc:`creating-and-publishing-unscoped-public-packages`"
msgstr ""

#: ../../source/packages-and-modules/about-scopes.rst:2
msgid "About scopes"
msgstr ""

#: ../../source/packages-and-modules/about-scopes.rst:5
msgid "You must be using npm version 2 or greater to use scopes. To upgrade to the latest version of npm, on the command line, run **npm install npm@latest -g**"
msgstr ""

#: ../../source/packages-and-modules/about-scopes.rst:8
msgid "When you sign up for an npm user account or create an Org, you are granted a scope that matches your user or Org name. You can use this scope as a namespace for related packages."
msgstr ""

#: ../../source/packages-and-modules/about-scopes.rst:10
msgid "A scope allows you to create a package with the same name as a package created by another user or Org without conflict."
msgstr ""

#: ../../source/packages-and-modules/about-scopes.rst:12
msgid "When listed as a dependent in a package.json file, scoped packages are preceded by their scope name. The scope name is everything between the @ and the slash:"
msgstr ""

#: ../../source/packages-and-modules/about-scopes.rst:14
msgid "**“npm” scope**::"
msgstr ""

#: ../../source/packages-and-modules/about-scopes.rst:18
msgid "**“npmcorp” scope**::"
msgstr ""

#: ../../source/packages-and-modules/about-scopes.rst:22
msgid "To create and publish public scoped packages, see :doc:`creating-and-publishing-scoped-public-packages`."
msgstr ""

#: ../../source/packages-and-modules/about-scopes.rst:24
msgid "To create and publish private scoped packages, see :doc:`creating-and-publishing-private-packages`."
msgstr ""

#: ../../source/packages-and-modules/about-scopes.rst:27
msgid "Scopes and package visibility"
msgstr ""

#: ../../source/packages-and-modules/about-scopes.rst:29
msgid "Unscoped packages are always public."
msgstr ""

#: ../../source/packages-and-modules/about-scopes.rst:30
msgid ":doc:`about-private-packages` are always scoped."
msgstr ""

#: ../../source/packages-and-modules/about-scopes.rst:31
msgid "Scoped packages are private by default; you must pass a command-line flag when publishing to make them public."
msgstr ""

#: ../../source/packages-and-modules/about-scopes.rst:33
msgid "For more information on package scope and visibility, see :doc:`package-scope-access-level-and-visibility`."
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:2
msgid "About semantic versioning"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:4
msgid "To keep the JavaScript ecosystem healthy, reliable, and secure, every time you make significant updates to an npm package you own, we recommend publishing a new version of the package with an updated version number in the package.json file that follows the semantic versioning spec. Following the semantic versioning spec helps other developers who depend on your code understand the extent of changes in a given version, and adjust their own code if necessary."
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:6
msgid "If you introduce a change that breaks a package dependency, we strongly recommend incrementing the version major number; see below for details."
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:9
msgid "Incrementing semantic versions in published packages"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:11
msgid "To help developers who rely on your code, we recommend starting your package version at **1.0.0** and incrementing as follows:"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:14
msgid "Code status"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:14
msgid "Stage"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:14
msgid "Rule"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:14
msgid "Example version"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:16
msgid "First release"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:16
msgid "New product"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:16
msgid "Start with 1.0.0"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:16
msgid "1.0.0"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:18
msgid "Backward compatible bug fixes"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:18
msgid "Patch release"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:18
msgid "Increment the third digit"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:18
msgid "1.0.1"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:20
msgid "Backward compatible new features"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:20
msgid "Minor release"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:20
msgid "Increment the middle digit and reset last digit to zero"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:20
msgid "1.1.0"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:22
msgid "Changes that break backward compatibility"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:22
msgid "Major release"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:22
msgid "Increment the first digit and reset middle and last digits to zero"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:22
msgid "2.0.0"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:26
msgid "Using semantic versioning to specify update types your package can accept"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:28
msgid "You can specify which update types your package can accept from dependencies in your package’s package.json file."
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:30
msgid "For example, to specify acceptable version ranges up to 1.0.4, use the following syntax:"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:32
msgid "Patch releases: 1.0 or 1.0.x or ~1.0.4"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:33
msgid "Minor releases: 1 or 1.x or ^1.0.4"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:34
msgid "Major releases: * or x"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:36
msgid "For more information on semantic versioning syntax, see the npm semver calculator."
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:38
#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:28
#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:51
msgid "**Example**"
msgstr ""

#: ../../source/packages-and-modules/about-semantic-versioning.rst:50
msgid "<iframe width=\"300\" height=\"150\" src=\"https://www.youtube.com/embed/kK4Meix58R4\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>"
msgstr ""

#: ../../source/packages-and-modules/about-the-public-npm-registry.rst:2
msgid "About the public npm registry"
msgstr ""

#: ../../source/packages-and-modules/about-the-public-npm-registry.rst:4
msgid "The public npm registry is a database of JavaScript packages, each comprised of software and metadata. Open source developers and developers at companies use the npm registry to contribute packages to the entire community or members of their Orgs, and download packages to use in their own projects."
msgstr ""

#: ../../source/packages-and-modules/about-the-public-npm-registry.rst:8
msgid "To get started with the registry, sign up for an npm account and check out the “Getting started” and CLI documentation."
msgstr ""

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:2
msgid "Adding collaborators to private packages owned by a user account"
msgstr ""

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:4
msgid "As an npm user with a paid user account, you can another npm user with a paid account as a collaborator on a private package you own."
msgstr ""

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:6
msgid "The user you want to add as a collaborator on your private package must have a paid user account. To sign up for a paid account, they can visit https://https://www.npmjs.com/settings/username/billing, replacing username with their npm username."
msgstr ""

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:9
msgid "Granting access to a private user package on the web"
msgstr ""

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:11
msgid "On the :option:`npm website`, go to the package to which you want to add a collaborator::"
msgstr ""

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:15
msgid "On the package page, under “Collaborators”, click +."
msgstr ""

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:16
msgid "Enter the npm username of the collaborator."
msgstr ""

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:17
msgid "Click Submit."
msgstr ""

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:20
msgid "Granting private package access from the command line interface"
msgstr ""

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:22
msgid "To add a collaborator to a package on the command line, run the following command, replacing **<user>** with the npm username of your collaborator, and **<your-package-name>** with the name of the private package::"
msgstr ""

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:27
msgid "Granting access to private Org packages"
msgstr ""

#: ../../source/packages-and-modules/adding-collaborators-to-private-packages-owned-by-a-user-account.rst:29
msgid "To grant an npm user access to private Org packages, you must have an Org owner add them to your Org, then add them to a team that has access to the private package. For more information, see :doc:`../orgs/adding-members-to-your-org`."
msgstr ""

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:2
msgid "Adding dist-tags to packages"
msgstr ""

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:4
msgid "Distribution tags (dist-tags) are human-readable labels that you can use to organize and label different versions of packages you publish. dist-tags supplement :doc:`about-semantic-versioning`. In addition to being more human-readable than semantic version numbering, tags allow publishers to distribute their packages more effectively."
msgstr ""

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:7
msgid "For more information, see the :option:`npm dist-tag`."
msgstr ""

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:9
msgid "Since dist-tags share a namespace with semantic versions, avoid dist-tags that conflict with existing version numbers. We recommend avoiding dist-tags that start with a number or the letter \"v\"."
msgstr ""

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:12
msgid "Publishing a package with a dist-tag"
msgstr ""

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:14
msgid "By default, running npm publish will tag your package with the latest dist-tag. To use another dist-tag, use the --tag flag when publishing."
msgstr ""

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:16
#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:39
#: ../../source/packages-and-modules/creating-a-package-json-file.rst:48
#: ../../source/packages-and-modules/creating-a-package-json-file.rst:73
msgid "On the command line, navigate to the root directory of your package."
msgstr ""

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:22
msgid "Run the following command, replacing <tag> with the tag you want to use:"
msgstr ""

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:30
msgid "To publish a package with the “beta” dist-tag, on the command line, run the following command in the root directory of your package:"
msgstr ""

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:37
msgid "Adding a dist-tag to a specific version of your package"
msgstr ""

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:45
msgid "Run the following command, replacing <package_name> with the name of your package, <version> with your package version number, and <tag> with the distribution tag:"
msgstr ""

#: ../../source/packages-and-modules/adding-dist-tags-to-packages.rst:53
msgid "To add the “stable” tag to the 1.4.0 version of the “example-package” package, you would run the following command:"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:2
msgid "Auditing package dependencies for security vulnerabilities"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:5
msgid "About security audits"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:7
msgid "A security audit is an assessment of package dependencies for security vulnerabilities. Security audits help you protect your package’s users by enabling you to find and fix known vulnerabilities in dependencies that could cause data loss, service outages, unauthorized access to sensitive information, or other issues."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:11
msgid "Running a security audit with npm audit"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:13
msgid "The npm audit command is available in npm@6. To upgrade, run npm install npm@latest -g."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:15
msgid "The :option:`npm audit` command submits a description of the dependencies configured in your package to your default registry and asks for a report of known vulnerabilities. :option:`npm audit` checks direct dependencies, devDependencies, bundledDependencies, and optionalDependencies, but does not check peerDependencies."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:18
msgid ":option:`npm audit` automatically runs when you install a package with npm install. You can also run :option:`npm audit` manually on your locally installed packages to conduct a security audit of the package and produce a report of dependency vulnerabilities and, if available, suggested patches."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:21
msgid "On the command line, navigate to your package directory by typing cd path/to/your-package-name and pressing Enter."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:22
msgid "Ensure your package contains package.json and package-lock.json files."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:23
msgid "Type :option:`npm audit` and press Enter."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:24
msgid "Review the audit report and run recommended commands or investigate further if needed."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:27
msgid "Resolving EAUDITNOPJSON and EAUDITNOLOCK errors"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:33
msgid "If you get an EAUDITNOPJSON error, create a package.json file by following the steps in “Creating a package.json file”."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:34
msgid "If you get an EAUDITNOLOCK error, make sure your package has a package.json file, then create the package lock file by running npm i --package-lock-only."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:37
msgid "Reviewing and acting on the security audit report"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:39
msgid "Running :option:`npm audit` will produce a report of security vulnerabilities with the affected package name, vulnerability severity and description, path, and other information, and, if available, commands to apply patches to resolve vulnerabilities. For more information on the fields in the audit report, see “About audit reports”"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:43
msgid "Security vulnerabilities found with suggested updates"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:45
msgid "If security vulnerabilities are found and updates are available, you can either:"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:47
msgid "Run the :option:`npm audit` fix subcommand to automatically install compatible updates to vulnerable dependencies."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:48
msgid "Run the recommended commands individually to install updates to vulnerable dependencies. (Some updates may be semver-breaking changes; for more information, see “SEMVER warnings”.)"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:55
msgid "SEMVER warnings"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:57
msgid "If the recommended action is a potential breaking change (semantic version major change), it will be followed by a SEMVER WARNING that says “SEMVER WARNING: Recommended action is a potentially breaking change”. If the package with the vulnerability has changed its API, you may need to make additional changes to your package’s code."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:61
msgid "Security vulnerabilities found requiring manual review"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:63
msgid "If security vulnerabilities are found, but no patches are available, the audit report will provide information about the vulnerability so you can investigate further."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:68
msgid "To address the vulnerability, you can"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:70
#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:76
msgid "Check for mitigating factors"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:71
#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:82
msgid "Update dependent packages if a fix exists"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:72
#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:94
msgid "Fix the vulnerability"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:73
#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:105
msgid "Open an issue in the package or dependent package issue tracker"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:78
msgid "Review the security advisory in the “More info” field for mitigating factors that may allow you to continue using the package with the vulnerability in limited cases. For example, the vulnerability may only exist when the code is used on specific operating systems, or when a specific function is called."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:84
msgid "If a fix exists but packages that depend on the package with the vulnerability have not been updated to include the fixed version, you may want to open a pull or merge request on the dependent package repository to use the fixed version."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:86
msgid "To find the package that must be updated, check the “Path” field for the location of the package with the vulnerability, then check for the package that depends on it. For example, if the path to the vulnerability is @package-name > dependent-package > package-with-vulnerability, you will need to update dependent-package."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:88
msgid "On the npm public registry, find the dependent package and navigate to its repository. For more information on finding packages, see “Searching for and choosing packages to download”."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:90
msgid "In the dependent package repository, open a pull or merge request to update the version of the vulnerable package to a version with a fix."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:91
msgid "Once the pull or merge request is merged and the package has been updated in the npm public registry, update your copy of the package with npm update."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:96
msgid "If a fix does not exist, you may want to suggest changes that address the vulnerability to the package maintainer in a pull or merge request on the package repository."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:98
msgid "Check the “Path” field for the location of the vulnerability."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:99
msgid "On the npm public registry, find the package with the vulnerability. For more information on finding packages, see “Searching for and choosing packages to download”."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:101
msgid "In the package repository, open a pull or merge request to make the fix on the package repository."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:102
msgid "Once the fix is merged and the package has been updated in the npm public registry, update your copy of the package that depends on the package with the fix."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:107
msgid "If you do not want to fix the vulnerability or update the dependent package yourself, open an issue in the package or dependent package issue tracker."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:109
msgid "On the npm public registry, find the package with the vulnerability or the dependent package that needs an update. For more information on finding packages, see “Searching for and choosing packages to download”."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:111
msgid "In the package or dependent package issue tracker, open an issue and include information from the audit report, including the vulnerability report from the “More info” field."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:114
msgid "No security vulnerabilities found"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:117
msgid "If no security vulnerabilities are found, this means that packages with known vulnerabilities were not found in your package dependency tree. Since the advisory database can be updated at any time, we recommend regularly running :option:`npm audit` manually, or adding npm audit to your continuous integration process."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:124
msgid "Turning off npm audit on package installation"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:127
msgid "Installing a single package"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:129
msgid "To turn off :option:`npm audit` when installing a single package, use the --no-audit flag::"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:133
msgid "For more information, see the npm-install command."
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:136
msgid "Installing all packages"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:138
msgid "To turn off :option:`npm audit` when installing all packages, set the audit setting to false in your user and global npmrc config files::"
msgstr ""

#: ../../source/packages-and-modules/auditing-package-dependencies-for-security-vulnerabilities.rst:143
msgid "For more information, see the npm-config management command and the npm-config audit setting."
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:2
msgid "Changing package visibility"
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:4
msgid "You can change the visibility of a scoped package from the website or command line."
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:6
msgid "You must be the owner of the user account or Org that owns the package in order to change package visibility."
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:8
msgid "For more information about package visibility, see :doc:`package-scope-access-level-and-visibility`."
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:10
msgid "Adding a scope to an unscoped package will not make it private. If you want to make a unscoped package private, `contact npm Support`_."
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:13
msgid "Making a public package private"
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:15
msgid "Making a package private requires a paid user account or Org. To sign up for a paid user or Org, go to https://www.npmjs.com/settings/account-name/billing, replacing account-name with the name of your npm user account or Org."
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:17
msgid "If you want to restrict access and visibility for a public package you own, you can make the package private. When you make a package private, it will be removed from the website within a few minutes of the change."
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:20
#: ../../source/packages-and-modules/changing-package-visibility.rst:42
msgid "Website"
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:22
#: ../../source/packages-and-modules/changing-package-visibility.rst:44
msgid "On the `npm website`_, go to the package page."
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:23
msgid "On the package page, click Admin."
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:24
msgid "Under “Package Access”, select “Is Package Private?”"
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:25
msgid "Click Update package settings."
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:28
#: ../../source/packages-and-modules/changing-package-visibility.rst:50
msgid "Command line"
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:30
msgid "To make a public package private on the command line, run the following command, replacing <package-name> with the name of your package::"
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:34
msgid "For more information, see the :option:`npm access` documentation."
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:37
msgid "Making a private package public"
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:39
msgid "When you make a private package public, the package will be visible to and downloadable by all npm users."
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:45
msgid "On the package page, click **Admin**."
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:46
msgid "Under “Package Access”, deselect “Is Package Private?”"
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:47
msgid "Click **Update package settings**."
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:52
msgid "To make a private package public on the command line, run the following command, replacing **<package-name>** with the name of your package:"
msgstr ""

#: ../../source/packages-and-modules/changing-package-visibility.rst:58
msgid "For more information, see the :option:`npm access` CLI documentation."
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:2
msgid "Creating a package.json file"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:4
msgid "You can add a package.json file to your package to make it easy for others to manage and install. Packages published to the registry must contain a package.json file."
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:6
msgid "A package.json file:"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:8
msgid "lists the packages your project depends on specifies versions of a package that your project can use using semantic versioning rules makes your build reproducible, and therefore easier to share with other developers .. note:: To make your package easier to find on the npm website, we recommend including a custom description in your package.json file."
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:14
msgid "package.json fields"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:17
msgid "Required name and version fields"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:19
msgid "A package.json file must contain \"name\" and \"version\" fields."
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:21
msgid "The \"name\" field contains your package’s name, and must be lowercase and one word, and may contain hyphens and underscores."
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:23
msgid "The \"version\" field must be in the form x.x.x and follow the semantic versioning guidelines."
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:26
msgid "Author field"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:28
msgid "If you want to include package author information in \"author\" field, use the following format (email and website are both optional):"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:30
msgid "Your Name <email@example.com> (http://example.com) Example -------------------------------------------------------"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:35
#: ../../source/packages-and-modules/creating-a-package-json-file.rst:100
msgid "{"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:35
msgid "\"name\": \"my-awesome-package\", \"version\": \"1.0.0\""
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:37
msgid "} Creating a new package.json file -------------------------------------------------------"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:41
msgid "You can create a package.json file by running a CLI questionnaire or creating a default package.json file."
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:44
msgid "Running a CLI questionnaire"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:46
msgid "To create a package.json file with values that you supply, use the npm init command."
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:49
#: ../../source/packages-and-modules/creating-a-package-json-file.rst:74
msgid "cd /path/to/package"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:50
#: ../../source/packages-and-modules/creating-a-package-json-file.rst:75
msgid "Run the following command:"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:51
msgid "npm init"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:52
msgid "Answer the questions in the command line questionnaire. Customizing the package.json questionnaire -------------------------------------------------------"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:56
msgid "If you expect to create many package.json files, you can customize the questions asked and fields created during the init process so all the package.json files contain a standard set of information."
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:58
msgid "In your home directory, create a file called .npm-init.js. To add custom questions, using a text editor, add questions with the prompt function:"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:60
msgid "module.exports = prompt(\"what's your favorite flavor of ice cream, buddy?\", \"I LIKE THEM ALL\");"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:64
msgid "To add custom fields, using a text editor, add desired fields to the .npm-init.js file:"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:62
msgid "module.exports = {"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:63
msgid "customField: 'Example custom field', otherCustomField: 'This example field is really cool'"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:65
#: ../../source/packages-and-modules/creating-a-package-json-file.rst:102
#: ../../source/packages-and-modules/creating-node-js-modules.rst:34
#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:53
msgid "}"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:66
msgid "To learn more about creating advanced npm init customizations, see the init-package-json GitHub repository."
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:69
msgid "Creating a default package.json file"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:71
msgid "To create a default package.json using information extracted from the current directory, use the npm init command with the --yes or -y flag. For a list of default values, see “Default values extracted from the current directory”."
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:76
msgid "npm init --yes"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:78
#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:30
#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:57
#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:97
msgid "Example"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:80
msgid "> npm init --yes Wrote to /home/ag_dubs/my_package/package.json:"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:84
msgid "\"name\": \"my_package\", \"description\": \"\", \"version\": \"1.0.0\", \"main\": \"index.js\", \"scripts\": {"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:89
msgid "\"test\": \"echo \\\"Error: no test specified\\\" && exit 1\""
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:90
msgid "}, \"repository\": {"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:92
msgid "\"type\": \"git\", \"url\": \"https://github.com/ashleygwilliams/my_package.git\""
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:94
msgid "}, \"keywords\": [], \"author\": \"\", \"license\": \"ISC\", \"bugs\": {"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:99
msgid "\"url\": \"https://github.com/ashleygwilliams/my_package/issues\""
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:100
msgid "}, \"homepage\": \"https://github.com/ashleygwilliams/my_package\""
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:104
msgid "Default values extracted from the current directory"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:106
msgid "name: the current directory name version: always 1.0.0 description: info from the README, or an empty string \"\" main: always index.js scripts: by default creates an empty test script keywords: empty author: empty license: ISC bugs: information from the current directory, if present homepage: information from the current directory, if present Setting config options for the init command -------------------------------------------------------"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:119
msgid "You can set default config options for the init command. For example, to set the default author email, author name, and license, on the command line, run the following commands:"
msgstr ""

#: ../../source/packages-and-modules/creating-a-package-json-file.rst:121
msgid "> npm set init.author.email \"example-user@example.com\" > npm set init.author.name \"example_user\" > npm set init.license \"MIT\""
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:2
msgid "Creating and publishing private packages"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:4
msgid "To share your code with a limited set of users or teams, you can publish private user-scoped or Org-scoped packages to the npm registry."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:6
msgid "For more information on scopes and private packages, see :doc:`about-scopes` and :doc:`about-private-packages`."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:8
msgid "Before you can publish private user-scoped npm packages, you must `sign up`_ for a paid npm user account. Additionally, to publish private Org-scoped packages, you must `create an npm user account <sign up_>`_, then `create a paid npm Org`_."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:11
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:11
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:15
#: ../../source/packages-and-modules/creating-node-js-modules.rst:7
msgid "Overview"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:13
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:13
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:17
msgid "Create your package"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:14
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:14
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:18
msgid "Review package contents for sensitive or unnecessary information"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:15
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:15
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:19
msgid "Publish your package"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:18
msgid "Creating a private package"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:20
msgid "If you are using npmrc to :doc:`../getting-started/configuring-your-registry-settings-as-an-npm-enterprise-user` #using-npmrc-to-manage-multiple-profiles-for-different-registries, on the command line, switch to the appropriate profile::"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:24
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:24
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:26
msgid "On the command line, create a directory for your package::"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:28
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:28
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:30
msgid "Navigate to the root directory of your package::"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:32
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:32
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:34
msgid "If you are using git to manage your package code, in the package root directory, run the following commands, replacing git-remote-url with the git remote URL for your package::"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:37
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:37
msgid "In the package root directory, run the npm init command and pass the scope to the scope flag:"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:39
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:39
msgid "For an Org-scoped package, replace my-org with the name of your Org::"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:42
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:43
msgid "For a user-scoped package, replace my-username with your username::"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:46
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:47
msgid "Respond to the prompts to generate a package.json file. For help naming your package, see “Package name guidelines”."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:47
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:48
msgid "Create a README file that explains what your package code is and how to use it."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:48
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:49
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:42
msgid "In your preferred text editor, write the code for your package."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:51
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:52
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:45
msgid "Reviewing package contents for sensitive or unnecessary information"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:53
msgid "Publishing sensitive information to the registry can harm your users, compromise your development infrastructure, be expensive to fix, and put you at risk of legal action."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:55
msgid "We strongly recommend removing sensitive information, such as private keys, passwords, [personally identifiable information][pii] (PII), and credit card data before publishing your package to the registry."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:57
msgid "Even if your package is private, sensitive information can be exposed if the package is made public or downloaded to a computer that can be accessed by more users than intended."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:59
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:57
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:51
msgid "For less sensitive information, such as testing data, use a **.npmignore** or **.gitignore** file to prevent publishing to the registry. For more information, see this article."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:62
msgid "Publishing private packages"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:64
msgid "By default, scoped packages are published with private visibility."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:66
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:64
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:56
msgid "On the command line, navigate to the root directory of your package::"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:70
msgid "To publish your private package to the npm registry, run::"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:74
msgid "To see your private package page, visit https://npmjs.com/package/package-name, replacing package-name with the name of your package. Private packages will say private below the package name on the npm website."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-private-packages.rst:79
#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:78
msgid "For more information on the **publish** command, see the :option:`npm publish`."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:2
msgid "Creating and publishing scoped public packages"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:4
msgid "To share your code publicly in a user or Org namespace, you can publish public user-scoped or Org-scoped packages to the npm registry."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:6
msgid "For more information on scopes, see https://docs.npmjs.com/about-scopes."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:8
msgid "Before you can publish user-scoped npm packages, you must `sign up`_ for an npm user account. Additionally, to publish Org-scoped packages, you must `create an npm user account <sign up_>`_, then `create an npm Org`_."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:18
msgid "Creating a scoped public package"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:20
msgid "If you are using npmrc to manage accounts on multiple registries, on the command line, switch to the appropriate profile::"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:54
msgid "Publishing sensitive information to the registry can harm your users, compromise your development infrastructure, be expensive to fix, and put you at risk of legal action. **We strongly recommend removing sensitive information, such as private keys, passwords,** `personally identifiable information`_ **(PII), and credit card data before publishing your package to the registry.**"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:60
msgid "Publishing scoped public packages"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:62
msgid "By default, scoped packages are published with private visibility. To publish a scoped package with public visibility, use ``npm publish --access public``."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:68
msgid "To publish your scoped public package to the npm registry, run::"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-scoped-public-packages.rst:72
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:64
msgid "To see your public package page, visit https://npmjs.com/package/package-name, replacing package-name with the name of your package. Public packages will say public below the package name on the npm website."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:2
msgid "Creating and publishing unscoped public packages"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:4
#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:24
msgid "You can only publish unscoped packages to the npm public registry. You cannot publish unscoped packages to an npm Enterprise registry."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:6
msgid "As an npm user, you can create unscoped packages to use in your own projects and publish them to the npm public registry for others to use in theirs. Unscoped packages are always public and are referred to by the package name only:"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:8
msgid "**package-name**"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:10
msgid "For more information on package scope, access, and visibility, see :doc:`package-scope-access-level-and-visibility`."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:12
msgid "Before you can publish public unscoped npm packages, you must sign up for an npm user account."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:22
msgid "Creating an unscoped public package"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:39
msgid "In the package root directory, run the npm init command."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:40
msgid "Respond to the prompts to generate a package.json file. For help naming your package, see :doc:`package-name-guidelines`."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:41
msgid "Create a :doc:`about-package-readme-files` that explains what your package code is and how to use it."
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:47
msgid "Publishing sensitive information to the registry can harm your users, compromise your development infrastructure, be expensive to fix, and put you at risk of legal action. **We strongly recommend removing sensitive information, such as private keys, passwords,** `personally identifiable information`_ (PII), **and credit card data before publishing your package to the registry.**"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:54
msgid "Publishing unscoped public packages"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:60
msgid "To publish your public package to the npm registry, run::"
msgstr ""

#: ../../source/packages-and-modules/creating-and-publishing-unscoped-public-packages.rst:66
msgid "For more information on the publish command, see the :option:`npm publish`."
msgstr ""

#: ../../source/packages-and-modules/creating-node-js-modules.rst:2
msgid "Creating Node.js modules"
msgstr ""

#: ../../source/packages-and-modules/creating-node-js-modules.rst:4
msgid "Node.js modules are a type of package that can be published to npm."
msgstr ""

#: ../../source/packages-and-modules/creating-node-js-modules.rst:9
msgid "Create a package.json file Create the file that will be loaded when your module is required by another application Test your module"
msgstr ""

#: ../../source/packages-and-modules/creating-node-js-modules.rst:14
msgid "Create a package.json file"
msgstr ""

#: ../../source/packages-and-modules/creating-node-js-modules.rst:16
msgid "To create a package.json file, on the command line, in the root directory of your Node.js module, run npm init: For scoped modules, run npm init --scope=@scope-name For unscoped modules, run npm init Provide responses for the required fields (name and version), as well as the main field: name: The name of your module. version: The initial module version. We recommend following semantic versioning guidelines and starting with 1.0.0. main: The name of the file that will be loaded when your module is required by another application. The default name is index.js. For more information on package.json files, see “Creating a package.json file”."
msgstr ""

#: ../../source/packages-and-modules/creating-node-js-modules.rst:26
msgid "Create the file that will be loaded when your module is required by another application"
msgstr ""

#: ../../source/packages-and-modules/creating-node-js-modules.rst:28
msgid "Once your package.json file is created, create the file that will be loaded when your module is required. The default name for this file is index.js."
msgstr ""

#: ../../source/packages-and-modules/creating-node-js-modules.rst:30
msgid "In the file, add a function as a property of the exports object. This will make the function available to other code:"
msgstr ""

#: ../../source/packages-and-modules/creating-node-js-modules.rst:32
msgid "exports.printMsg = function() {"
msgstr ""

#: ../../source/packages-and-modules/creating-node-js-modules.rst:33
msgid "console.log(\"This is a message from the demo package\");"
msgstr ""

#: ../../source/packages-and-modules/creating-node-js-modules.rst:37
msgid "Test your module"
msgstr ""

#: ../../source/packages-and-modules/creating-node-js-modules.rst:39
msgid "Publish your package to npm: For private packages and unscoped packages, use npm publish. For scoped public packages, use npm publish --access public On the command line, create a new test directory outside of your project directory. mkdir test-directory Switch to the new directory: cd /path/to/test-directory In the test directory, install your module: npm install <your-module-name> In the test directory, create a test.js file which requires your module and calls your module as a method. On the command line, run node test.js. The message sent to the console.log should appear."
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:2
msgid "Deprecating and undeprecating packages or package versions"
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:4
msgid "If you no longer wish to maintain a package, or if you would like to encourage users to update to a new or different version, you can :option:`npm deprecate` it. Deprecating a package or version will print a message to the terminal when a user installs it."
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:7
msgid "A deprecation warning or message can say anything. You may wish to include a message encouraging users to update to a specific version, or an alternate, supported package."
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:9
msgid "We strongly recommend deprecating packages or package versions instead of `unpublishing <https://docs.npmjs.com/unpublishing-packages-from-the-registry>`_ them, because unpublishing removes a package from the registry entirely, meaning anyone who relied on it will no longer be able to use it, with no warning."
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:12
msgid "Deprecating an entire package or a single version of a package"
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:15
msgid "Deprecating an entire package"
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:17
msgid "Deprecating an entire package will remove it from search results on the npm website, and a deprecation message will also be displayed on the package page."
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:22
msgid "To deprecate an entire package, run the following command, replacing <package-name> with the name of your package, and \"<message>\" with your deprecation message::"
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:26
msgid "If you have enabled `two-factor authentication <https://docs.npmjs.com/about-two-factor-authentication>`_, add a one-time password to the command, --otp=123456 (where 123456 is the code from your authenticator app)."
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:29
msgid "Deprecating a single version of a package"
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:31
msgid "When you deprecate a version fo a package, a red message will be displayed on that version’s package page, similar to deprecating an entire package."
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:36
msgid "To deprecate a package version, run the following command, replacing **<package-name>** with the name of your package, **<version>** with your version number, and \"**<message>**\" with your deprecation message::"
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:40
msgid "The CLI will also accept version ranges for **<version>**."
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:42
#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:53
#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:67
msgid "If you have two-factor auth, add a one-time password to the command, **--otp=123456** (where *123456* is the code from your authenticator)."
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:45
msgid "Undeprecating a package or version"
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:47
msgid "To undeprecate a package, replace \"**<message>**\" with \"\" (an empty string) in one of the above commands."
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:49
msgid "For example, to undeprecate a package version, run the following command, replacing <package-name> with the name of your package, and <version> with your version number::"
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:56
msgid "Transferring a deprecated package to npm"
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:58
msgid "If you are no longer maintaining a package, but other users depend on it, and you’d like to remove it from your user profile, you can transfer it to the **@npm** user account, which is owned by npm, Inc."
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:60
msgid "Once you transfer a package to the npm account, you will no longer be able to update it."
msgstr ""

#: ../../source/packages-and-modules/deprecating-and-undeprecating-packages-or-package-versions.rst:62
msgid "To transfer a package to the npm user account, run the following two commands in order, replacing <user> with your npm user name, and <package-name> with the package you want to transfer::"
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-globally.rst:2
msgid "Downloading and installing packages globally"
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-globally.rst:4
msgid "If you are using npm 5.2 or higher, we recommend using npx to run packages globally."
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-globally.rst:6
msgid "Installing a package globally allows you to use the code in the package as a set of tools on your local computer."
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-globally.rst:8
msgid "To download and install packages globally, on the command line, run the following command::"
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-globally.rst:12
msgid "If you get an EACCES permissions error, you may need to reinstall npm with a version manager or manually change npm’s default directory. For more information, see “Resolving EACCES permissions errors when installing packages globally”."
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:2
msgid "Downloading and installing packages locally"
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:4
msgid "You can install a package locally if you want to depend on the package from your own module, using something like Node.js require. This is npm install’s default behavior."
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:7
msgid "Installing an unscoped package"
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:9
msgid "Unscoped packages are always public, which means they can be searched for, downloaded, and installed by anyone. To install a public package, on the command line, run"
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:11
msgid "npm install <package_name> This will create the node_modules directory in your current directory (if one doesn’t exist yet) and will download the package to that directory."
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:14
msgid "If there is no package.json file in the local directory, the latest version of the package is installed. If there is a package.json file, npm installs the latest version that satisfies the semver rule declared in package.json."
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:17
msgid "Installed a scoped public package"
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:19
msgid "Scoped public packages can be downloaded and installed by anyone, as long as the scope name is referenced during installation::"
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:24
msgid "Installing a private package"
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:26
msgid "Private packages can only be downloaded and installed by those who have been granted read access to the package. Since private packages are always scoped, you must reference the scope name during installation::"
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:31
msgid "Testing package installation"
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:33
msgid "To confirm that npm install worked correctly, in your module directory, check that a node_modules directory exists and that it contains a directory for the package(s) you installed::"
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:38
msgid "Installed package version"
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:40
msgid "If there is a package.json file in the directory in which npm install is run, npm instalsx the latest version of the package that satisfies the semantic versioning rule declared in package.json."
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:42
msgid "If there is no package.json file, the latest version of the package is installed."
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:45
msgid "Installing a package with dist-tags"
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:47
msgid "Like npm publish, npm install <package_name> will use the latest tag by default."
msgstr ""

#: ../../source/packages-and-modules/downloading-and-installing-packages-locally.rst:49
msgid "To override this behavior, use npm install <package_name>@<tag>. For example, to install the example-package at the version tagged with beta, you would run the following command::"
msgstr ""

#: ../../source/packages-and-modules/index.rst:2
msgid "Packages and modules"
msgstr ""

#: ../../source/packages-and-modules/index.rst:5
msgid "Introduction to packages and modules"
msgstr ""

#: ../../source/packages-and-modules/index.rst:18
msgid "Contributing packages to the registry"
msgstr ""

#: ../../source/packages-and-modules/index.rst:35
msgid "Updating and managing your published packages"
msgstr ""

#: ../../source/packages-and-modules/index.rst:50
msgid "Getting packages from the registry"
msgstr ""

#: ../../source/packages-and-modules/index.rst:65
msgid "Securing your code"
msgstr ""

#: ../../source/packages-and-modules/package-name-guidelines.rst:2
msgid "Package name guidelines"
msgstr ""

#: ../../source/packages-and-modules/package-name-guidelines.rst:4
msgid "When choosing a name for your package, choose a name that"
msgstr ""

#: ../../source/packages-and-modules/package-name-guidelines.rst:6
msgid "is unique"
msgstr ""

#: ../../source/packages-and-modules/package-name-guidelines.rst:7
msgid "is descriptive"
msgstr ""

#: ../../source/packages-and-modules/package-name-guidelines.rst:8
msgid "meets npm policy guidelines. For example, do not give your package an offensive name, and do not use someone else’s trademarked name or violate the npm trademark policy."
msgstr ""

#: ../../source/packages-and-modules/package-name-guidelines.rst:10
msgid "Additionally, when choosing a name for an unscoped package, also choose a name that"
msgstr ""

#: ../../source/packages-and-modules/package-name-guidelines.rst:12
msgid "is not already owned by someone else"
msgstr ""

#: ../../source/packages-and-modules/package-name-guidelines.rst:13
msgid "is not spelled in a similar way to another package name"
msgstr ""

#: ../../source/packages-and-modules/package-name-guidelines.rst:14
msgid "will not confuse others about authorship"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:2
msgid "npm package scope, access level, and visibility"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:4
msgid "Visibility of npm packages depends on the scope (namespace) in which the package is contained, and the access level (private or public) set for the package."
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:7
msgid "To create Org-scoped packages, you must first create an Org. For more information, see :doc:`../orgs/creating-an-org`."
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:10
msgid "Public registry"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:13
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:34
msgid "Scope"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:13
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:34
msgid "Access level"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:13
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:34
msgid "Can view and download"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:13
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:34
msgid "Can write (publish)"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:15
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:17
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:36
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:38
msgid "Org"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:15
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:19
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:36
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:40
msgid "Private"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:15
msgid "Members of a team in the Org with read access to the package"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:15
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:17
msgid "Members of a team in the Org with read and write access to the package"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:17
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:21
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:23
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:38
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:42
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:44
msgid "Public"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:17
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:21
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:23
msgid "Everyone"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:19
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:21
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:40
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:42
msgid "User"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:19
msgid "The package owner and users who have been granted read access to the package"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:19
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:21
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:23
msgid "The package owner and users who have been granted read and write access to the package"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:23
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:44
msgid "Unscoped"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:26
msgid "Only user accounts can create and manage unscoped packages. Orgs can only manage scoped packages."
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:29
msgid "npm Enterprise"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:31
msgid "The following table applies to customers who purchased npm Enterprise after July 26, 2018."
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:36
msgid "Logged-in members of the Enterprise registry who belong to a team in the Org with read access to the package"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:36
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:38
msgid "Logged-in members of the Enterprise registry who belong to a team in the Org with read and write access to the package"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:38
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:42
msgid "All logged-in members of the Enterprise registry"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:40
msgid "The package owner and logged-in members of the Enterprise registry who have been granted read access to the package"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:40
#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:42
msgid "The package owner and logged-in members of the Enterprise registry who have been granted read and write access to the package"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:44
msgid "All users of the Enterprise registry"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:44
msgid "None (see note below)"
msgstr ""

#: ../../source/packages-and-modules/package-scope-access-level-and-visibility.rst:47
msgid "The unscoped namespace on npm Enterprise is reserved for unscoped packages in the public npm registry. To prevent npm Enterprise users from accidentally publishing proprietary code to the public npm registry, where it would be visible to anyone on the internet, we do not allow publishing unscoped packages to npm Enterprise."
msgstr ""

#: ../../source/packages-and-modules/reporting-a-vulnerability-in-an-npm-package.rst:2
msgid "Reporting a vulnerability in an npm package"
msgstr ""

#: ../../source/packages-and-modules/reporting-a-vulnerability-in-an-npm-package.rst:4
msgid "Vulnerability reporting is currently only available for packages in the public npm registry."
msgstr ""

#: ../../source/packages-and-modules/reporting-a-vulnerability-in-an-npm-package.rst:6
msgid "If you find a security vulnerability in an npm package (either yours or someone else’s), you can report it to the npm Security team to help keep the Javascript ecosystem safe."
msgstr ""

#: ../../source/packages-and-modules/reporting-a-vulnerability-in-an-npm-package.rst:9
msgid "Disclosure timeline"
msgstr ""

#: ../../source/packages-and-modules/reporting-a-vulnerability-in-an-npm-package.rst:11
msgid "Vulnerability is reported npm Security triages vulnerability report npm Security notifies package maintainers npm Security publishes security advisory when package maintainers release a fix If maintainers are unresponsive after 45 days, npm Security makes the advisory public"
msgstr ""

#: ../../source/packages-and-modules/reporting-a-vulnerability-in-an-npm-package.rst:18
msgid "Reporting a vulnerability"
msgstr ""

#: ../../source/packages-and-modules/reporting-a-vulnerability-in-an-npm-package.rst:20
msgid "Vulnerability reports are sent to the npm Security team, not the package maintainer."
msgstr ""

#: ../../source/packages-and-modules/reporting-a-vulnerability-in-an-npm-package.rst:21
msgid "Gather information about the vulnerability. On the package page, click Report a vulnerability. On the vulnerability report page, provide information about yourself and the vulnerability: Name: Your name. Email address: An email address the npm Security team can use to contact you. Package name and version: The name of the package that contains the vulnerability. Package version: The version of the package that contains the vulnerability. Include all affected versions. Description of vulnerability: A brief description of the vulnerability and its effects. Include references, commits, and/or code examples that would help our researchers reproduce and investigate the vulnerability. Click Send Report."
msgstr ""

#: ../../source/packages-and-modules/requiring-2fa-for-package-publishing-and-settings-modification.rst:2
msgid "Requiring 2FA for package publishing and settings modification"
msgstr ""

#: ../../source/packages-and-modules/requiring-2fa-for-package-publishing-and-settings-modification.rst:4
msgid "To protect your packages, as a package publisher, you can require everyone who has write access to a package to provide a one-time password in addition to their login token when they publish the package to the registry or modify package settings."
msgstr ""

#: ../../source/packages-and-modules/requiring-2fa-for-package-publishing-and-settings-modification.rst:6
msgid "To publish or modify a package with the two factor authentication (2FA) setting enabled, a publisher must have 2FA enabled on their user account with “Authorization and Publishing” selected. For more information, see “Configuring two-factor authentication”."
msgstr ""

#: ../../source/packages-and-modules/requiring-2fa-for-package-publishing-and-settings-modification.rst:8
msgid "Currently, publishing a package with 2FA enabled on CI is not possible. For more secure CI publishing, enable 2FA on the npm account used for CI, and select \"Authorization\" only, and create a CIDR-restricted token for CI by following the steps in \"Creating and viewing authentication tokens\"."
msgstr ""

#: ../../source/packages-and-modules/requiring-2fa-for-package-publishing-and-settings-modification.rst:11
msgid "Enabling two-factor authentication for package publishing"
msgstr ""

#: ../../source/packages-and-modules/requiring-2fa-for-package-publishing-and-settings-modification.rst:13
msgid "Log in to npm with your user account. npm login dialog with username and password fields left blank Navigate to the package on which you want to require a second factor to publish or modify settings. Click Admin. admin tab on package page Under “Package Access”, select “Require Two Factor Authentication to publish or modify settings” require two factor authentication to publish or modify settings checkbox selected Click Update Package Settings. update package settings button"
msgstr ""

#: ../../source/packages-and-modules/requiring-2fa-for-package-publishing-and-settings-modification.rst:20
msgid "Disabling two-factor authentication for package publishing"
msgstr ""

#: ../../source/packages-and-modules/requiring-2fa-for-package-publishing-and-settings-modification.rst:21
msgid "Log in to npm with your user account. npm login dialog with username and password fields left blank Navigate to the package on which you want to remove the requirement for a second factor to publish or modify settings. Click Admin. admin tab on package page Under “Package Access”, deselect “Require Two Factor Authentication to publish or modify settings” require two factor authentication to publish or modify settings checkbox deselected Click Update Package Settings. update package settings button"
msgstr ""

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:2
msgid "Resolving EACCES permissions errors when installing packages globally"
msgstr ""

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:4
msgid "If you see an EACCES error when you try to install a package globally, you can either:"
msgstr ""

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:6
msgid "Reinstall npm with a node version manager (recommended), or Manually change npm’s default directory"
msgstr ""

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:11
msgid "Reinstall npm with a node version manager"
msgstr ""

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:13
msgid "This is the best way to avoid permissions issues. To reinstall npm with a node version manager, follow the steps in “Downloading and installing Node.js and npm”. You do not need to remove your current version of npm or Node.js before installing a node version manager."
msgstr ""

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:16
msgid "Manually change npm’s default directory"
msgstr ""

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:18
msgid "This section does not apply to Microsoft Windows."
msgstr ""

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:19
msgid "To minimize the chance of permissions errors, you can configure npm to use a different directory. In this example, you will create and use hidden directory in your home directory."
msgstr ""

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:21
msgid "Back up your computer. On the command line, in your home directory, create a directory for global installations:"
msgstr ""

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:23
msgid "mkdir ~/.npm-global"
msgstr ""

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:24
msgid "Configure npm to use the new directory path:"
msgstr ""

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:25
msgid "npm config set prefix '~/.npm-global'"
msgstr ""

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:26
msgid "In your preferred text editor, open or create a ~/.profile file and add this line:"
msgstr ""

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:27
msgid "export PATH=~/.npm-global/bin:$PATH"
msgstr ""

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:28
msgid "On the command line, update your system variables:"
msgstr ""

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:29
msgid "source ~/.profile"
msgstr ""

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:30
msgid "To test your new configuration, install a package globally without using sudo:"
msgstr ""

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:31
msgid "npm install -g jshint"
msgstr ""

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:32
msgid "Instead of steps 2-4, you can use the corresponding ENV variable (e.g. if you don’t want to modify ~/.profile):"
msgstr ""

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:34
msgid "NPM_CONFIG_PREFIX=~/.npm-global"
msgstr ""

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:35
msgid "npx: an alternative to running global commands"
msgstr ""

#: ../../source/packages-and-modules/resolving-eacces-permissions-errors-when-installing-packages-globally.rst:37
msgid "If you are using npm version 5.2 or greater, you may want to consider npx as an alternative way to run global commands, especially if you only need a command occasionally. For more information, see this article about npx."
msgstr ""

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:2
msgid "Searching for and choosing packages to download"
msgstr ""

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:4
msgid "You can use the npm search bar to find packages to use in your projects. npm search uses npms and the npms analyzer; for more information on both, see https://npms.io/about."
msgstr ""

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:7
msgid "Searching for a package"
msgstr ""

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:9
msgid "In the search bar, type a search term and press Enter. As you type, possible choices will appear."
msgstr ""

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:17
msgid "To list packages ranked according to package search rank criteria, in the left sidebar, under “Sort packages”, click the criterion. For example, to sort packages by popularity, click “Popularity”."
msgstr ""

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:18
msgid "In the package search results list, click the name of the package."
msgstr ""

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:21
msgid "Package search rank criteria"
msgstr ""

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:23
msgid "Often, there are dozens or even hundreds of packages with similar names and/or similar purposes. To help you decide the best ones to explore, each package has been ranked according to four criteria using the npms analyzer:"
msgstr ""

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:26
msgid "Popularity"
msgstr ""

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:28
msgid "Popularity indicates how many times the package has been downloaded. This is a strong indicator of packages that others have found to be useful."
msgstr ""

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:31
msgid "Quality"
msgstr ""

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:33
msgid "Quality includes considerations such as the presence of a README file, stability, tests, up-to-date dependencies, custom website, and code complexity."
msgstr ""

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:36
msgid "Maintenance"
msgstr ""

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:38
msgid "Maintenance ranks packages according to the attention they are given by developers. More frequently maintained packages are more likely to work well with the current or upcoming versions of the npm CLI, for example."
msgstr ""

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:41
msgid "Optimal"
msgstr ""

#: ../../source/packages-and-modules/searching-for-and-choosing-packages-to-download.rst:43
msgid "Optimal combines the other three criteria (popularity, quality, maintenance) into one score in a meaningful way."
msgstr ""

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:2
msgid "Specifying dependencies and devDependencies in a package.json file"
msgstr ""

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:4
msgid "To specify the packages your project depends on, you must list them as \"dependencies\" or \"devDependencies\" in your package’s package.json file. When you (or another user) run npm install, npm will download dependencies and devDependencies that are listed in package.json that meet the semantic version requirements listed for each. To see which versions of a package will be installed, use the semver calculator."
msgstr ""

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:6
msgid "\"dependencies\": Packages required by your application in production. \"devDependencies\": Packages that are only needed for local development and testing."
msgstr ""

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:10
msgid "Adding dependencies to a package.json file"
msgstr ""

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:12
msgid "You can add dependencies to a package.json file from the command line or by manually editing the package.json file."
msgstr ""

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:15
msgid "Adding dependencies to a package.json file from the command line"
msgstr ""

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:17
msgid "To add dependencies and devDependencies to a package.json file from the command line, you can install them in the root directory of your package using the --save-prod flag for dependencies (the default behavior of npm install) or the --save-dev flag for devDependencies."
msgstr ""

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:19
msgid "To add an entry to the \"dependencies\" attribute of a package.json file, on the command line, run the following command:"
msgstr ""

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:21
msgid "npm install <package-name> [--save-prod] To add an entry to the \"devDependencies\" attribute of a package.json file, on the command line, run the following command:"
msgstr ""

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:24
msgid "npm install <package-name> --save-dev"
msgstr ""

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:27
msgid "Manually editing the package.json file"
msgstr ""

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:29
msgid "To add dependencies to a package.json file, in a text editor, add an attribute called \"dependencies\" that references the name and semantic version of each dependency:"
msgstr ""

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:42
msgid "To add devDependencies to a package.json file, in a text editor, add an attribute called \"devDependencies\" that references the name and semantic version of each devDependency:"
msgstr ""

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:44
msgid "\"name\": \"my_package\", \"version\": \"1.0.0\", \"dependencies\": {"
msgstr ""

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:47
msgid "\"my_dep\": \"^1.0.0\", \"another_dep\": \"~2.2.0\""
msgstr ""

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:49
msgid "}, \"devDependencies\" : {"
msgstr ""

#: ../../source/packages-and-modules/specifying-dependencies-and-devdependencies-in-a-package-json-file.rst:51
msgid "\"my_test_framework\": \"^3.1.0\". \"another_dev_dep\": \"1.0.0 - 1.2.0\""
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:2
msgid "Transferring a package from a user account to an Org"
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:4
msgid "As a package maintainer, you may want to move a package into an Org so that all members or everyone on a specific team, can publish to the package."
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:6
msgid "If your package is private, the new package owner must also have a paid user account It is possible to transfer ownership of scoped packages, however we don't recommend it because it can create some ownership confusion."
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:7
msgid "Transferring packages between a user and an Org works slightly differently than transferring packages between users. There will be an extra step of adding the package to an Org team. The new maintainer or owner will also need to be the Org owner or team admin."
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:10
msgid "Transferring a package from a user account to an Org on the website"
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:12
msgid "To transfer a package you own or maintain to an Org, follow these steps:"
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:14
msgid "Navigate to the package page for the package you want to transfer, replacing <your-package-name> with the name of your package: https://www.npmjs.com/package/<your-package-name>. On the package Admin tab, under “Maintainers,” enter the npm username of the new maintainer. package page admin tab showing text field to invite maintainers"
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:18
msgid "Click “Invite.” To remove yourself as a maintainer, under the maintainers list, click the “x” next to your username. package page admin tab listing two maintainers"
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:22
msgid "Once this has been done, the Org owner or team admin who is now a maintainer on the package will need to add the package to an Org team."
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:25
msgid "Transferring a package from a user account to an Org on the command line"
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:27
msgid "To transfer a package to an Org using the CLI, on the command line, run the npm owner add and rm commands in order, replacing <their-username> with the npm username of the Org owner or team admin, and <your-username> with your npm username, and <package-name> with the package you want to transfer:"
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:29
msgid "npm owner add npm <their-username> <package-name> npm owner rm <your-username> <package-name> If you have two-factor authentication enabled for writes, add a one-time password to the commands, --otp=123456 (where 123456 is the code from your authenticator application)."
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-an-org.rst:33
msgid "npm owner add npm <their-username> <package-name> --otp=123456 npm owner rm <your-username> <package-name> --otp=123456 .. note:: After this is done, the Org owner or team admin will be able to add the package to a team in their Org, using the access command."
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:2
msgid "Transferring a package from a user account to another user account"
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:4
msgid "As a package owner or maintainer, you can transfer ownership of a package you no longer wish to maintain to another trusted npm user on either the npm website or the command line."
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:6
msgid "Transferring a package from a user to an Org, or an Org to a user works differently than this process."
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:8
msgid "For more information on how npm support handles package name disputes between users, you can refer to npm’s package name dispute policy."
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:10
msgid "If your package is scoped and private, the new package owner must also have a paid user account. It is possible to transfer ownership of user-scoped packages, however we don't recommend it because it can create some ownership confusion."
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:13
msgid "Transferring a package from a user account to another user account on the website"
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:15
msgid "To transfer a package you own or maintain to another user, follow these steps:"
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:17
msgid "Navigate to the package page for the package you want to transfer, replacing <your-package-name> with the name of your package: https://www.npmjs.com/package/<your-package-name>."
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:18
msgid "On the package Admin tab, under “Maintainers”, enter the npm username of the new maintainer."
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:23
msgid "Click “Invite.”"
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:24
msgid "To remove yourself as a maintainer, under the maintainers list, click the “x” next to your username."
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:30
msgid "Transferring a package from a user account to another user account on the command line"
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:32
msgid "To transfer a package to another npm user using the CLI, run the npm owner add and rm commands in order, replacing <their-username> with the other user’s npm username, <your-username> with your npm username, and <package-name> with the package you want to transfer::"
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-a-user-account-to-another-user-account.rst:37
msgid "If you have two-factor authentication enabled for writes, add a one-time password to the command, --otp=123456 (where 123456 is the code from your authenticator application)."
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-an-org-to-a-user-account.rst:2
msgid "Transferring a package from an Org to a user account"
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-an-org-to-a-user-account.rst:4
msgid "You may also want to move a package out of an Org to a user account. For example, if you no longer want the package to be controlled by an Org, and would like to transfer it to a user."
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-an-org-to-a-user-account.rst:6
msgid "If a package has been added to an Org team, adding a collaborator using the package admin tab or the owner CLI command will result in a team not found error."
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-an-org-to-a-user-account.rst:8
msgid "In this case, you won’t be able to add a collaborator, then remove the package from a team."
msgstr ""

#: ../../source/packages-and-modules/transferring-a-package-from-an-org-to-a-user-account.rst:10
msgid "If you need to transfer a package from an Org to a user account, contact npm Support."
msgstr ""

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:2
msgid "Uninstalling packages and dependencies"
msgstr ""

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:4
msgid "If you no longer need to use a package in your code, we recommend uninstalling it and removing it from your project’s dependencies."
msgstr ""

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:7
#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:109
msgid "Uninstalling local packages"
msgstr ""

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:10
msgid "Removing a local package from your node_modules directory"
msgstr ""

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:12
msgid "To remove a package from your **node_modules** directory, on the command line, use the :option:`npm uninstall` command. Include the scope if the package is scoped."
msgstr ""

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:16
#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:43
#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:83
msgid "Unscoped package"
msgstr ""

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:23
#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:50
#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:90
msgid "Scoped package"
msgstr ""

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:37
msgid "Removing a local package from the package.json dependencies"
msgstr ""

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:39
msgid "To remove a package from the dependencies in **package.json**, use the **--save** flag. Include the scope if the package is scoped."
msgstr ""

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:64
msgid "If you installed a package as a \"*devDependency*\" (i.e. with **--save-dev**), use **--save-dev** to uninstall it: ``npm uninstall --save-dev package_name``"
msgstr ""

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:68
msgid "Confirming local package uninstallation"
msgstr ""

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:70
msgid "To confirm that ``npm uninstall`` worked correctly, check that the **node_modules** directory no longer contains a directory for the uninstalled package(s)."
msgstr ""

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:73
msgid "Unix system (such as OSX): ``ls node_modules``"
msgstr ""

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:74
msgid "Windows systems: ``dir node_modules``"
msgstr ""

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:77
#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:113
msgid "Uninstalling global packages"
msgstr ""

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:79
msgid "To uninstall an unscoped global package, on the command line, use the **uninstall** command with the **-g** flag. Include the scope if the package is scoped."
msgstr ""

#: ../../source/packages-and-modules/uninstalling-packages-and-dependencies.rst:99
msgid "For example, to uninstall a package called **jshint**, run:"
msgstr ""

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:2
msgid "Unpublishing packages from the registry"
msgstr ""

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:4
msgid "In order to permanently remove a package (or package version) from the npm registry, as a package owner or collaborator, you can unpublish it from the the command line within 72 hours of the initial publish."
msgstr ""

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:6
msgid "If you want to unpublish a package after 72 hours have passed, contact npm Support. For more information about why we don’t allow users to unpublish packages after 72 hours, see our unpublish policy."
msgstr ""

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:8
msgid "If you are using npm Enterprise, you can have an admin contact npm Enterprise Support at enterprise@npmjs.com to increase the unpublishing window for your instance beyond 72 hours."
msgstr ""

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:9
msgid "Unpublishing a package using the CLI or by contacting npm support is the only way to remove a package or version from the registry. For example, removing all the collaborators or teams from the package will not unpublish it."
msgstr ""

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:11
msgid "If you are no longer interested in maintaining a package, but want it to remain available for users to install, or if your package has dependents, we’d recommend deprecating it. To learn about how to deprecate a package, see “Deprecating and undeprecating packages or package versions”."
msgstr ""

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:13
msgid "Unpublishing a package permanently removes the package from the registry so it is no longer available for other users to install. Once a package is unpublished, it cannot be republished. If you’ve unpublished a package by mistake, we’d recommend publishing again under a different name, or for unpublished versions, bumping the version number and publishing again."
msgstr ""

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:15
msgid "You might want to unpublish a package because you:"
msgstr ""

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:17
msgid "Published something accidentally. Wanted to test npm. Published content you didn’t intend to be public. Wanted to rename a package. (The only way to rename a package is to re-publish it under a new name) .. note:: Since various systems rely on package-name@version being unique, you cannot reuse a published version by unpublishing and re-publishing it. If you want to reuse a version number, we recommend publishing a minor version update instead."
msgstr ""

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:24
msgid "Unpublishing an entire package"
msgstr ""

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:26
msgid "To unpublish an entire package, run the following command, replacing <package-name> with the name of your package:"
msgstr ""

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:28
msgid "npm unpublish <package-name> -f If you have two-factor authentication enabled for writes, you will need to add a one-time password to the unpublish command, --otp=123456 (where 123456 is the code from your authenticator app)."
msgstr ""

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:32
msgid "Unpublishing a single version of a package"
msgstr ""

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:34
msgid "To unpublish a single version of a package, run the following command, replacing <package-name> with the name of your package, and <version> with your version number:"
msgstr ""

#: ../../source/packages-and-modules/unpublishing-packages-from-the-registry.rst:36
msgid "npm unpublish <package-name>@<version> If you have two-factor auth, add a one-time password to the command, --otp=123456 (where 123456 is the code from your authenticator)."
msgstr ""

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:2
msgid "Updating packages downloaded from the registry"
msgstr ""

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:4
msgid "Updating local and global packages you downloaded from the registry helps keep your code and tools stable, usable, and secure."
msgstr ""

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:7
msgid "Updating local packages"
msgstr ""

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:9
msgid "We recommend regularly updating the local packages your project depends on to improve your code as improvements to its dependencies are made."
msgstr ""

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:11
msgid "Navigate to the root directory of your project and ensure it contains a package.json file::"
msgstr ""

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:15
msgid "In your project root directory, run the update command::"
msgstr ""

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:19
msgid "To test the update, run the outdated command. There should not be any output::"
msgstr ""

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:24
msgid "Updating globally-installed packages"
msgstr ""

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:27
msgid "If you are using npm version 2.6.0 or less, run this script to update all outdated global packages. However, please consider upgrading to the latest version of npm:"
msgstr ""

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:36
msgid "Determining which global packages need updating"
msgstr ""

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:38
msgid "To see which global packages need to be updated, on the command line, run::"
msgstr ""

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:43
msgid "Updating a single global package"
msgstr ""

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:45
msgid "To update a single global package, on the command line, run::"
msgstr ""

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:50
msgid "Updating all globally-installed packages"
msgstr ""

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:52
msgid "To update all global packages, on the command line, run::"
msgstr ""

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:61
msgid "CLI commands"
msgstr ""

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:63
msgid ":option:`npm update`"
msgstr ""

#: ../../source/packages-and-modules/updating-packages-downloaded-from-the-registry.rst:64
msgid ":option:`npm outdated`"
msgstr ""

#: ../../source/packages-and-modules/updating-your-published-package-version-number.rst:2
msgid "Updating your published package version number"
msgstr ""

#: ../../source/packages-and-modules/updating-your-published-package-version-number.rst:4
msgid "When you make significant changes to a published package, we recommend updating the version number to communicate the extent of the changes to others who rely on your code."
msgstr ""

#: ../../source/packages-and-modules/updating-your-published-package-version-number.rst:6
msgid "If you have linked a git repository to a package, updating the package version number will also add a tag with the updated release number to the linked git repository."
msgstr ""

#: ../../source/packages-and-modules/updating-your-published-package-version-number.rst:8
msgid "To change the version number in package.json, on the command line, in the package root directory, run the following command, replacing <update_type> with one of the semantic versioning release types (patch, major, or minor)::"
msgstr ""

#: ../../source/packages-and-modules/updating-your-published-package-version-number.rst:12
msgid "Run npm publish."
msgstr ""

#: ../../source/packages-and-modules/updating-your-published-package-version-number.rst:13
msgid "Go to your package page (https://npmjs.com/package/<package>) to check that the package version has been updated."
msgstr ""

#: ../../source/packages-and-modules/updating-your-published-package-version-number.rst:15
msgid "For more information on :option:`npm version`, see the CLI documentation."
msgstr ""

#: ../../source/packages-and-modules/using-deprecated-packages.rst:2
msgid "Using deprecated packages"
msgstr ""

#: ../../source/packages-and-modules/using-deprecated-packages.rst:4
msgid "If you install a package, and it prints a deprecation message, we recommend following the instructions, if possible."
msgstr ""

#: ../../source/packages-and-modules/using-deprecated-packages.rst:6
msgid "That might mean updating to a new version, or updating your package dependencies."
msgstr ""

#: ../../source/packages-and-modules/using-deprecated-packages.rst:11
msgid "A deprecation message doesn’t always mean the package or version is unusable; it may mean the package is unmaintained and will no longer be updated by the publisher."
msgstr ""

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:2
msgid "Using npm packages in your projects"
msgstr ""

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:4
msgid "Once you have :doc:`downloading-and-installing-packages` in node_modules, you can use it in your code."
msgstr ""

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:7
msgid "Using unscoped packages in your projects"
msgstr ""

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:10
#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:48
msgid "Node.js module"
msgstr ""

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:12
msgid "If you are creating a Node.js module, you can use a package in your module by passing it as an argument to the **require** function."
msgstr ""

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:15
msgid "Example: using lodash in a Node.js module"
msgstr ""

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:17
msgid "For example, to use the lodash package in a Node.js module, in the root directory of the module, create a file named **index.js** with the following contents:"
msgstr ""

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:27
msgid "Run the code using **node index.js**. It should output [2, 3]."
msgstr ""

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:30
#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:58
msgid "package.json file"
msgstr ""

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:32
msgid "In **package.json**, list the package under dependencies. You can optionally include a semantic version."
msgstr ""

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:43
msgid "Using scoped packages in your projects"
msgstr ""

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:45
msgid "To use a scoped package, simply include the scope wherever you use the package name."
msgstr ""

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:50
msgid "When requiring a scoped package in the index.js file of your Node.js module, you must reference the scope in addition to the package name:"
msgstr ""

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:60
msgid "In **package.json**:"
msgstr ""

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:71
msgid "Resolving “Cannot find module” errors"
msgstr ""

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:73
msgid "If you have not properly installed a package, you will receive an error when you try to use it in your code. For example, if you reference the **lodash** package without installing it, you would see the following error:"
msgstr ""

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:83
msgid "To resolve “cannot find module” errors, run the appropriate **install** command in the same directory as your project’s **index.js** file:"
msgstr ""

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:85
msgid "For scoped packages, run ``npm install <@scope/package_name>``"
msgstr ""

#: ../../source/packages-and-modules/using-npm-packages-in-your-projects.rst:86
msgid "For unscoped packages, run ``npm install <package_name>``"
msgstr ""

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:2
msgid "Verifying the PGP signature of a package from the npm public registry"
msgstr ""

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:4
msgid "To ensure the integrity of a package version you download from the npm public registry, you can manually verify the PGP signature of the package."
msgstr ""

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:6
msgid "Since fully verifying signatures on Keybase requires rechecking proofs (which requires network activity) and is therefore expensive, we recommend only verifying signatures if it is absolutely necessary -- for example, when verifying a deploy artifact, or when initially storing a package in your cache."
msgstr ""

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:9
msgid "Prerequisites"
msgstr ""

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:11
msgid "Install Keybase from https://keybase.io/download Create a Keybase account on https://keybase.io Follow “npmregistry” on Keybase. Download a local copy of the npm public registry’s public PGP key."
msgstr ""

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:17
msgid "Verifying npm signatures for the public registry"
msgstr ""

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:19
msgid "The following steps use version 1.4.3 of the light-cycle package as an example."
msgstr ""

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:20
msgid "On the command line, fetch the signature for the package version you want and save it in a file:"
msgstr ""

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:21
msgid "$ http GET https://registry.npmjs.org/light-cycle | json \"versions['1.4.3'].dist.npm-signature\" > sig-to-check"
msgstr ""

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:22
msgid "Get the integrity field for that version (example below includes response):"
msgstr ""

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:23
msgid "$ http GET https://registry.npmjs.org/light-cycle | json \"versions['1.4.3'].dist.integrity\""
msgstr ""

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:24
#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:29
msgid "Example response:"
msgstr ""

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:26
msgid "sha512-sFcuivsDZ99fY0TbvuRC6CDXB8r/ylafjJAMnbSF0y4EMM1/1DtQo40G2WKz1rBbyiz4SLAc3Wa6yZyC4XSGOQ=="
msgstr ""

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:27
msgid "Construct the string that ties the unique package name and version to the integrity string (example below includes response):"
msgstr ""

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:28
msgid "$ keybase pgp verify --signed-by npmregistry -d sig-to-check -m 'light-cycle@1.4.3:sha512-sFcuivsDZ99fY0TbvuRC6CDXB8r/ylafjJAMnbSF0y4EMM1/1DtQo40G2WKz1rBbyiz4SLAc3Wa6yZyC4XSGOQ=='"
msgstr ""

#: ../../source/packages-and-modules/verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry.rst:31
msgid "▶ INFO Identifying npmregistry ✔ <tracked> public key fingerprint: 0963 1802 8A2B 58C8 4929 D8E1 3D4D 5B12 0276 566A You last followed npmregistry on 2018-04-10 21:21:57 PDT ✔ <tracked> admin of DNS zone npmjs.com: found TXT entry keybase-site-verification=iK3pjpRBkv-CIJ4PHtWL4TTcFXMpPiwPynatKl3oWO4 ✔ <tracked> \"npmjs\" on twitter: https://twitter.com/npmjs/status/981288548845240320 [cached 2018-04-12 13:18:31 PDT; but got a retryable error (API network error: Get https://twitter.com/npmjs/status/981288548845240320: net/http: request canceled (Client.Timeout exceeded while awaiting headers) (code=170)) this time around] ✔ <tracked> admin of DNS zone npmjs.org: found TXT entry keybase-site-verification=Ls8jN55i6KesjiX91Ck79bUZ17eA-iohmw2jJFM16xc Signature verified. Signed by npmregistry 7 minutes ago (2018-04-13 15:00:37 -0700 PDT). PGP Fingerprint: 096318028a2b58c84929d8e13d4d5b120276566a."
msgstr ""

